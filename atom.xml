<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Keith&#39;s blog</title>
  <subtitle>技术狂热粉</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://madordie.github.io/"/>
  <updated>2016-08-30T03:18:54.000Z</updated>
  <id>https://madordie.github.io/</id>
  
  <author>
    <name>Keith</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ui-source-and-code-decoupling</title>
    <link href="https://madordie.github.io/2016/08/28/ui-source-and-code-decoupling/"/>
    <id>https://madordie.github.io/2016/08/28/ui-source-and-code-decoupling/</id>
    <published>2016-08-28T04:16:02.000Z</published>
    <updated>2016-08-30T03:18:54.000Z</updated>
    
    <content type="html">&lt;p&gt;个人对UI素材和代码的解耦的一些粗浅的看法。比如：解耦方案、是否该解耦。&lt;/p&gt;
&lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;  群里听到有人讨论这个话题，当时觉得比较新鲜，就十分好奇的请教了两位经验丰富的@kkk、@AK，虽然未得其中真髓，但是也得到一些自己的思考。总结一下两人的方案，以及自己的思考，&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;  代码内部引入的素材属于设计管理，代码则是码农管理，从这个角度来说两个工做都有码农管理则是一种耦合，为了减轻设计师频繁更换素材而带来的码农的无休止的协作，所以可以进行着方面的解藕。&lt;/p&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h2&gt;&lt;p&gt;  哪坏哪补。有问题就会有解决方案。群中说的&lt;a href=&quot;#方案一&quot;&gt;方案一&lt;/a&gt;由于当时不方便，所以并没有弄明白。&lt;a href=&quot;#方案二&quot;&gt;方案二&lt;/a&gt;、&lt;a href=&quot;#方案三&quot;&gt;方案三&lt;/a&gt;是自己的一些解决方案。&lt;/p&gt;
&lt;h3 id=&quot;方案一&quot;&gt;&lt;a href=&quot;#方案一&quot; class=&quot;headerlink&quot; title=&quot;方案一&quot;&gt;&lt;/a&gt;&lt;a name=&quot;方案一&quot;&gt;方案一&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;  群中讨论的是素材、代码放在一个仓库，分支不同，使用脚本进行整合(其实并没有想明白怎么弄。。下周请教一下)。另外，@夏汁泡泡 还有一个简化就是这个处理的脚本可以放在&lt;a href=&quot;https://developer.apple.com/library/ios/recipes/xcode_help-project_editor/Articles/AddingaRunScriptBuildPhase.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Add Run Script Build Phase&lt;/a&gt;，暴露出来已知的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;操作麻烦&lt;/li&gt;
&lt;li&gt;图片可能重复&lt;/li&gt;
&lt;li&gt;命名规范&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;方案二&quot;&gt;&lt;a href=&quot;#方案二&quot; class=&quot;headerlink&quot; title=&quot;方案二&quot;&gt;&lt;/a&gt;&lt;a name=&quot;方案二&quot;&gt;方案二&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;  按照Pods的集成方式，可以将素材看作一个第三方库，直接将素材做成一个bundle，采用Pods私有库或者其他方式放入工程。暴露出来已知的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么时候更新这个bundle&lt;/li&gt;
&lt;li&gt;多人合作时这个bundle冲突问题&lt;/li&gt;
&lt;li&gt;命名规范&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;方案三&quot;&gt;&lt;a href=&quot;#方案三&quot; class=&quot;headerlink&quot; title=&quot;方案三&quot;&gt;&lt;/a&gt;&lt;a name=&quot;方案三&quot;&gt;方案三&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;  工程使用&lt;code&gt;xcassets&lt;/code&gt;进行素材打包，然后使用子库进行持续集成。这样，设计师的素材可以放在另一个独立素材仓库，内含更新脚本，直接将素材生成对应的&lt;code&gt;xcassets&lt;/code&gt;结构，并上传至子库。这样设计师做完素材直接扔在文件夹中，自动或手动跑一下脚本即可更新到素材仓库。暴露出来已知的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于没有测试过，不知道如果素材比较多的话会不会发生冲突。因该不会吧，都是加文件或者修改😂 (有时间去研究一下之后更新)&lt;/li&gt;
&lt;li&gt;命名规范的问题依旧存在&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;思考&quot;&gt;&lt;a href=&quot;#思考&quot; class=&quot;headerlink&quot; title=&quot;思考&quot;&gt;&lt;/a&gt;思考&lt;/h2&gt;&lt;p&gt;  好了，重要的问题来了，上面的问题都是存在命名规范的问题。此问题如何化解呢？&lt;/p&gt;
&lt;p&gt;  素材的引入需根据素材名写入代码中，那么如何才能不用素材名呢？那时不可能的😝，毕竟你要有一个唯一标识符去标志着一个素材。可能有的人说可以做一个json用来保存代码的命名和素材的命名呀，我只想说MDZZ，那不是有两套需要维护的命名规则么。。得不偿失。&lt;/p&gt;
&lt;p&gt;  这个命名的问题其实不能复杂化。参看iOS的项目国际化操作，使用一个key作为文案的唯一标识符，需要显示该文案，通过这个唯一标识符就能直接取到。回头看下素材，是不是也能炮制一个呢？&lt;/p&gt;
&lt;p&gt;  如果素材名字有统一的规则，就不需要这样的key作为统一标识符，直接使用素材名字即可，这样维护一套素材命名规则总比两套更容易维护。所以，直接使用素材名即可。&lt;/p&gt;
&lt;p&gt;  如果素材不能统一命名规则，那么这样的对照文件存在也是很不错的。话又说回来，要进行UI素材和代码的解耦，素材名都不能统一，还如何解耦，此问题也不存在了。。&lt;/p&gt;
&lt;p&gt;  退一步，我们的目的是让素材让设计师自己维护，代码不去维护素材。设计师和码农的耦合在于图片本身的交换比较烦。不论采用哪种解耦方案，都是把图片的耦合转换为图片名字的耦合(也可以理解为素材对应的KEY的耦合)。结果是 &lt;strong&gt; 为了解除一个耦合,而引入了一个新的耦合 &lt;/strong&gt; 。个人认为这样是不靠谱的。。除非有强力的人去推动设计师走标准的命名。&lt;/p&gt;
&lt;h2 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h2&gt;&lt;p&gt;  其实这个问题大可不必纠结，如果有强力的人去推动这个标准持续走下去那么这个问题才有价值。如果真的要进行题中说的代码解耦的话，我认为第三种是比较靠谱的。 &lt;strong&gt; 命名标准、命名标准、命名标准… &lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;  经验有限，如果有更好的方案，望告知。拜谢！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;个人对UI素材和代码的解耦的一些粗浅的看法。比如：解耦方案、是否该解耦。&lt;/p&gt;
&lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;  群里听到有人讨论这个话题，当时觉得比较新鲜，就十
    
    </summary>
    
    
      <category term="iOS" scheme="https://madordie.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>开发小记</title>
    <link href="https://madordie.github.io/2016/07/28/note/"/>
    <id>https://madordie.github.io/2016/07/28/note/</id>
    <published>2016-07-28T06:52:22.000Z</published>
    <updated>2016-08-28T04:16:11.000Z</updated>
    
    <content type="html">&lt;p&gt;开发中的小笔记。记录开发中的点滴滴点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NAN&lt;ul&gt;
&lt;li&gt;当&lt;code&gt;NSUInteger 0 - 1&lt;/code&gt;时，运算结果为 NAN，iOS中有一个宏&lt;code&gt;isnan(x)&lt;/code&gt;返回是否为nan。另外这里有一篇文章&lt;a href=&quot;http://blog.csdn.net/toss156/article/details/7101885&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Objective-C 中 判断 NaN&lt;/a&gt;大致记录了一下&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  math.h  #56&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#if defined(__GNUC__)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#   define    HUGE_VAL     __builtin_huge_val()&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#   define    HUGE_VALF    __builtin_huge_valf()&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#   define    HUGE_VALL    __builtin_huge_vall()&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#   define    NAN          __builtin_nanf(&lt;span class=&quot;meta-string&quot;&gt;&quot;0x7fc00000&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#   define    HUGE_VAL     1e500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#   define    HUGE_VALF    1e50f&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#   define    HUGE_VALL    1e5000L&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#   define    NAN          __nan()&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#endif&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;另外，NAN不能直接判断 == 需要调用下面的宏。否则会发生莫名其妙的问题&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//  math.h  #178&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define isnan(x)                                                         \&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ( &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(x) == &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;)  ? __inline_isnanf((&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;)(x))          \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    : &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(x) == &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;) ? __inline_isnand((&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)(x))         \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                  : __inline_isnanl((&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)(x)))&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;论项目架构设计的重要性 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规范化&lt;/li&gt;
&lt;li&gt;筛选的坑 &lt;/li&gt;
&lt;li&gt;常见布局BUG &lt;/li&gt;
&lt;li&gt;线程安全&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;百度地图的坑&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置经纬度缓慢&lt;/li&gt;
&lt;li&gt;刷新缓慢&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;选择图片时候默认方法选择不到系统的云端图片，但是默认单张选择器却可以！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;16G手机存储空间不够，图片转到了云端，会出现相册中的照片无法选择的情况&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;开发中的小笔记。记录开发中的点滴滴点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NAN&lt;ul&gt;
&lt;li&gt;当&lt;code&gt;NSUInteger 0 - 1&lt;/code&gt;时，运算结果为 NAN，iOS中有一个宏&lt;code&gt;isnan(x)&lt;/code&gt;返回是否为nan。另外这里有一篇文章&lt;a 
    
    </summary>
    
      <category term="笔记" scheme="https://madordie.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>项目中的UITableView</title>
    <link href="https://madordie.github.io/2016/07/27/about-project-tableview/"/>
    <id>https://madordie.github.io/2016/07/27/about-project-tableview/</id>
    <published>2016-07-27T05:30:45.000Z</published>
    <updated>2016-08-29T02:01:57.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;论项目架构设计的重要性&quot;&gt;&lt;a href=&quot;#论项目架构设计的重要性&quot; class=&quot;headerlink&quot; title=&quot;论项目架构设计的重要性&quot;&gt;&lt;/a&gt;论项目架构设计的重要性&lt;/h1&gt;&lt;p&gt;前两天听到有人说多人合作的项目并不需要处理很多事情，只需要处理好自己的那部分业务逻辑就好了。感觉这是一个很不负责任的说法。作为一个APP的开发者，自己负责的事其中的一个模块，但是都是这个APP的开发者，也要往里面塞代码，如果每个人都用不同的逻辑风格去组织代码。那么整个项目就是一坨坨坨，这个坨会影响项目的演进、日后的发展。当然有的是看不出来的，比如说：当一个请假的人写的代码出现一个BUG，需要修复上线的时候，对于不同的代码风格，需要找到问题的关键代码，这个过程是撕心裂肺的，但是如果同一套代码风格，心中就会有一个大致的位置，去修改时候就会比较快速的定位问题。&lt;/p&gt;
&lt;p&gt;对于无法接受通用的代码风格，只钟爱自己一种代码风格的程序员来说：如果你是刚转行过来的，那么你要走的路还有很长，踩的坑还有很多。积极主动的踩坑，才能不会掉队。&lt;/p&gt;
&lt;h1 id=&quot;从协议入手&quot;&gt;&lt;a href=&quot;#从协议入手&quot; class=&quot;headerlink&quot; title=&quot;从协议入手&quot;&gt;&lt;/a&gt;从协议入手&lt;/h1&gt;&lt;p&gt;&lt;code&gt;UITableView&lt;/code&gt;是项目中非常常见的iOS高级控件，在页面中所有相似的页面几乎都是由该控件进行完成。其广泛运用的不止是使用方便，最主要的是内部的复用优化也是相当给力的。&lt;/p&gt;
&lt;h2 id=&quot;协议模式下的UITableView&quot;&gt;&lt;a href=&quot;#协议模式下的UITableView&quot; class=&quot;headerlink&quot; title=&quot;协议模式下的UITableView&quot;&gt;&lt;/a&gt;协议模式下的UITableView&lt;/h2&gt;&lt;p&gt;&lt;code&gt;UITableView&lt;/code&gt;是典型的 &lt;strong&gt;协议-代理模式&lt;/strong&gt; ，比例&lt;code&gt;id &amp;lt;UITableViewDataSource&amp;gt; dataSource&lt;/code&gt;和&lt;code&gt;id &amp;lt;UITableViewDelegate&amp;gt; delegate&lt;/code&gt;，所以使用对于这种比较规整的列表来说把协议继续扩展到下一级也是可以的。&lt;/p&gt;
&lt;p&gt;为了统一&lt;code&gt;UITableView.dataSource&lt;/code&gt;和&lt;code&gt;UITableView.delegate&lt;/code&gt;，构建如下协议：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  直接填充Cell的cellModel&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@protocol&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CellModelProtocol&lt;/span&gt; &amp;lt;&lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)cellClassName;  &lt;span class=&quot;comment&quot;&gt;//  cellModel绑定的类名&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)cellModelForCell:(&lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt; *)cell; &lt;span class=&quot;comment&quot;&gt;//  cellModel填充上面绑定的cell&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么只需要在代理中做如下设置:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#pragma mark &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;UITableViewDelegate, UITableViewDataSource&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)numberOfSectionsInTableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt;*)tableView&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt;*)tableView numberOfRowsInSection:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)section&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.viewModel.dataSource.count;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt;*)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt;*)tableView cellForRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt;*)indexPath&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;CellModelProtocol&amp;gt; cellModel = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.viewModel.dataSource[indexPath.row];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt;* cell = [tableView dequeueReusableCellWithIdentifier:[cellModel cellClassName]];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      cell.frame = tableView.bounds;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      [cellModel cellModelForCell:cell];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      [cell sizeToFit];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cell;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt;*)tableView heightForRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt;*)indexPath&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;CellModelProtocol&amp;gt; cellModel = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.viewModel.dataSource[indexPath.row];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt;* cell = [tableView ktj_cacheHeightCellForReuseIDFA:[cellModel cellClassName]];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      [cellModel cellModelForCell:cell];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [cell sizeThatFits:tableView.bounds.size].height;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而在cell中，默认在&lt;code&gt;sizeThatFits:&lt;/code&gt;中进行布局的设置和算高即可。如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  xxxCell.m&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGSize&lt;/span&gt;)sizeThatFits:(&lt;span class=&quot;built_in&quot;&gt;CGSize&lt;/span&gt;)size &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt; frame = &lt;span class=&quot;built_in&quot;&gt;CGRectZero&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//  根据Cell的实际内容进行布局并设置高度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    frame.origin = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    frame.size = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.infoLabel sizeThatFits:&lt;span class=&quot;built_in&quot;&gt;CGSizeMake&lt;/span&gt;(size.width-frame.origin.x*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, size.height)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.infoLabel.frame = frame;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    size.height = &lt;span class=&quot;built_in&quot;&gt;CGRectGetMaxY&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.infoLabel.frame)+frame.origin.y;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; size;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果cell采用autolayout，则计算采用&lt;a href=&quot;https://github.com/forkingdog/UITableView-FDTemplateLayoutCell/blob/e3ee86ce419d18d3ff735056f1474f2863e43003/Classes/UITableView%2BFDTemplateLayoutCell.m&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UITableView-FDTemplateLayoutCell&lt;/a&gt;的计算方法。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UITableViewCell&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;KTJCellAutoLayoutForSize&lt;/span&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  autolout布局计算高度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGSize&lt;/span&gt;)ktj_ALCellSizeThatFits:(&lt;span class=&quot;built_in&quot;&gt;CGSize&lt;/span&gt;)size &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Add a hard width constraint to make dynamic content views (like labels) expand vertically instead&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// of growing horizontally, in a flow-layout manner.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLayoutConstraint&lt;/span&gt; *tempWidthConstraint =&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;built_in&quot;&gt;NSLayoutConstraint&lt;/span&gt; constraintWithItem:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contentView&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                 attribute:&lt;span class=&quot;built_in&quot;&gt;NSLayoutAttributeWidth&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                 relatedBy:&lt;span class=&quot;built_in&quot;&gt;NSLayoutRelationEqual&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    toItem:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                 attribute:&lt;span class=&quot;built_in&quot;&gt;NSLayoutAttributeNotAnAttribute&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                multiplier:&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                  constant:size.width];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contentView addConstraint:tempWidthConstraint];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Auto layout engine does its math&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    size = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contentView systemLayoutSizeFittingSize:&lt;span class=&quot;built_in&quot;&gt;UILayoutFittingCompressedSize&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    size.height += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contentView removeConstraint:tempWidthConstraint];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; size;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外在&lt;code&gt;&amp;lt;UITableViewDelegate, UITableViewDataSource&amp;gt;&lt;/code&gt;中只写了1组，只有cell，没有header、footer的情况，如果需要，炮制即可。&lt;/p&gt;
&lt;p&gt;说一下这个其中的&lt;code&gt;ktj_cacheHeightCellForReuseIDFA:&lt;/code&gt;类别方法。这个方法是为了算高进行缓存的一个cell，这个cell保存在 &lt;code&gt;NSCache&lt;/code&gt;中。所以为了统一，需要在数据初始化时候注册所有的cell。当然你也可以根据类名直接生成，这个自主决定。&lt;/p&gt;
&lt;p&gt;说到算高，需要说一下这其中的&lt;code&gt;dequeueReusableCellWithIdentifier:&lt;/code&gt;方法。该方法是从tableView的缓存池中取出指定ID的cell。请注意是 &lt;strong&gt;取出&lt;/strong&gt; ，并且&lt;code&gt;UITableView&lt;/code&gt;并没有暴露出如何放进缓存池，也没有必要暴露出放进缓存池的方法。而且&lt;code&gt;UITableView&lt;/code&gt;只有一个地方能够接收Cell那就是&lt;code&gt;tableView:cellForRowAtIndexPath:&lt;/code&gt;。所以请保证&lt;code&gt;dequeueReusableCellWithIdentifier:&lt;/code&gt;取出的方法 &lt;strong&gt;需要通过&lt;code&gt;tableView:cellForRowAtIndexPath:&lt;/code&gt;返回给&lt;code&gt;UITableView&lt;/code&gt;&lt;/strong&gt; 。这就是我上面说的&lt;code&gt;ktj_cacheHeightCellForReuseIDFA:&lt;/code&gt;方法为何要做一个 cache去缓存我取出的cell，目的是为了减少cell的浪费。&lt;/p&gt;
&lt;p&gt;同理，对于&lt;code&gt;UITableView&lt;/code&gt;的&lt;code&gt;headerView&lt;/code&gt;、&lt;code&gt;footerView&lt;/code&gt;来说，可以炮制以上协议、方法。不再赘述&lt;/p&gt;
&lt;p&gt;PS.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/forkingdog/UITableView-FDTemplateLayoutCell&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UITableView-FDTemplateLayoutCell&lt;/a&gt;: &lt;a href=&quot;https://github.com/sunnyxx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sunnyxx&lt;/a&gt;打造的优化UITableView的一个库，6000的star，很赞。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;规范化的代码风格&quot;&gt;&lt;a href=&quot;#规范化的代码风格&quot; class=&quot;headerlink&quot; title=&quot;规范化的代码风格&quot;&gt;&lt;/a&gt;规范化的代码风格&lt;/h1&gt;&lt;p&gt;对于多人开发，最崩溃的事情就要数去读别人的代码。就算不是多人开发，接手别人的代码也是让人最崩溃的事情。如果有不用考虑这件事的叫我！&lt;/p&gt;
&lt;p&gt;不同的公司可以有不同的代码风格，但是一个公司的代码风格需要保持一致，这样就不会出现一人请假，无人能接受项目的尴尬局面，就算能接，也是需要为了加一个逻辑判断，需要花费很大的精力去处理。&lt;/p&gt;
&lt;p&gt;至于其中的代码不统一的坑，恐怕要等踩过才知道吧😂。&lt;/p&gt;
&lt;h1 id=&quot;业务逻辑的拆分&quot;&gt;&lt;a href=&quot;#业务逻辑的拆分&quot; class=&quot;headerlink&quot; title=&quot;业务逻辑的拆分&quot;&gt;&lt;/a&gt;业务逻辑的拆分&lt;/h1&gt;&lt;p&gt;对于复杂的业务逻辑，对其拆分是非常重要的，不拆分很可能写出来的代码一个文件 &amp;gt;1000 行。复杂的业务逻辑对于写出来需要一气呵成，修改起来也就出现了牵一发动全身(虽然拆分完成之后可能也会关键逻辑代码不可拆分，但是会好很多)。&lt;/p&gt;
&lt;h2 id=&quot;筛选重构&quot;&gt;&lt;a href=&quot;#筛选重构&quot; class=&quot;headerlink&quot; title=&quot;筛选重构&quot;&gt;&lt;/a&gt;筛选重构&lt;/h2&gt;&lt;p&gt;筛选主要处理的是筛选项，针对众多筛选条件拆分为不同的业务逻辑模块是必须的。遵照拆分的原则，于是乎根据UI划分出来位置、价格、户型、筛选、排序这么几个模块。针对每个模块自行处理选中数据、UI展示。对外只暴露选中项输入和选中回调。&lt;/p&gt;
&lt;p&gt;对于每个数据大致都可分为一个列表，然后可选中1项或多项。于是乎，这个代码如果不拉出来是要写好多次的，拉出来，但是选中需要把选中的逻辑扔出来，方便自定义。&lt;/p&gt;
&lt;h2 id=&quot;地图踩坑&quot;&gt;&lt;a href=&quot;#地图踩坑&quot; class=&quot;headerlink&quot; title=&quot;地图踩坑&quot;&gt;&lt;/a&gt;地图踩坑&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;论项目架构设计的重要性&quot;&gt;&lt;a href=&quot;#论项目架构设计的重要性&quot; class=&quot;headerlink&quot; title=&quot;论项目架构设计的重要性&quot;&gt;&lt;/a&gt;论项目架构设计的重要性&lt;/h1&gt;&lt;p&gt;前两天听到有人说多人合作的项目并不需要处理很多事情，只需要处理好自己
    
    </summary>
    
    
      <category term="iOS" scheme="https://madordie.github.io/tags/iOS/"/>
    
      <category term="架构" scheme="https://madordie.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>关于转载的文章</title>
    <link href="https://madordie.github.io/2016/07/24/about-reprint-article/"/>
    <id>https://madordie.github.io/2016/07/24/about-reprint-article/</id>
    <published>2016-07-24T03:52:40.000Z</published>
    <updated>2016-07-25T01:57:19.000Z</updated>
    
    <content type="html">&lt;p&gt;一点删除原链接的转载文章的牢骚&lt;/p&gt;
&lt;h1 id=&quot;缘由&quot;&gt;&lt;a href=&quot;#缘由&quot; class=&quot;headerlink&quot; title=&quot;缘由&quot;&gt;&lt;/a&gt;缘由&lt;/h1&gt;&lt;p&gt;前两天看到朋友圈一个哥们转载了许多关于iOS的一些文章，很是兴奋，去围观。突然发现这文笔绝对是经过校对的。心中大喜，以为淘到宝了（因为文章并没有署名转载出处，所以应该是原创）。之后看了一下他的另一个文章，刚好我百度过这个文章的原作者的最后一个系列的，于是我又翻阅了一下看看是不是不一样，结果和我想的一样，除了删除了作者的署名之外其他的都是一样的。于是关掉了网页，心中默默的鄙视。&lt;/p&gt;
&lt;h1 id=&quot;关于转载的别人文章&quot;&gt;&lt;a href=&quot;#关于转载的别人文章&quot; class=&quot;headerlink&quot; title=&quot;关于转载的别人文章&quot;&gt;&lt;/a&gt;关于转载的别人文章&lt;/h1&gt;&lt;p&gt;对于一些大神的技术文章都是喜欢的，爱不释手的那种，我也是。有的能转载的我就转载，不能转载的，我会复制下来，放在我自己的文件夹中，为的是方便查询。在转载的时候我会特意标示转载的地址。而且一般情况下我会在文章的开始写上几句简单的主要的思想（比如：&lt;a href=&quot;http://www.cnblogs.com/madordie/p/5159597.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《[转]蓝牙开发》&lt;/a&gt;、&lt;a href=&quot;http://www.cnblogs.com/madordie/p/4322044.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《[搬运] mac下安装GDB》&lt;/a&gt;、&lt;a href=&quot;http://www.cnblogs.com/madordie/p/4322042.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《［搬运］MAC 下安装 brew》&lt;/a&gt;），当然有时候没来得及的就忘了😂（比如：&lt;a href=&quot;http://www.cnblogs.com/madordie/p/4357685.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《[搬运] iOS 7 侧滑返回手势使用和错误集》&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;还有关于文章的排版，殊不知原作者为了让读者更好的阅读会对排版做的比较好，有的人为了阅读方便会去阅读原作者的文章。比如说我这种强迫症。&lt;/p&gt;
&lt;h1 id=&quot;我对删除原链的转载文章态度&quot;&gt;&lt;a href=&quot;#我对删除原链的转载文章态度&quot; class=&quot;headerlink&quot; title=&quot;我对删除原链的转载文章态度&quot;&gt;&lt;/a&gt;我对删除原链的转载文章态度&lt;/h1&gt;&lt;p&gt;然后说一下我对于那些抄袭的，然后删除了原链接的人鄙视一下。每一篇文章都是别人花费了大量的精力去完成的，有的为了让读者能够更清楚的理解，所以会在发布的时候找别人去读一读，看能不能理解其中云云。然而对文章的原链接保存是一种对别人劳动成果的尊重，对原作者最基本的尊重。&lt;/p&gt;
&lt;p&gt;别的不想多说了。转载请注明出处。谢谢！&lt;br&gt;且行且珍惜。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一点删除原链接的转载文章的牢骚&lt;/p&gt;
&lt;h1 id=&quot;缘由&quot;&gt;&lt;a href=&quot;#缘由&quot; class=&quot;headerlink&quot; title=&quot;缘由&quot;&gt;&lt;/a&gt;缘由&lt;/h1&gt;&lt;p&gt;前两天看到朋友圈一个哥们转载了许多关于iOS的一些文章，很是兴奋，去围观。突然发现这文笔绝对是
    
    </summary>
    
      <category term="感悟" scheme="https://madordie.github.io/categories/%E6%84%9F%E6%82%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>准备食用RAC(ReactiveCocoa)的顾虑</title>
    <link href="https://madordie.github.io/2016/07/12/reactivecocoa-ready-to-use/"/>
    <id>https://madordie.github.io/2016/07/12/reactivecocoa-ready-to-use/</id>
    <published>2016-07-12T01:53:14.000Z</published>
    <updated>2016-08-29T02:01:35.000Z</updated>
    
    <content type="html">&lt;p&gt;对于目前的项目，如果引用RAC，会对项目造成哪些影响的相关思考。&lt;/p&gt;
&lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;众所周知，RAC很火，有很多崇拜者。本文只是一个新手第一次使用RAC时候所顾忌的一些问题，如果有比较好的解决方案及时告知我，我会及时更改。&lt;/p&gt;
&lt;h1 id=&quot;OC简单食用方法&quot;&gt;&lt;a href=&quot;#OC简单食用方法&quot; class=&quot;headerlink&quot; title=&quot;OC简单食用方法&quot;&gt;&lt;/a&gt;OC简单食用方法&lt;/h1&gt;&lt;p&gt;先来个例子代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;RACSignal *RSignal = [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.R rac_newValueChannelWithNilValue:@&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] startWith:@(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.R.value)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;RACSignal *GSignal = [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.G rac_newValueChannelWithNilValue:@&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] startWith:@(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.G.value)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;RACSignal *BSignal = [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.B rac_newValueChannelWithNilValue:@&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] startWith:@(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.B.value)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt;*(^valueFormat)(&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *value) = ^(&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *value) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%.0f&quot;&lt;/span&gt;, [value doubleValue]*&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[RSignal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.RVaule.text = valueFormat(x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[GSignal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.GValue.text = valueFormat(x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[BSignal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.BValue.text = valueFormat(x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;是不是超级简单！&lt;/p&gt;
&lt;h2 id=&quot;顾虑&quot;&gt;&lt;a href=&quot;#顾虑&quot; class=&quot;headerlink&quot; title=&quot;顾虑&quot;&gt;&lt;/a&gt;顾虑&lt;/h2&gt;&lt;p&gt;可是我有一个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OC属于运行时语法，这个里面的&lt;code&gt;id x&lt;/code&gt;的不确定因素可能会导致类型识别出现错误。如果说项目是多人维护，那么A可能不知道B写的Signal走的类型是什么，所以这个问题就不适用于松散的多人开发。如果需要使用RAC恐怕需要在项目启动时进行规避这些不确定的问题才能引入。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Swift简单食用方法&quot;&gt;&lt;a href=&quot;#Swift简单食用方法&quot; class=&quot;headerlink&quot; title=&quot;Swift简单食用方法&quot;&gt;&lt;/a&gt;Swift简单食用方法&lt;/h1&gt;&lt;p&gt;在&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ReactiveCocoa&lt;/a&gt;的&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa#objective-c-and-swift&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;README.md&lt;/a&gt;中有这么一段话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&quot;Objective-C-and-Swift&quot;&gt;&lt;a href=&quot;#Objective-C-and-Swift&quot; class=&quot;headerlink&quot; title=&quot;Objective-C and Swift&quot;&gt;&lt;/a&gt;Objective-C and Swift&lt;/h2&gt;&lt;p&gt;  Although ReactiveCocoa was started as an Objective-C framework, as of [version&lt;br&gt;  3.0][CHANGELOG], all major feature development is concentrated on the [Swift API][].&lt;/p&gt;
&lt;p&gt;  RAC’s [Objective-C API][] and Swift API are entirely separate, but there is&lt;br&gt;  a [bridge][Objective-C Bridging] to convert between the two. This&lt;br&gt;  is mostly meant as a compatibility layer for older ReactiveCocoa projects, or to&lt;br&gt;  use Cocoa extensions which haven’t been added to the Swift API yet.&lt;/p&gt;
&lt;p&gt;  The Objective-C API will continue to exist and be supported for the foreseeable&lt;br&gt;  future, but it won’t receive many improvements. For more information about using&lt;br&gt;  this API, please consult our [legacy documentation][].&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;We highly recommend that all new projects use the Swift API.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;对于目前的项目，如果引用RAC，会对项目造成哪些影响的相关思考。&lt;/p&gt;
&lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;众所周知，RAC很火，有很多崇拜者。本文只是一个新手第一次使
    
    </summary>
    
    
      <category term="iOS" scheme="https://madordie.github.io/tags/iOS/"/>
    
      <category term="ReactiveCocoa" scheme="https://madordie.github.io/tags/ReactiveCocoa/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo搭建博客</title>
    <link href="https://madordie.github.io/2016/07/05/use-hexo-setup-blog/"/>
    <id>https://madordie.github.io/2016/07/05/use-hexo-setup-blog/</id>
    <published>2016-07-05T10:03:31.000Z</published>
    <updated>2016-07-25T01:57:32.000Z</updated>
    
    <content type="html">&lt;p&gt;这个github.io搭建的过程参考，以及向百度推送的python、js脚本。&lt;/p&gt;
&lt;h1 id=&quot;参考博客&quot;&gt;&lt;a href=&quot;#参考博客&quot; class=&quot;headerlink&quot; title=&quot;参考博客&quot;&gt;&lt;/a&gt;参考博客&lt;/h1&gt;&lt;p&gt;感谢 &lt;a href=&quot;http://lovenight.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;岁月如歌&lt;/a&gt; 的这个&lt;a href=&quot;http://lovenight.github.io/2015/11/10/Hexo-3-1-1-静态博客搭建指南/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Hexo 3.1.1 静态博客搭建指南》&lt;/a&gt;同时感谢这个&lt;a href=&quot;http://lovenight.github.io/2015/11/18/向百度推送hexo博客所有链接的Python脚本/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《向百度推送hexo博客所有链接的Python脚本》&lt;/a&gt;(别问我为啥点不开，这个要问博主，不过要看这个文章也不是没办法的😂，因为这个博客也用git管理的。。。你懂)&lt;/p&gt;
&lt;p&gt;另外还有一个&lt;a href=&quot;http://emufan.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;soul&lt;/a&gt;的&lt;a href=&quot;http://emufan.com/2016/02/18/百度主动推送hexo生成的文章/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;百度主动推送hexo生成的文章&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;python自动推送脚本修改&quot;&gt;&lt;a href=&quot;#python自动推送脚本修改&quot; class=&quot;headerlink&quot; title=&quot;python自动推送脚本修改&quot;&gt;&lt;/a&gt;python自动推送脚本修改&lt;/h1&gt;&lt;p&gt;上面说的博主大约用的是windows，所以脚本并不能立马的运行在Mac上，需要做些修改：故修改为：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Author: LoveNight&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Date:   2015-11-16 20:45:59&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Last Modified by:   LoveNight&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Last Modified time: 2015-11-18 18:07:19&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Last Modified by:   Keith&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Last Modified time: 2016-07-06 16:22:45&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; json&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; bs4 &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; BeautifulSoup &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; BS&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; requests&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import msvcrt&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo 博客专用，向百度站长平台提交所有网址&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;本脚本必须放在hexo博客的根目录下执行！需要已安装生成百度站点地图的插件。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;百度站长平台提交链接：http://zhanzhang.baidu.com/linksubmit/index&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;从中找到自己的接口调用地址&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;python环境：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pip install beautifulsoup4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pip install requests&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;xcode-select --install	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pip install lxml &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&quot;&quot;&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ❌❌❌ 抄的需要更改这个URL！！这是我的！！❌❌❌&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;url = &lt;span class=&quot;string&quot;&gt;&#39;http://data.zz.baidu.com/urls?site=https://madordie.github.io&amp;amp;token=j33t0VEPFl24tJ8N&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;baidu_sitemap = os.path.join(sys.path[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;], &lt;span class=&quot;string&quot;&gt;&#39;public&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;baidusitemap.xml&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;google_sitemap = os.path.join(sys.path[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;], &lt;span class=&quot;string&quot;&gt;&#39;public&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;sitemap.xml&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sitemap = [baidu_sitemap, google_sitemap]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;assert&lt;/span&gt; (os.path.exists(baidu_sitemap) &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; os.path.exists(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    google_sitemap)), &lt;span class=&quot;string&quot;&gt;&quot;没找到任何网站地图，请检查！&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 从站点地图中读取网址列表&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getUrls&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    urls = []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; _ &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; sitemap:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; os.path.exists(_):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(_, &lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; f:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                xml = f.read()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        soup = BS(xml, &lt;span class=&quot;string&quot;&gt;&quot;xml&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        tags = soup.find_all(&lt;span class=&quot;string&quot;&gt;&quot;loc&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        urls += [x.string &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; tags]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; _ == baidu_sitemap:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            tags = soup.find_all(&lt;span class=&quot;string&quot;&gt;&quot;breadCrumb&quot;&lt;/span&gt;, url=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            urls += [x[&lt;span class=&quot;string&quot;&gt;&quot;url&quot;&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; tags]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; urls&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# POST提交网址列表&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;postUrls&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(urls)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    urls = set(urls)  &lt;span class=&quot;comment&quot;&gt;# 先去重&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&quot;一共提取出 %s 个网址&quot;&lt;/span&gt; % len(urls))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    print(urls)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    data = &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;.join(urls)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; requests.post(url, data=data).text&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    urls = getUrls()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    result = postUrls(urls)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&quot;提交结果：&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    print(result)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#    msvcrt.getch()&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;js脚本&quot;&gt;&lt;a href=&quot;#js脚本&quot; class=&quot;headerlink&quot; title=&quot;js脚本&quot;&gt;&lt;/a&gt;js脚本&lt;/h1&gt;&lt;p&gt;这个脚本是我在&lt;a href=&quot;http://emufan.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;soul&lt;/a&gt;的&lt;a href=&quot;http://emufan.com/2016/02/18/百度主动推送hexo生成的文章/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;百度主动推送hexo生成的文章&lt;/a&gt;发现的，感觉也很赞。&lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&quot;github&quot;&gt;&lt;a href=&quot;#github&quot; class=&quot;headerlink&quot; title=&quot;github&quot;&gt;&lt;/a&gt;github&lt;/h2&gt;&lt;p&gt;  &lt;a href=&quot;https://github.com/Relsoul/bdwork/tree/master/soul/hexo百度主动上传&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;脚本地址&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;推送&quot;&gt;&lt;a href=&quot;#推送&quot; class=&quot;headerlink&quot; title=&quot;推送&quot;&gt;&lt;/a&gt;推送&lt;/h2&gt;&lt;p&gt;  今天发现百度没收录我的站..主要是我的站点换来换去的..估计被ban了..然后想用sitemap来推送一下..结果发现github禁用了百度爬虫..没办法只能主动推送了.&lt;/p&gt;
&lt;h2 id=&quot;利用插件&quot;&gt;&lt;a href=&quot;#利用插件&quot; class=&quot;headerlink&quot; title=&quot;利用插件&quot;&gt;&lt;/a&gt;利用插件&lt;/h2&gt;&lt;p&gt;  这里利用到了一款插件&lt;br&gt;  &lt;a href=&quot;https://github.com/coneycode/hexo-generator-baidu-sitemap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-generator-baidu-sitemap&lt;/a&gt;&lt;br&gt;  设置很简单 只需要在.config.yml添加一些数据即可, 下面附上我的添加数据 theme这个可以随意更改 下面的copy即可&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# Extensions&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Plugins: http://hexo.io/plugins/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Themes: http://hexo.io/themes/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;theme: yilia&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;baidusitemap:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;path: baidusitemap.xml&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;运行&quot;&gt;&lt;a href=&quot;#运行&quot; class=&quot;headerlink&quot; title=&quot;运行&quot;&gt;&lt;/a&gt;运行&lt;/h2&gt;&lt;p&gt;  然后hexo g 生成一下数据 会在public下面发现一个文件名为baidusitemap.xml&lt;/p&gt;
&lt;h2 id=&quot;脚本&quot;&gt;&lt;a href=&quot;#脚本&quot; class=&quot;headerlink&quot; title=&quot;脚本&quot;&gt;&lt;/a&gt;脚本&lt;/h2&gt;&lt;p&gt;  这里用nodejs写了一款脚本 大概流程是 获取baidusitemap.xml里面的内容 然后读取本地的一个site_file.json这个文件 这个文件存储的是上一次数据 与上一次数据进行对比 如果对比发现新数据那么就上传新数据 否则全部上传.&lt;/p&gt;
&lt;h2 id=&quot;运行脚本&quot;&gt;&lt;a href=&quot;#运行脚本&quot; class=&quot;headerlink&quot; title=&quot;运行脚本&quot;&gt;&lt;/a&gt;运行脚本&lt;/h2&gt;&lt;p&gt;  把ActivePush.js脚本放在hexo文件夹主目录 然后用nodejs ActivePush.js一下即可 这里还支持一个参数nodejs ActivePush.js all 则是不对比直接上传数据&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这个github.io搭建的过程参考，以及向百度推送的python、js脚本。&lt;/p&gt;
&lt;h1 id=&quot;参考博客&quot;&gt;&lt;a href=&quot;#参考博客&quot; class=&quot;headerlink&quot; title=&quot;参考博客&quot;&gt;&lt;/a&gt;参考博客&lt;/h1&gt;&lt;p&gt;感谢 &lt;a href=&quot;htt
    
    </summary>
    
      <category term="教程" scheme="https://madordie.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="https://madordie.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>博客迁移公告</title>
    <link href="https://madordie.github.io/2016/07/05/about-change-blog/"/>
    <id>https://madordie.github.io/2016/07/05/about-change-blog/</id>
    <published>2016-07-05T05:43:36.000Z</published>
    <updated>2016-07-25T00:09:51.000Z</updated>
    
    <content type="html">&lt;p&gt;你敢信！我又搬家了。。&lt;/p&gt;
&lt;p&gt;之前在&lt;a href=&quot;http://www.cnblogs.com/madordie/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;博客园&lt;/a&gt;后来又去了&lt;a href=&quot;http://madordie.leanote.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;蚂蚁笔记&lt;/a&gt;，最后吧，我就到了&lt;a href=&quot;https://madordie.github.io&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;说下大体感受：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;博客园&lt;/a&gt;挺好的，不过不喜欢其编码方式，真的不喜欢。博客园的主题什么的都是可以定制，但是总归是写起来比较费劲的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leanote.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;蚂蚁笔记&lt;/a&gt;不错，我开始时候logo还不是这个&lt;img src=&quot;http://7xvzwi.com1.z0.glb.clouddn.com/leanote_new_logo.png&quot; width=&quot;35&quot; alt=&quot;新logo&quot;&gt;原来logo是&lt;img src=&quot;http://7xvzwi.com1.z0.glb.clouddn.com/leanote_old_logo.png&quot; width=&quot;35&quot; alt=&quot;旧logo&quot;&gt;😂,不过现在已经很厉害了，开始了各种业务。期待会走得更好更远。&lt;/p&gt;
&lt;p&gt;我是看了&lt;a href=&quot;http://blog.devtang.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;巧哥&lt;/a&gt;的&lt;a href=&quot;http://blog.devtang.com/2012/02/10/setup-blog-based-on-github/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个博文&lt;/a&gt;才开始准备转到Github的。。赶脚markdown很好玩，虽然出来很早了，但是并没有仔细的去学习这个语法，于是乎这个博客就用&lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo&lt;/a&gt;进行搭建。&lt;/p&gt;
&lt;p&gt;虽然我还不知道怎么让百度收录我的Github，但是主要的是能尝试着自己想试试确没有尝试的事情！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;你敢信！我又搬家了。。&lt;/p&gt;
&lt;p&gt;之前在&lt;a href=&quot;http://www.cnblogs.com/madordie/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;博客园&lt;/a&gt;后来又去了&lt;a href=&quot;http://madordie.lean
    
    </summary>
    
      <category term="公告" scheme="https://madordie.github.io/categories/%E5%85%AC%E5%91%8A/"/>
    
    
  </entry>
  
</feed>
