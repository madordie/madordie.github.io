{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"source/uploads/avatar.png","path":"uploads/avatar.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"007b8b57209b8c2564947a8600b1b8110ac8026e","modified":1477142141000},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1469338903000},{"_id":"themes/next/.gitignore","hash":"c8d6a73b9e17f0f8a3716e4ada6960d3180425a6","modified":1469338903000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1469338903000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1469338903000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1469338903000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1469338903000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1469338903000},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1469338903000},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1469338903000},{"_id":"themes/next/_config.yml","hash":"ed83d609739ed72b0df706eba9a132a6698ad935","modified":1469341287000},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1469338903000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1469338903000},{"_id":"source/404/index.md","hash":"bfd44eb167d1b158f4a080da30416f269d28fec3","modified":1467803963000},{"_id":"source/_posts/about-change-blog.md","hash":"ce131343e6daeb19f786e0a52eb523c63dd146eb","modified":1469405391000},{"_id":"source/_posts/about-project-tableview.md","hash":"41315fa67eb8351a3a19e68aeb19d0da4b6d2b10","modified":1477144471000},{"_id":"source/_posts/about-reprint-article.md","hash":"4a2b2663d8538e9b36b1167764884103ec40dda4","modified":1477144482000},{"_id":"source/_posts/bandwagonhost-note.md","hash":"e6f0057e8fb9238e0802d49fec5e55390cd77026","modified":1483096242000},{"_id":"source/_posts/bruch-up-regular-expressions.md","hash":"c5ea6fc6bb18d239ddbe548accf44edb7d9f80fb","modified":1483096325000},{"_id":"source/_posts/build-ipa-sh.md","hash":"2baa72a3d2f8458348740ea33fe6fc09b49fad48","modified":1480588587000},{"_id":"source/_posts/debug-swift-notifa-frame.md","hash":"b0b404fbdb703a4961fe0747dbbc5debc219c08e","modified":1483096709000},{"_id":"source/_posts/debug-uiview-m-190.md","hash":"4dbeb67ac741e7c251ee8917b1593c35ab4d788c","modified":1483096769000},{"_id":"source/_posts/elegant-to-use-swiftlint.md","hash":"2697a4792db348c388d95a08184ccb2af68340e4","modified":1483096548000},{"_id":"source/_posts/debug-xcode8-analysis-crash-file.md","hash":"953c4508ddb1529b0781727a20b8c8accc0b03f7","modified":1483096697000},{"_id":"source/_posts/note.md","hash":"f211255dd5356d71b1e94b1eed8f80b619dc1ca1","modified":1477144543000},{"_id":"source/_posts/reactivecocoa-ready-to-use.md","hash":"5cdeaf066407ea3657b5c321a44f2311f0b75de4","modified":1477144813000},{"_id":"source/_posts/ui-source-and-code-decoupling.md","hash":"397f032251f3ea0a09a5ab16810b021fc48db0bb","modified":1477144813000},{"_id":"source/_posts/uitextkit-ellipsis-sth-at-the-end.md","hash":"fa56c3d2c18e37791446eb35030bcf0d437232aa","modified":1483096540000},{"_id":"source/_posts/use-hexo-setup-blog.md","hash":"5db812ca3a007815ee5adfaad4b04c7a477ffa18","modified":1477144562000},{"_id":"source/about/index.md","hash":"4cbb8d1c0cf13ac4f44dd1ffd951dd9803577b44","modified":1467803963000},{"_id":"source/categories/index.md","hash":"bbff6e3714fbd02943df6c95da107ab7ba7c661b","modified":1469403452000},{"_id":"source/tags/index.md","hash":"e3c461d62957e2da657e9cacc03925de0b3a2834","modified":1469403457000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1469338903000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1469338903000},{"_id":"themes/next/_git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1469338903000},{"_id":"themes/next/_git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1469338287000},{"_id":"themes/next/_git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1469338903000},{"_id":"themes/next/_git/packed-refs","hash":"4466857f1a41f86e8a1c29bc9088bff54a5c90d1","modified":1469338903000},{"_id":"themes/next/_git/index","hash":"a4a0d172df6b04ab22cc9dfe43e25440ca48c832","modified":1469341762000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1469338903000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1469338903000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1469338903000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1469338903000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1469338903000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1469338903000},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1469338903000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1469338903000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1469338903000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1469338903000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1469338903000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1469338903000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1469338903000},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1469338903000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1469338903000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1469338903000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1469338903000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1469338903000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1469338903000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1469338903000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1469338903000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1469338903000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1469338903000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469338903000},{"_id":"themes/next/_git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1469338287000},{"_id":"themes/next/_git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1469338287000},{"_id":"themes/next/_git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1469338287000},{"_id":"themes/next/_git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1469338287000},{"_id":"themes/next/_git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1469338287000},{"_id":"themes/next/_git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1469338287000},{"_id":"themes/next/_git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1469338287000},{"_id":"themes/next/_git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1469338287000},{"_id":"themes/next/_git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1469338287000},{"_id":"themes/next/_git/logs/HEAD","hash":"802e264e3c99af3e571933b47897965466da2225","modified":1469338903000},{"_id":"themes/next/_git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1469338287000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1469338903000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1469338903000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1469338903000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1469338903000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1a77843ce5eac62151dc3d38f0a36c43e19e1a74","modified":1469338903000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1469338903000},{"_id":"themes/next/layout/_macro/post.swig","hash":"1ca03011bed92614832b1343b65be92183957dc5","modified":1469338903000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1469338903000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1469338903000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1469338903000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1469338903000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1469338903000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"b73f9443bee2d3ea383aad52e49ffca8aa97dcc2","modified":1469338903000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1469338903000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"0ce71d8322ea7dea82d9371fa2fe13949aa870e3","modified":1469338903000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b0c495b8154ef8b2d2cb0a554e164ff22cdc962","modified":1469338903000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1469338903000},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1469338903000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1469338903000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1469338903000},{"_id":"themes/next/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1469339541000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1469338903000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1469338903000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1469338903000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1469338903000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1469338903000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1469338903000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1469338903000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1469338903000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1469338903000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1469338903000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1469338903000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1469338903000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469338903000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469338903000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469338903000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469338903000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469338903000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469338903000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469338903000},{"_id":"source/uploads/avatar.png","hash":"c219003cac089b0b74a184c915003f257ec1ec21","modified":1467803963000},{"_id":"themes/next/_git/refs/heads/master","hash":"4ad994fe133b79fa089d49b7a6e68860bbc420e5","modified":1469338903000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1469338903000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"7f7148c8f52e4d3cfc070d964160362179fa8e91","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1469338903000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1469338903000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1469338903000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1469338903000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1469338903000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1469338903000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1469338903000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1469338903000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1469338903000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1469338903000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1469338903000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1469338903000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1469338903000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1469338903000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1469338903000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1469338903000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1469338903000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1469338903000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1469338903000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1469338903000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1469338903000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1469338903000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1469338903000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1469338903000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1469338903000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1469338903000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1469338903000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1469338903000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1469338903000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1469338903000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1469338903000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1469338903000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1469338903000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1469338903000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1469338903000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1469338903000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1469338903000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1469338903000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1469338903000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1469338903000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1469338903000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1469338903000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1469338903000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1469338903000},{"_id":"themes/next/_git/logs/refs/heads/master","hash":"802e264e3c99af3e571933b47897965466da2225","modified":1469338903000},{"_id":"themes/next/_git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1469338903000},{"_id":"themes/next/_git/objects/pack/pack-adcffcdf0fcd56ff3adf9ee5e2e97ce9c03b1c4f.idx","hash":"4af6e2fb7304b0b3bc26d5aefbd4b319e97bc562","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"f9c6ee91c2a615edd8ca26edcc8a66b71883c238","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1469338903000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1469338903000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1469338903000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1469338903000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1469338903000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1469338903000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1469338903000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1469338903000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1469338903000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1469338903000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1469338903000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1469338903000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1469338903000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1469338903000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1469338903000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1469338903000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1469338903000},{"_id":"themes/next/source/images/avatar.gif","hash":"c219003cac089b0b74a184c915003f257ec1ec21","modified":1467803963000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1469338903000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1469338903000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1469338903000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1469338903000},{"_id":"themes/next/_git/logs/refs/remotes/origin/HEAD","hash":"802e264e3c99af3e571933b47897965466da2225","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1469338903000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1469338903000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1469338903000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1469338903000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1469338903000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1469338903000},{"_id":"themes/next/_git/objects/pack/pack-adcffcdf0fcd56ff3adf9ee5e2e97ce9c03b1c4f.pack","hash":"a4dca228bc044f942f1a8bbf5aecee5e5e88fcf2","modified":1469338903000},{"_id":"public/baidusitemap.xml","hash":"2702e1d48035ed1b8aa3e67fe93359fb9779847e","modified":1483096785903},{"_id":"public/atom.xml","hash":"f20503ade1b0518ac379bcfa3c0576c57ea1b914","modified":1483096785916},{"_id":"public/sitemap.xml","hash":"af51ad0af7e8b0e07146b126db83efdcb4c0438c","modified":1483096785917},{"_id":"public/search.xml","hash":"8552ea1dc1103d86797ca8c8147bdd667b973096","modified":1483096785917},{"_id":"public/404.html","hash":"949ab4fb73afcda86ef7800f679f6a4b370a266d","modified":1482977519206},{"_id":"public/categories/index.html","hash":"3f18b86e75097a6301a7e486f97185626c1fb635","modified":1482977519212},{"_id":"public/tags/index.html","hash":"f9cf0f2d8a689c35941ca7b044d9170494b7a611","modified":1482977519212},{"_id":"public/about/index.html","hash":"6154523e0799cac111220391b8c4f600dfc018ed","modified":1482977519212},{"_id":"public/2016/08/28/ui-source-and-code-decoupling/index.html","hash":"b2fa4af28f5e3b1b7bd861c57bb46597af271f8e","modified":1482977519212},{"_id":"public/2016/07/24/about-reprint-article/index.html","hash":"f871b56804d1c17d78ca76080bd3c61ae354eaf7","modified":1482977519212},{"_id":"public/2016/07/12/reactivecocoa-ready-to-use/index.html","hash":"738d6a807e41feea9a0c40ea1035d73054a9dd63","modified":1482977519212},{"_id":"public/2016/07/27/about-project-tableview/index.html","hash":"42734152ab2c0a7aa0a43c97f935e8923e3bb015","modified":1482977519212},{"_id":"public/2016/07/05/use-hexo-setup-blog/index.html","hash":"f9b0e74762c8c328d6508c95c09e06257baed63b","modified":1482977519212},{"_id":"public/archives/index.html","hash":"7d788a663fe4fb618d2e5d1a15027510658fc911","modified":1483069250752},{"_id":"public/2016/07/28/note/index.html","hash":"f541d4ab21c85e33d4260fd90c30e9abb90dd93e","modified":1482977519212},{"_id":"public/archives/2016/index.html","hash":"e1a7cc3e957796b04a3531ea94057d1ab783dec0","modified":1483069250752},{"_id":"public/2016/09/26/build-ipa-sh/index.html","hash":"92245405e739833abdc1a8de1d2e11909d990a00","modified":1482977519213},{"_id":"public/archives/2016/08/index.html","hash":"6beff38cf695e432aa50340d0bc85b672af0e268","modified":1482977519214},{"_id":"public/archives/2016/09/index.html","hash":"c0ea518f286b1002a7975db43c05b72d661b5bcf","modified":1482977519214},{"_id":"public/archives/2016/10/index.html","hash":"d1f8c67dd17b733f1d4348f3438503980075f9b8","modified":1482977519214},{"_id":"public/categories/公告/index.html","hash":"720f644127a99ed8a8e3f249497f0504ea1e399d","modified":1482977519214},{"_id":"public/archives/2016/07/index.html","hash":"8fbaf286891006747e23975c8422bf15499ae761","modified":1482977519215},{"_id":"public/categories/笔记/index.html","hash":"c1776b44044f10f08c1d24166ea834e86b543d90","modified":1482977519215},{"_id":"public/categories/感悟/index.html","hash":"771b4656c4e54ced73296414057188594e09b5aa","modified":1482977519215},{"_id":"public/index.html","hash":"2ffc97a492860509a8ca6c870668d376cc19a5a6","modified":1483096785923},{"_id":"public/2016/07/05/about-change-blog/index.html","hash":"97cbffe31af2f53e2933168a4e8e9dd394ec7033","modified":1482977519215},{"_id":"public/tags/架构/index.html","hash":"f973fab2b9feaaf64ad23cc018e05e62f1780a3b","modified":1482977519216},{"_id":"public/tags/ReactiveCocoa/index.html","hash":"db72cf93c677b9eba3dcaaf51468389e4d7f043c","modified":1482977519216},{"_id":"public/categories/教程/index.html","hash":"305aaf24c94348850fdbbb828579f3cb6338342f","modified":1482977519216},{"_id":"public/tags/hexo/index.html","hash":"04c15be78b8ecff661daf3bd22cedd981b5834ea","modified":1482977519216},{"_id":"public/tags/iOS/index.html","hash":"9074d96de272aa75ab0f33bd3d651b93a0eea235","modified":1482977519216},{"_id":"public/2016/12/19/bandwagonhost-note/index.html","hash":"8382cf925e418131f87dfee94ec5c1a01a9ef49b","modified":1483096785923},{"_id":"public/2016/12/23/elegant-to-use-swiftlint/index.html","hash":"cb8e90b08d54845f6ed78d828f2892be1bd10c2d","modified":1483096785923},{"_id":"public/2016/12/19/bruch-up-regular-expressions/index.html","hash":"ec18bc7385bc020eac04ed41e8b05d88c1507a5f","modified":1483096785923},{"_id":"public/2016/12/01/debug-swift-notifa-frame/index.html","hash":"f04cb5a031c0f6f25b1748987cc2af53afeb39d2","modified":1483096785923},{"_id":"public/2016/11/14/debug-xcode8-analysis-crash-file/index.html","hash":"374cf4a49567590ac54f5ff16bf2ca9930a640d8","modified":1483096785923},{"_id":"public/2016/12/23/uitextkit-ellipsis-sth-at-the-end/index.html","hash":"92fe3e4794eef94340445f5308b40dbb4196e8af","modified":1483096785923},{"_id":"public/2016/10/11/debug-uiview-m-190/index.html","hash":"b584e499d20828589fc676091cc356f619a8ee21","modified":1483096785923},{"_id":"public/archives/page/2/index.html","hash":"51a984f8f8c449258b839f807b71b0417e6bc2df","modified":1482977519232},{"_id":"public/archives/2016/page/2/index.html","hash":"9fc4b4a8b85d76bdbba2dc717af2ca2550ea7f2a","modified":1482977519232},{"_id":"public/archives/2016/11/index.html","hash":"50cf1153ed936c6a928eeca002512b4892cf83e7","modified":1482977519232},{"_id":"public/archives/2016/12/index.html","hash":"d51827f911b31b73ebe00a443feff0a4039001e8","modified":1483069250752},{"_id":"public/categories/正则表达式/index.html","hash":"05c458a7fd4c2372a05187ed99652237a319ab8d","modified":1482977519232},{"_id":"public/categories/DEBUG/index.html","hash":"0cbe711953d577e092fe40e23cf75efa1ec26625","modified":1482977519232},{"_id":"public/page/2/index.html","hash":"a4a483cac64a3fcd095491bc0ea0cf9162433438","modified":1482977519233},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1482977519233},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1482977519233},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1482977519233},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1482977519233},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1482977519233},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1482977519233},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1482977519233},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1482977519233},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1482977519233},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1482977519233},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1482977519233},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1482977519233},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1482977519233},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1482977519233},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1482977519233},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1482977519233},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1482977519972},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1482977519973},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1482977519980},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1482977519981},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1482977519981},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1482977519981},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1482977519981},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1482977519989},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1482977519989},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1482977519998},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1482977519999},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1482977519999},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1482977519999},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1482977519999},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1482977519999},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1482977519999},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1482977519999},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1482977519999},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1482977519999},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1482977519999},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1482977519999},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1482977519999},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1482977519999},{"_id":"public/css/main.css","hash":"f94f1cc78541332f9a09f96aac1279852923b7e7","modified":1482977520000},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1482977520000},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1482977520000},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1482977520000},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1482977520000},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1482977520000},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1482977520000},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1482977520008},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1482977520008},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1482977520008},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1482977520009},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1482977520009},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1482977520009},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1482977520009},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1482977520009},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1482977520009},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1482977520009},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1482977520009},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1482977520009},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1482977520009},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1482977520009},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1482977520009},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1482977520009},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1482977520009},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1482977520009},{"_id":"public/uploads/avatar.png","hash":"c219003cac089b0b74a184c915003f257ec1ec21","modified":1482977520013},{"_id":"public/images/avatar.gif","hash":"c219003cac089b0b74a184c915003f257ec1ec21","modified":1482977520016},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1482977520019}],"Category":[{"name":"感悟","_id":"cix9qivjt0007ny6ag5hhfg8c"},{"name":"公告","_id":"cix9qivk3000cny6ac6u2qo09"},{"name":"正则表达式","_id":"cix9qivk6000hny6anxlhi1jf"},{"name":"DEBUG","_id":"cix9qivkc000mny6a49wh0ud7"},{"name":"笔记","_id":"cix9qivkz0012ny6as013e2ic"},{"name":"教程","_id":"cix9qivkz0015ny6a6dwqsnda"}],"Data":[],"Page":[{"title":"404","date":"2016-07-01T07:17:26.000Z","toc":false,"comments":0,"_content":"sorry ~~~\n\n您要找的内容可能在火星，点击 <keith_127@126.com> 告诉我，马上帮你找回来！！！","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2016-07-01 15:17:26\ntoc: false\ncomments: false\npermalink: /404\n---\nsorry ~~~\n\n您要找的内容可能在火星，点击 <keith_127@126.com> 告诉我，马上帮你找回来！！！","updated":"2016-07-06T11:19:23.000Z","path":"/404.html","layout":"page","_id":"cix9qivja0000ny6az9v27nrt","content":"<p>sorry ~~~</p>\n<p>您要找的内容可能在火星，点击 <a href=\"&#x6d;&#97;&#x69;&#x6c;&#116;&#x6f;&#58;&#107;&#x65;&#x69;&#116;&#104;&#x5f;&#49;&#x32;&#x37;&#64;&#x31;&#x32;&#x36;&#46;&#x63;&#x6f;&#x6d;\">&#107;&#x65;&#x69;&#116;&#104;&#x5f;&#49;&#x32;&#x37;&#64;&#x31;&#x32;&#x36;&#46;&#x63;&#x6f;&#x6d;</a> 告诉我，马上帮你找回来！！！</p>\n","excerpt":"","more":"<p>sorry ~~~</p>\n<p>您要找的内容可能在火星，点击 <a href=\"&#x6d;&#97;&#x69;&#x6c;&#116;&#x6f;&#58;&#107;&#x65;&#x69;&#116;&#104;&#x5f;&#49;&#x32;&#x37;&#64;&#x31;&#x32;&#x36;&#46;&#x63;&#x6f;&#x6d;\">&#107;&#x65;&#x69;&#116;&#104;&#x5f;&#49;&#x32;&#x37;&#64;&#x31;&#x32;&#x36;&#46;&#x63;&#x6f;&#x6d;</a> 告诉我，马上帮你找回来！！！</p>\n"},{"title":"关于我","date":"2016-07-01T07:17:20.000Z","_content":"# 关于我\n上海，男，有女朋友。\n\niOS 开发者，嵌入式爱好者，喜欢研究，热衷于技术。\n\n**QQ**: [453870736](tencent://QQInterLive/?Cmd=2&Uin=495939026)\n\n**email**: <keith_127@126.com>\n\n**Github**: [https://github.com/madordie](https://github.com/madordie)","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2016-07-01 15:17:20\n---\n# 关于我\n上海，男，有女朋友。\n\niOS 开发者，嵌入式爱好者，喜欢研究，热衷于技术。\n\n**QQ**: [453870736](tencent://QQInterLive/?Cmd=2&Uin=495939026)\n\n**email**: <keith_127@126.com>\n\n**Github**: [https://github.com/madordie](https://github.com/madordie)","updated":"2016-07-06T11:19:23.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cix9qivjh0002ny6a41uqjt77","content":"<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><p>上海，男，有女朋友。</p>\n<p>iOS 开发者，嵌入式爱好者，喜欢研究，热衷于技术。</p>\n<p><strong>QQ</strong>: <a href=\"tencent://QQInterLive/?Cmd=2&amp;Uin=495939026\" target=\"_blank\" rel=\"external\">453870736</a></p>\n<p><strong>email</strong>: <a href=\"&#109;&#x61;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#107;&#x65;&#x69;&#x74;&#x68;&#95;&#x31;&#x32;&#55;&#x40;&#49;&#x32;&#54;&#46;&#99;&#111;&#x6d;\">&#107;&#x65;&#x69;&#x74;&#x68;&#95;&#x31;&#x32;&#55;&#x40;&#49;&#x32;&#54;&#46;&#99;&#111;&#x6d;</a></p>\n<p><strong>Github</strong>: <a href=\"https://github.com/madordie\" target=\"_blank\" rel=\"external\">https://github.com/madordie</a></p>\n","excerpt":"","more":"<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><p>上海，男，有女朋友。</p>\n<p>iOS 开发者，嵌入式爱好者，喜欢研究，热衷于技术。</p>\n<p><strong>QQ</strong>: <a href=\"tencent://QQInterLive/?Cmd=2&amp;Uin=495939026\">453870736</a></p>\n<p><strong>email</strong>: <a href=\"&#109;&#x61;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#107;&#x65;&#x69;&#x74;&#x68;&#95;&#x31;&#x32;&#55;&#x40;&#49;&#x32;&#54;&#46;&#99;&#111;&#x6d;\">&#107;&#x65;&#x69;&#x74;&#x68;&#95;&#x31;&#x32;&#55;&#x40;&#49;&#x32;&#54;&#46;&#99;&#111;&#x6d;</a></p>\n<p><strong>Github</strong>: <a href=\"https://github.com/madordie\">https://github.com/madordie</a></p>\n"},{"title":"分类","date":"2016-07-24T06:17:20.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2016-07-24 14:17:20\ntype: \"categories\"\n---\n","updated":"2016-07-24T23:37:32.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cix9qivjo0005ny6ackpxymj9","content":"","excerpt":"","more":""},{"title":"标签云","date":"2016-07-24T23:23:39.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签云\ndate: 2016-07-25 07:23:39\ntype: \"tags\"\n---\n","updated":"2016-07-24T23:37:37.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cix9qivot0019ny6aps222ckv","content":"","excerpt":"","more":""}],"Post":[{"title":"博客迁移公告","date":"2016-07-05T05:43:36.000Z","_content":"\n你敢信！我又搬家了。。\n\n之前在[博客园](http://www.cnblogs.com/madordie/)后来又去了[蚂蚁笔记](http://madordie.leanote.com)，最后吧，我就到了[这里](https://madordie.github.io)。\n\n说下大体感受：\n\n[博客园](http://www.cnblogs.com)挺好的，不过不喜欢其编码方式，真的不喜欢。博客园的主题什么的都是可以定制，但是总归是写起来比较费劲的。\n\n[蚂蚁笔记](https://leanote.com)不错，我开始时候logo还不是这个<img src=\"http://7xvzwi.com1.z0.glb.clouddn.com/leanote_new_logo.png\" width=35 alt=\"新logo\">原来logo是<img src=\"http://7xvzwi.com1.z0.glb.clouddn.com/leanote_old_logo.png\" width=35 alt=\"旧logo\" >😂,不过现在已经很厉害了，开始了各种业务。期待会走得更好更远。\n\n我是看了[巧哥](http://blog.devtang.com)的[这个博文](http://blog.devtang.com/2012/02/10/setup-blog-based-on-github/)才开始准备转到Github的。。赶脚markdown很好玩，虽然出来很早了，但是并没有仔细的去学习这个语法，于是乎这个博客就用[hexo](https://hexo.io)进行搭建。\n\n虽然我还不知道怎么让百度收录我的Github，但是主要的是能尝试着自己想试试确没有尝试的事情！","source":"_posts/about-change-blog.md","raw":"---\ntitle: 博客迁移公告\ndate: 2016-07-05 13:43:36\ncategories: 公告\n---\n\n你敢信！我又搬家了。。\n\n之前在[博客园](http://www.cnblogs.com/madordie/)后来又去了[蚂蚁笔记](http://madordie.leanote.com)，最后吧，我就到了[这里](https://madordie.github.io)。\n\n说下大体感受：\n\n[博客园](http://www.cnblogs.com)挺好的，不过不喜欢其编码方式，真的不喜欢。博客园的主题什么的都是可以定制，但是总归是写起来比较费劲的。\n\n[蚂蚁笔记](https://leanote.com)不错，我开始时候logo还不是这个<img src=\"http://7xvzwi.com1.z0.glb.clouddn.com/leanote_new_logo.png\" width=35 alt=\"新logo\">原来logo是<img src=\"http://7xvzwi.com1.z0.glb.clouddn.com/leanote_old_logo.png\" width=35 alt=\"旧logo\" >😂,不过现在已经很厉害了，开始了各种业务。期待会走得更好更远。\n\n我是看了[巧哥](http://blog.devtang.com)的[这个博文](http://blog.devtang.com/2012/02/10/setup-blog-based-on-github/)才开始准备转到Github的。。赶脚markdown很好玩，虽然出来很早了，但是并没有仔细的去学习这个语法，于是乎这个博客就用[hexo](https://hexo.io)进行搭建。\n\n虽然我还不知道怎么让百度收录我的Github，但是主要的是能尝试着自己想试试确没有尝试的事情！","slug":"about-change-blog","published":1,"updated":"2016-07-25T00:09:51.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixbaqym50000cb6an38fe818","content":"<p>你敢信！我又搬家了。。</p>\n<p>之前在<a href=\"http://www.cnblogs.com/madordie/\" target=\"_blank\" rel=\"external\">博客园</a>后来又去了<a href=\"http://madordie.leanote.com\" target=\"_blank\" rel=\"external\">蚂蚁笔记</a>，最后吧，我就到了<a href=\"https://madordie.github.io\">这里</a>。</p>\n<p>说下大体感受：</p>\n<p><a href=\"http://www.cnblogs.com\" target=\"_blank\" rel=\"external\">博客园</a>挺好的，不过不喜欢其编码方式，真的不喜欢。博客园的主题什么的都是可以定制，但是总归是写起来比较费劲的。</p>\n<p><a href=\"https://leanote.com\" target=\"_blank\" rel=\"external\">蚂蚁笔记</a>不错，我开始时候logo还不是这个<img src=\"http://7xvzwi.com1.z0.glb.clouddn.com/leanote_new_logo.png\" width=\"35\" alt=\"新logo\">原来logo是<img src=\"http://7xvzwi.com1.z0.glb.clouddn.com/leanote_old_logo.png\" width=\"35\" alt=\"旧logo\">😂,不过现在已经很厉害了，开始了各种业务。期待会走得更好更远。</p>\n<p>我是看了<a href=\"http://blog.devtang.com\" target=\"_blank\" rel=\"external\">巧哥</a>的<a href=\"http://blog.devtang.com/2012/02/10/setup-blog-based-on-github/\" target=\"_blank\" rel=\"external\">这个博文</a>才开始准备转到Github的。。赶脚markdown很好玩，虽然出来很早了，但是并没有仔细的去学习这个语法，于是乎这个博客就用<a href=\"https://hexo.io\" target=\"_blank\" rel=\"external\">hexo</a>进行搭建。</p>\n<p>虽然我还不知道怎么让百度收录我的Github，但是主要的是能尝试着自己想试试确没有尝试的事情！</p>\n","excerpt":"","more":"<p>你敢信！我又搬家了。。</p>\n<p>之前在<a href=\"http://www.cnblogs.com/madordie/\">博客园</a>后来又去了<a href=\"http://madordie.leanote.com\">蚂蚁笔记</a>，最后吧，我就到了<a href=\"https://madordie.github.io\">这里</a>。</p>\n<p>说下大体感受：</p>\n<p><a href=\"http://www.cnblogs.com\">博客园</a>挺好的，不过不喜欢其编码方式，真的不喜欢。博客园的主题什么的都是可以定制，但是总归是写起来比较费劲的。</p>\n<p><a href=\"https://leanote.com\">蚂蚁笔记</a>不错，我开始时候logo还不是这个<img src=\"http://7xvzwi.com1.z0.glb.clouddn.com/leanote_new_logo.png\" width=35 alt=\"新logo\">原来logo是<img src=\"http://7xvzwi.com1.z0.glb.clouddn.com/leanote_old_logo.png\" width=35 alt=\"旧logo\" >😂,不过现在已经很厉害了，开始了各种业务。期待会走得更好更远。</p>\n<p>我是看了<a href=\"http://blog.devtang.com\">巧哥</a>的<a href=\"http://blog.devtang.com/2012/02/10/setup-blog-based-on-github/\">这个博文</a>才开始准备转到Github的。。赶脚markdown很好玩，虽然出来很早了，但是并没有仔细的去学习这个语法，于是乎这个博客就用<a href=\"https://hexo.io\">hexo</a>进行搭建。</p>\n<p>虽然我还不知道怎么让百度收录我的Github，但是主要的是能尝试着自己想试试确没有尝试的事情！</p>\n"},{"title":"关于转载的文章","date":"2016-07-24T03:52:40.000Z","_content":"\n一点删除原链接的转载文章的牢骚\n\n<!--more-->\n\n# 缘由\n\n前两天看到朋友圈一个哥们转载了许多关于iOS的一些文章，很是兴奋，去围观。突然发现这文笔绝对是经过校对的。心中大喜，以为淘到宝了（因为文章并没有署名转载出处，所以应该是原创）。之后看了一下他的另一个文章，刚好我百度过这个文章的原作者的最后一个系列的，于是我又翻阅了一下看看是不是不一样，结果和我想的一样，除了删除了作者的署名之外其他的都是一样的。于是关掉了网页，心中默默的鄙视。\n\n\n# 关于转载的别人文章\n\n对于一些大神的技术文章都是喜欢的，爱不释手的那种，我也是。有的能转载的我就转载，不能转载的，我会复制下来，放在我自己的文件夹中，为的是方便查询。在转载的时候我会特意标示转载的地址。而且一般情况下我会在文章的开始写上几句简单的主要的思想（比如：[《[转]蓝牙开发》](http://www.cnblogs.com/madordie/p/5159597.html)、[《[搬运] mac下安装GDB》](http://www.cnblogs.com/madordie/p/4322044.html)、[《［搬运］MAC 下安装 brew》](http://www.cnblogs.com/madordie/p/4322042.html)），当然有时候没来得及的就忘了😂（比如：[《[搬运] iOS 7 侧滑返回手势使用和错误集》](http://www.cnblogs.com/madordie/p/4357685.html)）。\n\n还有关于文章的排版，殊不知原作者为了让读者更好的阅读会对排版做的比较好，有的人为了阅读方便会去阅读原作者的文章。比如说我这种强迫症。\n\n\n# 我对删除原链的转载文章态度\n\n然后说一下我对于那些抄袭的，然后删除了原链接的人鄙视一下。每一篇文章都是别人花费了大量的精力去完成的，有的为了让读者能够更清楚的理解，所以会在发布的时候找别人去读一读，看能不能理解其中云云。然而对文章的原链接保存是一种对别人劳动成果的尊重，对原作者最基本的尊重。\n\n别的不想多说了。转载请注明出处。谢谢！\n且行且珍惜。","source":"_posts/about-reprint-article.md","raw":"---\ntitle: 关于转载的文章\ndate: 2016-07-24 11:52:40\ncategories:\n    - 感悟\n---\n\n一点删除原链接的转载文章的牢骚\n\n<!--more-->\n\n# 缘由\n\n前两天看到朋友圈一个哥们转载了许多关于iOS的一些文章，很是兴奋，去围观。突然发现这文笔绝对是经过校对的。心中大喜，以为淘到宝了（因为文章并没有署名转载出处，所以应该是原创）。之后看了一下他的另一个文章，刚好我百度过这个文章的原作者的最后一个系列的，于是我又翻阅了一下看看是不是不一样，结果和我想的一样，除了删除了作者的署名之外其他的都是一样的。于是关掉了网页，心中默默的鄙视。\n\n\n# 关于转载的别人文章\n\n对于一些大神的技术文章都是喜欢的，爱不释手的那种，我也是。有的能转载的我就转载，不能转载的，我会复制下来，放在我自己的文件夹中，为的是方便查询。在转载的时候我会特意标示转载的地址。而且一般情况下我会在文章的开始写上几句简单的主要的思想（比如：[《[转]蓝牙开发》](http://www.cnblogs.com/madordie/p/5159597.html)、[《[搬运] mac下安装GDB》](http://www.cnblogs.com/madordie/p/4322044.html)、[《［搬运］MAC 下安装 brew》](http://www.cnblogs.com/madordie/p/4322042.html)），当然有时候没来得及的就忘了😂（比如：[《[搬运] iOS 7 侧滑返回手势使用和错误集》](http://www.cnblogs.com/madordie/p/4357685.html)）。\n\n还有关于文章的排版，殊不知原作者为了让读者更好的阅读会对排版做的比较好，有的人为了阅读方便会去阅读原作者的文章。比如说我这种强迫症。\n\n\n# 我对删除原链的转载文章态度\n\n然后说一下我对于那些抄袭的，然后删除了原链接的人鄙视一下。每一篇文章都是别人花费了大量的精力去完成的，有的为了让读者能够更清楚的理解，所以会在发布的时候找别人去读一读，看能不能理解其中云云。然而对文章的原链接保存是一种对别人劳动成果的尊重，对原作者最基本的尊重。\n\n别的不想多说了。转载请注明出处。谢谢！\n且行且珍惜。","slug":"about-reprint-article","published":1,"updated":"2016-10-22T13:54:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixbaqym90001cb6abz3lrsn0","content":"<p>一点删除原链接的转载文章的牢骚</p>\n<a id=\"more\"></a>\n<h1 id=\"缘由\"><a href=\"#缘由\" class=\"headerlink\" title=\"缘由\"></a>缘由</h1><p>前两天看到朋友圈一个哥们转载了许多关于iOS的一些文章，很是兴奋，去围观。突然发现这文笔绝对是经过校对的。心中大喜，以为淘到宝了（因为文章并没有署名转载出处，所以应该是原创）。之后看了一下他的另一个文章，刚好我百度过这个文章的原作者的最后一个系列的，于是我又翻阅了一下看看是不是不一样，结果和我想的一样，除了删除了作者的署名之外其他的都是一样的。于是关掉了网页，心中默默的鄙视。</p>\n<h1 id=\"关于转载的别人文章\"><a href=\"#关于转载的别人文章\" class=\"headerlink\" title=\"关于转载的别人文章\"></a>关于转载的别人文章</h1><p>对于一些大神的技术文章都是喜欢的，爱不释手的那种，我也是。有的能转载的我就转载，不能转载的，我会复制下来，放在我自己的文件夹中，为的是方便查询。在转载的时候我会特意标示转载的地址。而且一般情况下我会在文章的开始写上几句简单的主要的思想（比如：<a href=\"http://www.cnblogs.com/madordie/p/5159597.html\" target=\"_blank\" rel=\"external\">《[转]蓝牙开发》</a>、<a href=\"http://www.cnblogs.com/madordie/p/4322044.html\" target=\"_blank\" rel=\"external\">《[搬运] mac下安装GDB》</a>、<a href=\"http://www.cnblogs.com/madordie/p/4322042.html\" target=\"_blank\" rel=\"external\">《［搬运］MAC 下安装 brew》</a>），当然有时候没来得及的就忘了😂（比如：<a href=\"http://www.cnblogs.com/madordie/p/4357685.html\" target=\"_blank\" rel=\"external\">《[搬运] iOS 7 侧滑返回手势使用和错误集》</a>）。</p>\n<p>还有关于文章的排版，殊不知原作者为了让读者更好的阅读会对排版做的比较好，有的人为了阅读方便会去阅读原作者的文章。比如说我这种强迫症。</p>\n<h1 id=\"我对删除原链的转载文章态度\"><a href=\"#我对删除原链的转载文章态度\" class=\"headerlink\" title=\"我对删除原链的转载文章态度\"></a>我对删除原链的转载文章态度</h1><p>然后说一下我对于那些抄袭的，然后删除了原链接的人鄙视一下。每一篇文章都是别人花费了大量的精力去完成的，有的为了让读者能够更清楚的理解，所以会在发布的时候找别人去读一读，看能不能理解其中云云。然而对文章的原链接保存是一种对别人劳动成果的尊重，对原作者最基本的尊重。</p>\n<p>别的不想多说了。转载请注明出处。谢谢！<br>且行且珍惜。</p>\n","excerpt":"<p>一点删除原链接的转载文章的牢骚</p>","more":"<h1 id=\"缘由\"><a href=\"#缘由\" class=\"headerlink\" title=\"缘由\"></a>缘由</h1><p>前两天看到朋友圈一个哥们转载了许多关于iOS的一些文章，很是兴奋，去围观。突然发现这文笔绝对是经过校对的。心中大喜，以为淘到宝了（因为文章并没有署名转载出处，所以应该是原创）。之后看了一下他的另一个文章，刚好我百度过这个文章的原作者的最后一个系列的，于是我又翻阅了一下看看是不是不一样，结果和我想的一样，除了删除了作者的署名之外其他的都是一样的。于是关掉了网页，心中默默的鄙视。</p>\n<h1 id=\"关于转载的别人文章\"><a href=\"#关于转载的别人文章\" class=\"headerlink\" title=\"关于转载的别人文章\"></a>关于转载的别人文章</h1><p>对于一些大神的技术文章都是喜欢的，爱不释手的那种，我也是。有的能转载的我就转载，不能转载的，我会复制下来，放在我自己的文件夹中，为的是方便查询。在转载的时候我会特意标示转载的地址。而且一般情况下我会在文章的开始写上几句简单的主要的思想（比如：<a href=\"http://www.cnblogs.com/madordie/p/5159597.html\">《[转]蓝牙开发》</a>、<a href=\"http://www.cnblogs.com/madordie/p/4322044.html\">《[搬运] mac下安装GDB》</a>、<a href=\"http://www.cnblogs.com/madordie/p/4322042.html\">《［搬运］MAC 下安装 brew》</a>），当然有时候没来得及的就忘了😂（比如：<a href=\"http://www.cnblogs.com/madordie/p/4357685.html\">《[搬运] iOS 7 侧滑返回手势使用和错误集》</a>）。</p>\n<p>还有关于文章的排版，殊不知原作者为了让读者更好的阅读会对排版做的比较好，有的人为了阅读方便会去阅读原作者的文章。比如说我这种强迫症。</p>\n<h1 id=\"我对删除原链的转载文章态度\"><a href=\"#我对删除原链的转载文章态度\" class=\"headerlink\" title=\"我对删除原链的转载文章态度\"></a>我对删除原链的转载文章态度</h1><p>然后说一下我对于那些抄袭的，然后删除了原链接的人鄙视一下。每一篇文章都是别人花费了大量的精力去完成的，有的为了让读者能够更清楚的理解，所以会在发布的时候找别人去读一读，看能不能理解其中云云。然而对文章的原链接保存是一种对别人劳动成果的尊重，对原作者最基本的尊重。</p>\n<p>别的不想多说了。转载请注明出处。谢谢！<br>且行且珍惜。</p>"},{"title":"科学上网之搬瓦工ss搭建笔记","date":"2016-12-19T12:37:11.000Z","_content":"\n原来吧，用用goagent、Lantern、XX-Net，确实，这玩意只能Google出来结果，但是有的站点打不开才是最骚的。。\n同事搞了个搬瓦工挺便宜，于是乎就也搞了一个。不过强迫症犯了，尝试了各种SS版本以及各种优化，目的是找个流畅点的版本进行__科学上网__。\n\n<!--more-->\n\n# 写在前面\n  - 红线越不得！红线越不得！红线越不得！重要的事情说3遍。\n  - 参看第一条\n  - 参看第一条\n  - 参看第一条\n  \n# 目前安装的 rss\n  尝试了各种版本的系统，各种ss分支，最后用了rss，然后又花了一下，觉得速度可以了，延迟的问题无解。ping过去就是那么慢。。\n  注意：为了重启不配置，要把里面没有自启动的添加到启动项。具体方法 Google一下。我加在了 `/etc/rc.local`\n\n## shadowsocks-rss\n  - [wiki](https://github.com/breakwa11/shadowsocks-rss/wiki)\n  - [ShadowsocksR 服务端安装教程](https://github.com/breakwa11/shadowsocks-rss/wiki/Server-Setup)\n  - [macOS](https://github.com/shadowsocksr/ShadowsocksX-NG/releases)\n  - [iOS](https://itunes.apple.com/cn/app/id1178584911)\n  \n## 优化\n  - [官方优化方案](http://shadowsocks.org/en/config/advanced.html)\n  - [Net Speeder](https://www.dou-bi.co/netspeeder-jc1/) `wget http://linux.linzhihao.cn/shell/netspeeder.sh & bash netspeeder.sh`\n\n## 本地访问VPS脚本\n  我比较懒，密码都是随机的也不想改，所以做了一个脚本用来直接ssh登陆。\n  后来我发现我需要下载一些文件，于是乎我增加了两个参数。。\n  安装系统的时候修改一下，将`password`修改为随机生成的密码，这样也不用记录，直接复制粘贴。。\n  同时将`12345`替换为端口号。\n  将`1.2.3.4`替换为服务器IP，这个只需要写一次就好，基本上也不会改。。\n  这样搞完之后在`~/.profile`中增加`alias vps=\"/Users/Madordie/shell/Mac_shell/ss.sh\"`，然后执行`source ~/.profile`即可。\n  \n  这样就可以使用下面的简写：\n    - SSH登陆`vps`\n    - 下载文件`vps /server_path /local_path`，自行修改后面俩参数\n  \n  ```\n  $ cat ~/shell/Mac_shell/ss.sh \n  \n  #!/bin/bash\n\n  echo 'password'\n  port=12345\n  ip=1.2.3.4\n  usr=root\n\n  if [ $# -eq 0 ]; then\n      ssh $usr@$ip -p $port\n  elif [ $# -eq 2 ]; then \n      scp -P $port $usr@$ip:$1 $2\n  else\n      echo \"($*)你要干嘛。。\"\n  fi\n\n  ```\n  \n\n# 尝试的时候各种用的环境搭建\n  很显然上面的已经足够了，这个只是留个笔记，用来快速搭建某个环境啥的。。\n\n## CentOS\n\n### git\n  1. 直接安装\n    ```\n    yum install git\n    ```\n\n### go\n\n  1. 下载二进制文件：\n    ```\n    wget https://storage.googleapis.com/golang/go1.7.3.linux-amd64.tar.gz\n    ```\n  2. 解压并创建工作目录：\n    ```\n    tar -zxf go1.7.3.linux-amd64.tar.gz -C /usr/local/\n    ```\n  3. 设置环境变量：\n    在 /etc/profile 添加：\n    ```\n    export GOROOT=/usr/local/go \n    export GOBIN=$GOROOT/bin\n    export GOPKG=$GOROOT/pkg/tool/linux_amd64 \n    export GOARCH=amd64\n    export GOOS=linux\n    export GOPATH=/Golang\n    export PATH=$PATH:$GOBIN:$GOPKG:$GOPATH/bin\n    ```\n    4. 使之生效或者重新登录Linux也可\n    ```\n    source /etc/profile\n    ```\n  \n## scp\n  \n  `scp -P 8888 root@127.0.0.10:/root/my_key/ca.cert.pem .`\n\n\n## Ubuntu\n\n### 更新\n  ```\n    sudo apt-get update\n  ```\n\n### git\n  ```\n  sudo apt-get install git  \n  ```\n### go\n  ```\n  sudo apt-get install golang\n  ```","source":"_posts/bandwagonhost-note.md","raw":"---\ntitle: 科学上网之搬瓦工ss搭建笔记\ndate: 2016-12-19 20:37:11\ntags:\n---\n\n原来吧，用用goagent、Lantern、XX-Net，确实，这玩意只能Google出来结果，但是有的站点打不开才是最骚的。。\n同事搞了个搬瓦工挺便宜，于是乎就也搞了一个。不过强迫症犯了，尝试了各种SS版本以及各种优化，目的是找个流畅点的版本进行__科学上网__。\n\n<!--more-->\n\n# 写在前面\n  - 红线越不得！红线越不得！红线越不得！重要的事情说3遍。\n  - 参看第一条\n  - 参看第一条\n  - 参看第一条\n  \n# 目前安装的 rss\n  尝试了各种版本的系统，各种ss分支，最后用了rss，然后又花了一下，觉得速度可以了，延迟的问题无解。ping过去就是那么慢。。\n  注意：为了重启不配置，要把里面没有自启动的添加到启动项。具体方法 Google一下。我加在了 `/etc/rc.local`\n\n## shadowsocks-rss\n  - [wiki](https://github.com/breakwa11/shadowsocks-rss/wiki)\n  - [ShadowsocksR 服务端安装教程](https://github.com/breakwa11/shadowsocks-rss/wiki/Server-Setup)\n  - [macOS](https://github.com/shadowsocksr/ShadowsocksX-NG/releases)\n  - [iOS](https://itunes.apple.com/cn/app/id1178584911)\n  \n## 优化\n  - [官方优化方案](http://shadowsocks.org/en/config/advanced.html)\n  - [Net Speeder](https://www.dou-bi.co/netspeeder-jc1/) `wget http://linux.linzhihao.cn/shell/netspeeder.sh & bash netspeeder.sh`\n\n## 本地访问VPS脚本\n  我比较懒，密码都是随机的也不想改，所以做了一个脚本用来直接ssh登陆。\n  后来我发现我需要下载一些文件，于是乎我增加了两个参数。。\n  安装系统的时候修改一下，将`password`修改为随机生成的密码，这样也不用记录，直接复制粘贴。。\n  同时将`12345`替换为端口号。\n  将`1.2.3.4`替换为服务器IP，这个只需要写一次就好，基本上也不会改。。\n  这样搞完之后在`~/.profile`中增加`alias vps=\"/Users/Madordie/shell/Mac_shell/ss.sh\"`，然后执行`source ~/.profile`即可。\n  \n  这样就可以使用下面的简写：\n    - SSH登陆`vps`\n    - 下载文件`vps /server_path /local_path`，自行修改后面俩参数\n  \n  ```\n  $ cat ~/shell/Mac_shell/ss.sh \n  \n  #!/bin/bash\n\n  echo 'password'\n  port=12345\n  ip=1.2.3.4\n  usr=root\n\n  if [ $# -eq 0 ]; then\n      ssh $usr@$ip -p $port\n  elif [ $# -eq 2 ]; then \n      scp -P $port $usr@$ip:$1 $2\n  else\n      echo \"($*)你要干嘛。。\"\n  fi\n\n  ```\n  \n\n# 尝试的时候各种用的环境搭建\n  很显然上面的已经足够了，这个只是留个笔记，用来快速搭建某个环境啥的。。\n\n## CentOS\n\n### git\n  1. 直接安装\n    ```\n    yum install git\n    ```\n\n### go\n\n  1. 下载二进制文件：\n    ```\n    wget https://storage.googleapis.com/golang/go1.7.3.linux-amd64.tar.gz\n    ```\n  2. 解压并创建工作目录：\n    ```\n    tar -zxf go1.7.3.linux-amd64.tar.gz -C /usr/local/\n    ```\n  3. 设置环境变量：\n    在 /etc/profile 添加：\n    ```\n    export GOROOT=/usr/local/go \n    export GOBIN=$GOROOT/bin\n    export GOPKG=$GOROOT/pkg/tool/linux_amd64 \n    export GOARCH=amd64\n    export GOOS=linux\n    export GOPATH=/Golang\n    export PATH=$PATH:$GOBIN:$GOPKG:$GOPATH/bin\n    ```\n    4. 使之生效或者重新登录Linux也可\n    ```\n    source /etc/profile\n    ```\n  \n## scp\n  \n  `scp -P 8888 root@127.0.0.10:/root/my_key/ca.cert.pem .`\n\n\n## Ubuntu\n\n### 更新\n  ```\n    sudo apt-get update\n  ```\n\n### git\n  ```\n  sudo apt-get install git  \n  ```\n### go\n  ```\n  sudo apt-get install golang\n  ```","slug":"bandwagonhost-note","published":1,"updated":"2016-12-30T11:10:42.000Z","_id":"cixbaqymc0002cb6a0w1lsyw1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>原来吧，用用goagent、Lantern、XX-Net，确实，这玩意只能Google出来结果，但是有的站点打不开才是最骚的。。<br>同事搞了个搬瓦工挺便宜，于是乎就也搞了一个。不过强迫症犯了，尝试了各种SS版本以及各种优化，目的是找个流畅点的版本进行<strong>科学上网</strong>。</p>\n<a id=\"more\"></a>\n<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><ul>\n<li>红线越不得！红线越不得！红线越不得！重要的事情说3遍。</li>\n<li>参看第一条</li>\n<li>参看第一条</li>\n<li>参看第一条</li>\n</ul>\n<h1 id=\"目前安装的-rss\"><a href=\"#目前安装的-rss\" class=\"headerlink\" title=\"目前安装的 rss\"></a>目前安装的 rss</h1><p>  尝试了各种版本的系统，各种ss分支，最后用了rss，然后又花了一下，觉得速度可以了，延迟的问题无解。ping过去就是那么慢。。<br>  注意：为了重启不配置，要把里面没有自启动的添加到启动项。具体方法 Google一下。我加在了 <code>/etc/rc.local</code></p>\n<h2 id=\"shadowsocks-rss\"><a href=\"#shadowsocks-rss\" class=\"headerlink\" title=\"shadowsocks-rss\"></a>shadowsocks-rss</h2><ul>\n<li><a href=\"https://github.com/breakwa11/shadowsocks-rss/wiki\" target=\"_blank\" rel=\"external\">wiki</a></li>\n<li><a href=\"https://github.com/breakwa11/shadowsocks-rss/wiki/Server-Setup\" target=\"_blank\" rel=\"external\">ShadowsocksR 服务端安装教程</a></li>\n<li><a href=\"https://github.com/shadowsocksr/ShadowsocksX-NG/releases\" target=\"_blank\" rel=\"external\">macOS</a></li>\n<li><a href=\"https://itunes.apple.com/cn/app/id1178584911\" target=\"_blank\" rel=\"external\">iOS</a></li>\n</ul>\n<h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><ul>\n<li><a href=\"http://shadowsocks.org/en/config/advanced.html\" target=\"_blank\" rel=\"external\">官方优化方案</a></li>\n<li><a href=\"https://www.dou-bi.co/netspeeder-jc1/\" target=\"_blank\" rel=\"external\">Net Speeder</a> <code>wget http://linux.linzhihao.cn/shell/netspeeder.sh &amp; bash netspeeder.sh</code></li>\n</ul>\n<h2 id=\"本地访问VPS脚本\"><a href=\"#本地访问VPS脚本\" class=\"headerlink\" title=\"本地访问VPS脚本\"></a>本地访问VPS脚本</h2><p>  我比较懒，密码都是随机的也不想改，所以做了一个脚本用来直接ssh登陆。<br>  后来我发现我需要下载一些文件，于是乎我增加了两个参数。。<br>  安装系统的时候修改一下，将<code>password</code>修改为随机生成的密码，这样也不用记录，直接复制粘贴。。<br>  同时将<code>12345</code>替换为端口号。<br>  将<code>1.2.3.4</code>替换为服务器IP，这个只需要写一次就好，基本上也不会改。。<br>  这样搞完之后在<code>~/.profile</code>中增加<code>alias vps=&quot;/Users/Madordie/shell/Mac_shell/ss.sh&quot;</code>，然后执行<code>source ~/.profile</code>即可。</p>\n<p>  这样就可以使用下面的简写：</p>\n<pre><code>- SSH登陆`vps`\n- 下载文件`vps /server_path /local_path`，自行修改后面俩参数\n</code></pre>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat ~/shell/Mac_shell/ss.sh </div><div class=\"line\"></div><div class=\"line\">#!/bin/bash</div><div class=\"line\"></div><div class=\"line\">echo &apos;password&apos;</div><div class=\"line\">port=12345</div><div class=\"line\">ip=1.2.3.4</div><div class=\"line\">usr=root</div><div class=\"line\"></div><div class=\"line\">if [ $# -eq 0 ]; then</div><div class=\"line\">    ssh $usr@$ip -p $port</div><div class=\"line\">elif [ $# -eq 2 ]; then </div><div class=\"line\">    scp -P $port $usr@$ip:$1 $2</div><div class=\"line\">else</div><div class=\"line\">    echo &quot;($*)你要干嘛。。&quot;</div><div class=\"line\">fi</div></pre></td></tr></table></figure>\n<h1 id=\"尝试的时候各种用的环境搭建\"><a href=\"#尝试的时候各种用的环境搭建\" class=\"headerlink\" title=\"尝试的时候各种用的环境搭建\"></a>尝试的时候各种用的环境搭建</h1><p>  很显然上面的已经足够了，这个只是留个笔记，用来快速搭建某个环境啥的。。</p>\n<h2 id=\"CentOS\"><a href=\"#CentOS\" class=\"headerlink\" title=\"CentOS\"></a>CentOS</h2><h3 id=\"git\"><a href=\"#git\" class=\"headerlink\" title=\"git\"></a>git</h3><ol>\n<li>直接安装<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install git</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"go\"><a href=\"#go\" class=\"headerlink\" title=\"go\"></a>go</h3><ol>\n<li><p>下载二进制文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://storage.googleapis.com/golang/go1.7.3.linux-amd64.tar.gz</div></pre></td></tr></table></figure>\n</li>\n<li><p>解压并创建工作目录：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar -zxf go1.7.3.linux-amd64.tar.gz -C /usr/local/</div></pre></td></tr></table></figure>\n</li>\n<li><p>设置环境变量：<br>在 /etc/profile 添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GOROOT=/usr/local/go </div><div class=\"line\">export GOBIN=$GOROOT/bin</div><div class=\"line\">export GOPKG=$GOROOT/pkg/tool/linux_amd64 </div><div class=\"line\">export GOARCH=amd64</div><div class=\"line\">export GOOS=linux</div><div class=\"line\">export GOPATH=/Golang</div><div class=\"line\">export PATH=$PATH:$GOBIN:$GOPKG:$GOPATH/bin</div></pre></td></tr></table></figure>\n<ol>\n<li>使之生效或者重新登录Linux也可<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source /etc/profile</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"scp\"><a href=\"#scp\" class=\"headerlink\" title=\"scp\"></a>scp</h2><p>  <code>scp -P 8888 root@127.0.0.10:/root/my_key/ca.cert.pem .</code></p>\n<h2 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h2><h3 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h3>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div></pre></td></tr></table></figure>\n<h3 id=\"git-1\"><a href=\"#git-1\" class=\"headerlink\" title=\"git\"></a>git</h3>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install git</div></pre></td></tr></table></figure>\n<h3 id=\"go-1\"><a href=\"#go-1\" class=\"headerlink\" title=\"go\"></a>go</h3>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install golang</div></pre></td></tr></table></figure>","excerpt":"<p>原来吧，用用goagent、Lantern、XX-Net，确实，这玩意只能Google出来结果，但是有的站点打不开才是最骚的。。<br>同事搞了个搬瓦工挺便宜，于是乎就也搞了一个。不过强迫症犯了，尝试了各种SS版本以及各种优化，目的是找个流畅点的版本进行<strong>科学上网</strong>。</p>","more":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><ul>\n<li>红线越不得！红线越不得！红线越不得！重要的事情说3遍。</li>\n<li>参看第一条</li>\n<li>参看第一条</li>\n<li>参看第一条</li>\n</ul>\n<h1 id=\"目前安装的-rss\"><a href=\"#目前安装的-rss\" class=\"headerlink\" title=\"目前安装的 rss\"></a>目前安装的 rss</h1><p>  尝试了各种版本的系统，各种ss分支，最后用了rss，然后又花了一下，觉得速度可以了，延迟的问题无解。ping过去就是那么慢。。<br>  注意：为了重启不配置，要把里面没有自启动的添加到启动项。具体方法 Google一下。我加在了 <code>/etc/rc.local</code></p>\n<h2 id=\"shadowsocks-rss\"><a href=\"#shadowsocks-rss\" class=\"headerlink\" title=\"shadowsocks-rss\"></a>shadowsocks-rss</h2><ul>\n<li><a href=\"https://github.com/breakwa11/shadowsocks-rss/wiki\">wiki</a></li>\n<li><a href=\"https://github.com/breakwa11/shadowsocks-rss/wiki/Server-Setup\">ShadowsocksR 服务端安装教程</a></li>\n<li><a href=\"https://github.com/shadowsocksr/ShadowsocksX-NG/releases\">macOS</a></li>\n<li><a href=\"https://itunes.apple.com/cn/app/id1178584911\">iOS</a></li>\n</ul>\n<h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><ul>\n<li><a href=\"http://shadowsocks.org/en/config/advanced.html\">官方优化方案</a></li>\n<li><a href=\"https://www.dou-bi.co/netspeeder-jc1/\">Net Speeder</a> <code>wget http://linux.linzhihao.cn/shell/netspeeder.sh &amp; bash netspeeder.sh</code></li>\n</ul>\n<h2 id=\"本地访问VPS脚本\"><a href=\"#本地访问VPS脚本\" class=\"headerlink\" title=\"本地访问VPS脚本\"></a>本地访问VPS脚本</h2><p>  我比较懒，密码都是随机的也不想改，所以做了一个脚本用来直接ssh登陆。<br>  后来我发现我需要下载一些文件，于是乎我增加了两个参数。。<br>  安装系统的时候修改一下，将<code>password</code>修改为随机生成的密码，这样也不用记录，直接复制粘贴。。<br>  同时将<code>12345</code>替换为端口号。<br>  将<code>1.2.3.4</code>替换为服务器IP，这个只需要写一次就好，基本上也不会改。。<br>  这样搞完之后在<code>~/.profile</code>中增加<code>alias vps=&quot;/Users/Madordie/shell/Mac_shell/ss.sh&quot;</code>，然后执行<code>source ~/.profile</code>即可。</p>\n<p>  这样就可以使用下面的简写：</p>\n<pre><code>- SSH登陆`vps`\n- 下载文件`vps /server_path /local_path`，自行修改后面俩参数\n</code></pre>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat ~/shell/Mac_shell/ss.sh </div><div class=\"line\"></div><div class=\"line\">#!/bin/bash</div><div class=\"line\"></div><div class=\"line\">echo &apos;password&apos;</div><div class=\"line\">port=12345</div><div class=\"line\">ip=1.2.3.4</div><div class=\"line\">usr=root</div><div class=\"line\"></div><div class=\"line\">if [ $# -eq 0 ]; then</div><div class=\"line\">    ssh $usr@$ip -p $port</div><div class=\"line\">elif [ $# -eq 2 ]; then </div><div class=\"line\">    scp -P $port $usr@$ip:$1 $2</div><div class=\"line\">else</div><div class=\"line\">    echo &quot;($*)你要干嘛。。&quot;</div><div class=\"line\">fi</div></pre></td></tr></table></figure>\n<h1 id=\"尝试的时候各种用的环境搭建\"><a href=\"#尝试的时候各种用的环境搭建\" class=\"headerlink\" title=\"尝试的时候各种用的环境搭建\"></a>尝试的时候各种用的环境搭建</h1><p>  很显然上面的已经足够了，这个只是留个笔记，用来快速搭建某个环境啥的。。</p>\n<h2 id=\"CentOS\"><a href=\"#CentOS\" class=\"headerlink\" title=\"CentOS\"></a>CentOS</h2><h3 id=\"git\"><a href=\"#git\" class=\"headerlink\" title=\"git\"></a>git</h3><ol>\n<li>直接安装<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install git</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"go\"><a href=\"#go\" class=\"headerlink\" title=\"go\"></a>go</h3><ol>\n<li><p>下载二进制文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://storage.googleapis.com/golang/go1.7.3.linux-amd64.tar.gz</div></pre></td></tr></table></figure>\n</li>\n<li><p>解压并创建工作目录：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar -zxf go1.7.3.linux-amd64.tar.gz -C /usr/local/</div></pre></td></tr></table></figure>\n</li>\n<li><p>设置环境变量：<br>在 /etc/profile 添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GOROOT=/usr/local/go </div><div class=\"line\">export GOBIN=$GOROOT/bin</div><div class=\"line\">export GOPKG=$GOROOT/pkg/tool/linux_amd64 </div><div class=\"line\">export GOARCH=amd64</div><div class=\"line\">export GOOS=linux</div><div class=\"line\">export GOPATH=/Golang</div><div class=\"line\">export PATH=$PATH:$GOBIN:$GOPKG:$GOPATH/bin</div></pre></td></tr></table></figure>\n<ol>\n<li>使之生效或者重新登录Linux也可<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source /etc/profile</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"scp\"><a href=\"#scp\" class=\"headerlink\" title=\"scp\"></a>scp</h2><p>  <code>scp -P 8888 root@127.0.0.10:/root/my_key/ca.cert.pem .</code></p>\n<h2 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h2><h3 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h3>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div></pre></td></tr></table></figure>\n<h3 id=\"git-1\"><a href=\"#git-1\" class=\"headerlink\" title=\"git\"></a>git</h3>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install git</div></pre></td></tr></table></figure>\n<h3 id=\"go-1\"><a href=\"#go-1\" class=\"headerlink\" title=\"go\"></a>go</h3>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install golang</div></pre></td></tr></table></figure>"},{"title":"Xcode8打包脚本","date":"2016-09-26T06:55:09.000Z","_content":"\nXcode8下的打包脚本\n\n<!--more-->\n\n## Xcode8\n\n  好悲催，Xcode8更新之后Jenkins打包失败了。。由于代码库中使用了swift3语法，故必须使用Xcode8。。\n  \n  先来重点：可用脚本：\n\n  ```bash\n  #!/bin/bash\n\n  #   追上fir API token 自动上传\n  #   基于当前代码进行打包打包目录：MyProject/build/MyProject_ent.ipa\n\n  cd MyProject\n\n  rm -rf ./build/*\n\n  xcodebuild -archivePath \"./build/xxx.xcarchive\" -workspace MyProject.xcworkspace -sdk iphoneos -scheme \"MyProject_ent\" -configuration \"Release Inhouse\" archive\n\n  echo \"<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"><plist version=\"1.0\"><dict><key>method</key><string>enterprise</string><key>compileBitcode</key><string>YES</string></dict></plist>\" > ./build/exportOptionsPlist.plist\n\n  xcodebuild -exportArchive -archivePath \"./build/xxx.xcarchive\" -exportPath \"./build/\" -exportOptionsPlist ./build/exportOptionsPlist.plist\n\n\n  cd build/\n\n  fir i ./MyProject_ent.ipa\n\n\n  if [ -n \"$1\" ]; then\n      git log -10 > git.log\n      fir p ./MyProject_ent.ipa -T $1 -c git.log\n  fi\n\n  ```\n  \n  之前漏掉了一个错误：`The flag -exportFormat cannot be specified along with -exportOptionsPlist` 导致了最终包签名错误，而无法安装。\n\n  exportOptionsPlist参考的[iOS 打包总结](https://testerhome.com/topics/4619)\n\n\n## 手动上传\n  ```\n  #!/bin/bash\n\n  #   追上fir API token 自动上传\n  #   基于当前代码进行打包打包目录：xxxx/build/xxxx_ent.ipa\n\n  workspace_name=xxxx\n  scheme_name=xxxx_ent\n\n\n  cd $workspace_name\n\n  rm -rf ./build/*\n\n  xcodebuild -archivePath \"./build/xxx.xcarchive\" -workspace $workspace_name.xcworkspace -sdk iphoneos -scheme $scheme_name -configuration \"Release Inhouse\" archive\n\n\n  cat << EOF > ./build/exportOptionsPlist.plist\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n  <plist version=\"1.0\">\n      <dict>\n          <key>method</key>\n          <string>enterprise</string>\n          <key>compileBitcode</key>\n              <false/>\n      </dict>\n  </plist>\n  EOF\n\n  xcodebuild -exportArchive -archivePath \"./build/xxx.xcarchive\" -exportOptionsPlist \"./build/exportOptionsPlist.plist\" -exportPath \"./build/\"\n\n  cd build/\n\n\n  git log -10 > git.log\n\n  #拷贝ipa到临时文件夹中\n  cp ./$scheme_name.ipa ./tmp.zip\n  #将ipa解压\n  unzip tmp.zip\n\n  #app文件中Info.plist文件路径\n  app_infoplist_path=$(pwd)/Payload/*.app/Info.plist\n  #取bundleIdentifier\n  bundleIdentifier=$(/usr/libexec/PlistBuddy -c \"print CFBundleIdentifier\" ${app_infoplist_path})\n  #取build值\n  bundleVersion=$(/usr/libexec/PlistBuddy -c \"print CFBundleVersion\" ${app_infoplist_path})\n  #显示名称\n  ipa_name=$workspace_name\n\n  #ipa下载url\n  ipa_download_url=\"https://***/install_ipa/raw/master/xxxx_ent.ipa\"\n  #itms-services协议串\n  ios_install_url=\"itms-services://?action=download-manifest&url=https://***/install_ipa/raw/master/xxxx_ent.plist\"\n\n  #生成install.html文件\n\n  cat << EOF > index.html\n  <!DOCTYPE HTML>\n  <html>\n    <head>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <title>安装</title>\n    </head>\n    <body>\n      <br>\n      <br>\n      <br>\n      <br>\n      <p align=center>\n          <font size=\"8\">\n              <a href=\"${ios_install_url}\">点击这里安装</a>\n          </font>\n      </p>\n\n      </div>\n    </body>\n  </html>\n  EOF\n\n  #生成plist文件\n  cat << EOF > ${workspace_name}.plist\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n  <plist version=\"1.0\">\n  <dict>\n     <key>items</key>\n     <array>\n         <dict>\n             <key>assets</key>\n             <array>\n                 <dict>\n                     <key>kind</key>\n                     <string>software-package</string>\n                     <key>url</key>\n                     <string>${ipa_download_url}</string>\n                 </dict>\n                 <dict>\n                     <key>kind</key>\n                     <string>display-image</string>\n                     <key>needs-shine</key>\n                     <true/>\n                     <key>url</key>\n                     <string>http://git.oschina.net/logo.svg</string>\n                 </dict>\n             <dict>\n                     <key>kind</key>\n                     <string>full-size-image</string>\n                     <key>needs-shine</key>\n                     <true/>\n                     <key>url</key>\n                     <string>http://git.oschina.net/logo.svg</string>\n                 </dict>\n             </array><key>metadata</key>\n             <dict>\n                 <key>bundle-identifier</key>\n                 <string>${bundleIdentifier}</string>\n                 <key>bundle-version</key>\n                 <string>${bundleVersion}</string>\n                 <key>kind</key>\n                 <string>software</string>\n                 <key>subtitle</key>\n                 <string>${ipa_name}</string>\n                 <key>title</key>\n                 <string>${ipa_name}</string>\n             </dict>\n         </dict>\n     </array>\n  </dict>\n  </plist>\n  EOF\n\n  fir i $scheme_name.ipa\n  ```\n\n## 手动上传到OSC脚本\n  ```\n  #!/bin/bash\n\n  root_path=$(pwd)\n  workspace_name=Fangduoduo\n  scheme_name=XXX\n\n  # 编译\n  cd $root_path\n  cd $workspace_name\n\n  rm -rf ./build/*\n\n  xcodebuild -archivePath ./build/$scheme_name.xcarchive -workspace $workspace_name.xcworkspace -sdk iphoneos -scheme $scheme_name -configuration \"Release Inhouse\" archive\n\n  echo \"<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"><plist version=\"1.0\"><dict><key>method</key><string>enterprise</string><key>compileBitcode</key><false/></dict></plist>\" > ./build/exportOptionsPlist.plist\n\n  xcodebuild -exportArchive -archivePath ./build/$scheme_name.xcarchive -exportOptionsPlist \"./build/exportOptionsPlist.plist\" -exportPath \"./build/\"\n\n\n  cd build/\n\n  if [ ! -f $scheme_name.ipa ]; then\n      echo \"*** 无法打包 ***\"\n      exit -1\n  fi\n\n  fir i ./$scheme_name.ipa\n\n  git log -10 > git.log\n  git_log=$(cat git.log)\n  # fir 上传\n  if [ -n \"$1\" ]; then\n      fir p ./$scheme_name.ipa -T $1 -c git.log\n  fi\n\n\n  # 校验HTML并上传\n\n  public_git_path=$root_path/public_ipa_tmp/\n  public_git_root=\"install_ipa\"\n  public_git=\"https://***/install_ipa.git\"\n  #ipa下载url\n  ipa_download_url=\"https://***/install_ipa/raw/master/XXX.ipa\"\n  #itms-services协议串\n  ios_install_url=\"itms-services://?action=download-manifest&url=https://***/install_ipa/raw/master/XXX.plist\"\n\n\n  cd $root_path/\n  # checkout path is OK\n  if [ ! -e $public_git_path ]; then\n      mkdir $public_git_path\n  fi\n\n  if [ -n $public_git_path ]; then\n      rm -rf $public_git_path\n  fi\n  mkdir $public_git_path\n  cd $public_git_path\n  git init\n  git remote add origin $public_git\n\n\n  cd $root_path/$workspace_name/build/\n\n  #拷贝ipa到临时文件夹中\n  cp ./$scheme_name.ipa ./tmp.zip\n  rm -rf Payload\n  #将ipa解压\n  unzip tmp.zip\n\n  #app文件中Info.plist文件路径\n  app_infoplist_path=$(pwd)/Payload/*.app/Info.plist\n  #取bundleIdentifier\n  bundleIdentifier=$(/usr/libexec/PlistBuddy -c \"print CFBundleIdentifier\" ${app_infoplist_path})\n  #取build值\n  bundleVersion=$(/usr/libexec/PlistBuddy -c \"print CFBundleVersion\" ${app_infoplist_path})\n  #取shortVersionbuild值\n  shortVersion=$(/usr/libexec/PlistBuddy -c \"print CFBundleShortVersionString\" ${app_infoplist_path})\n  #显示名称\n  ipa_name=$(/usr/libexec/PlistBuddy -c \"print CFBundleDisplayName\" ${app_infoplist_path})\n  nowTime=$(date +%Y-%m-%d\\ %H:%M)\n  log_url=\"https://madordie.github.io/uploads/avatar.png\"\n\n  #生成install.html文件\n\n  cat << EOF > index.html\n  <!DOCTYPE HTML>\n  <html>\n  <head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=0\">\n  <title>${ipa_name}安装</title>\n  <style>\n  .containor {\n      position: relative;\n      top: 0;\n      left: 0;\n      right: 0;\n      margin: 0 auto;\n      width: 100%;\n      max-width: 640px;\n      text-align: center;\n  }\n  .logo {\n      width: 120px;\n      margin-top: 30px;\n  }\n  .title,\n  .version_history,\n  .update_time {\n      text-align: center;\n      color: #999;\n      font-size: 16px;\n  }\n  .title {\n      margin-top: 10px;\n  }\n  .version_history,\n  .update_time {\n      margin-top: 5px;\n  }\n  .download {\n      display: block;\n      width: 150px;\n      height: 30px;\n      line-height: 30px;\n      margin: 0 auto;\n      margin-top: 20px;\n      border: 1px solid #eee;\n      border-radius: 20px;\n      text-decoration: none;\n      color: #999;\n  }\n  .log_title {\n      margin-top: 20px;\n      font-size: 18px;\n      color: #333;\n  }\n  .log {\n      color: #aaa;\n      padding: 20px;\n      text-align: left;\n      font-size: 12px;\n      line-height: 15px;\n      white-space: pre-wrap;\n      word-wrap: break-word;\n      overflow: hidden;\n  }\n  </style>\n  </head>\n  <body>\n  <div class=\"containor\">\n      <img class=\"logo\" src=${log_url} />\n      <div class=\"title\">$ipa_name</div>\n      <div class=\"version_history\">${shortVersion}(bundle:${bundleVersion})</div>\n      <div></div>\n      <div class=\"update_time\">${nowTime}</div>\n      <a class=\"download\" href=\"${ios_install_url}\">点击这里安装</a>\n      <div class=\"log_title\">更新日志</div>\n      <div class=\"log\"> ${git_log} </div>\n  </div>\n  </body>\n  </html>\n  EOF\n\n  #生成plist文件\n  cat << EOF > ${scheme_name}.plist\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n  <plist version=\"1.0\">\n  <dict>\n     <key>items</key>\n     <array>\n         <dict>\n             <key>assets</key>\n             <array>\n                 <dict>\n                     <key>kind</key>\n                     <string>software-package</string>\n                     <key>url</key>\n                     <string>${ipa_download_url}</string>\n                 </dict>\n                 <dict>\n                     <key>kind</key>\n                     <string>display-image</string>\n                     <key>needs-shine</key>\n                     <true/>\n                     <key>url</key>\n                     <string>http://git.oschina.net/logo.svg</string>\n                 </dict>\n             <dict>\n                     <key>kind</key>\n                     <string>full-size-image</string>\n                     <key>needs-shine</key>\n                     <true/>\n                     <key>url</key>\n                     <string>http://git.oschina.net/logo.svg</string>\n                 </dict>\n             </array><key>metadata</key>\n             <dict>\n                 <key>bundle-identifier</key>\n                 <string>${bundleIdentifier}</string>\n                 <key>bundle-version</key>\n                 <string>${bundleVersion}</string>\n                 <key>kind</key>\n                 <string>software</string>\n                 <key>subtitle</key>\n                 <string>${ipa_name}</string>\n                 <key>title</key>\n                 <string>${ipa_name}</string>\n             </dict>\n         </dict>\n     </array>\n  </dict>\n  </plist>\n  EOF\n\n  #fir i $scheme_name.ipa\n  cp $scheme_name.ipa $public_git_path\n  cp $scheme_name.plist $public_git_path\n  cp index.html $public_git_path\n\n  cd $public_git_path\n  ls -l > README.md\n  if [ ! -e \"./.git/\" ]; then\n      echo \"*** OSC的git目录不完整，无法上传，请联系开发! ***\"\n      exit -1\n  fi\n  echo \"commit and pushing ...\"\n  git add .\n  git commit -am $bundleVersion\n  git push -f origin master\n  ```","source":"_posts/build-ipa-sh.md","raw":"---\ntitle: Xcode8打包脚本\ndate: 2016-09-26 14:55:09\ntags:\n---\n\nXcode8下的打包脚本\n\n<!--more-->\n\n## Xcode8\n\n  好悲催，Xcode8更新之后Jenkins打包失败了。。由于代码库中使用了swift3语法，故必须使用Xcode8。。\n  \n  先来重点：可用脚本：\n\n  ```bash\n  #!/bin/bash\n\n  #   追上fir API token 自动上传\n  #   基于当前代码进行打包打包目录：MyProject/build/MyProject_ent.ipa\n\n  cd MyProject\n\n  rm -rf ./build/*\n\n  xcodebuild -archivePath \"./build/xxx.xcarchive\" -workspace MyProject.xcworkspace -sdk iphoneos -scheme \"MyProject_ent\" -configuration \"Release Inhouse\" archive\n\n  echo \"<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"><plist version=\"1.0\"><dict><key>method</key><string>enterprise</string><key>compileBitcode</key><string>YES</string></dict></plist>\" > ./build/exportOptionsPlist.plist\n\n  xcodebuild -exportArchive -archivePath \"./build/xxx.xcarchive\" -exportPath \"./build/\" -exportOptionsPlist ./build/exportOptionsPlist.plist\n\n\n  cd build/\n\n  fir i ./MyProject_ent.ipa\n\n\n  if [ -n \"$1\" ]; then\n      git log -10 > git.log\n      fir p ./MyProject_ent.ipa -T $1 -c git.log\n  fi\n\n  ```\n  \n  之前漏掉了一个错误：`The flag -exportFormat cannot be specified along with -exportOptionsPlist` 导致了最终包签名错误，而无法安装。\n\n  exportOptionsPlist参考的[iOS 打包总结](https://testerhome.com/topics/4619)\n\n\n## 手动上传\n  ```\n  #!/bin/bash\n\n  #   追上fir API token 自动上传\n  #   基于当前代码进行打包打包目录：xxxx/build/xxxx_ent.ipa\n\n  workspace_name=xxxx\n  scheme_name=xxxx_ent\n\n\n  cd $workspace_name\n\n  rm -rf ./build/*\n\n  xcodebuild -archivePath \"./build/xxx.xcarchive\" -workspace $workspace_name.xcworkspace -sdk iphoneos -scheme $scheme_name -configuration \"Release Inhouse\" archive\n\n\n  cat << EOF > ./build/exportOptionsPlist.plist\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n  <plist version=\"1.0\">\n      <dict>\n          <key>method</key>\n          <string>enterprise</string>\n          <key>compileBitcode</key>\n              <false/>\n      </dict>\n  </plist>\n  EOF\n\n  xcodebuild -exportArchive -archivePath \"./build/xxx.xcarchive\" -exportOptionsPlist \"./build/exportOptionsPlist.plist\" -exportPath \"./build/\"\n\n  cd build/\n\n\n  git log -10 > git.log\n\n  #拷贝ipa到临时文件夹中\n  cp ./$scheme_name.ipa ./tmp.zip\n  #将ipa解压\n  unzip tmp.zip\n\n  #app文件中Info.plist文件路径\n  app_infoplist_path=$(pwd)/Payload/*.app/Info.plist\n  #取bundleIdentifier\n  bundleIdentifier=$(/usr/libexec/PlistBuddy -c \"print CFBundleIdentifier\" ${app_infoplist_path})\n  #取build值\n  bundleVersion=$(/usr/libexec/PlistBuddy -c \"print CFBundleVersion\" ${app_infoplist_path})\n  #显示名称\n  ipa_name=$workspace_name\n\n  #ipa下载url\n  ipa_download_url=\"https://***/install_ipa/raw/master/xxxx_ent.ipa\"\n  #itms-services协议串\n  ios_install_url=\"itms-services://?action=download-manifest&url=https://***/install_ipa/raw/master/xxxx_ent.plist\"\n\n  #生成install.html文件\n\n  cat << EOF > index.html\n  <!DOCTYPE HTML>\n  <html>\n    <head>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <title>安装</title>\n    </head>\n    <body>\n      <br>\n      <br>\n      <br>\n      <br>\n      <p align=center>\n          <font size=\"8\">\n              <a href=\"${ios_install_url}\">点击这里安装</a>\n          </font>\n      </p>\n\n      </div>\n    </body>\n  </html>\n  EOF\n\n  #生成plist文件\n  cat << EOF > ${workspace_name}.plist\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n  <plist version=\"1.0\">\n  <dict>\n     <key>items</key>\n     <array>\n         <dict>\n             <key>assets</key>\n             <array>\n                 <dict>\n                     <key>kind</key>\n                     <string>software-package</string>\n                     <key>url</key>\n                     <string>${ipa_download_url}</string>\n                 </dict>\n                 <dict>\n                     <key>kind</key>\n                     <string>display-image</string>\n                     <key>needs-shine</key>\n                     <true/>\n                     <key>url</key>\n                     <string>http://git.oschina.net/logo.svg</string>\n                 </dict>\n             <dict>\n                     <key>kind</key>\n                     <string>full-size-image</string>\n                     <key>needs-shine</key>\n                     <true/>\n                     <key>url</key>\n                     <string>http://git.oschina.net/logo.svg</string>\n                 </dict>\n             </array><key>metadata</key>\n             <dict>\n                 <key>bundle-identifier</key>\n                 <string>${bundleIdentifier}</string>\n                 <key>bundle-version</key>\n                 <string>${bundleVersion}</string>\n                 <key>kind</key>\n                 <string>software</string>\n                 <key>subtitle</key>\n                 <string>${ipa_name}</string>\n                 <key>title</key>\n                 <string>${ipa_name}</string>\n             </dict>\n         </dict>\n     </array>\n  </dict>\n  </plist>\n  EOF\n\n  fir i $scheme_name.ipa\n  ```\n\n## 手动上传到OSC脚本\n  ```\n  #!/bin/bash\n\n  root_path=$(pwd)\n  workspace_name=Fangduoduo\n  scheme_name=XXX\n\n  # 编译\n  cd $root_path\n  cd $workspace_name\n\n  rm -rf ./build/*\n\n  xcodebuild -archivePath ./build/$scheme_name.xcarchive -workspace $workspace_name.xcworkspace -sdk iphoneos -scheme $scheme_name -configuration \"Release Inhouse\" archive\n\n  echo \"<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"><plist version=\"1.0\"><dict><key>method</key><string>enterprise</string><key>compileBitcode</key><false/></dict></plist>\" > ./build/exportOptionsPlist.plist\n\n  xcodebuild -exportArchive -archivePath ./build/$scheme_name.xcarchive -exportOptionsPlist \"./build/exportOptionsPlist.plist\" -exportPath \"./build/\"\n\n\n  cd build/\n\n  if [ ! -f $scheme_name.ipa ]; then\n      echo \"*** 无法打包 ***\"\n      exit -1\n  fi\n\n  fir i ./$scheme_name.ipa\n\n  git log -10 > git.log\n  git_log=$(cat git.log)\n  # fir 上传\n  if [ -n \"$1\" ]; then\n      fir p ./$scheme_name.ipa -T $1 -c git.log\n  fi\n\n\n  # 校验HTML并上传\n\n  public_git_path=$root_path/public_ipa_tmp/\n  public_git_root=\"install_ipa\"\n  public_git=\"https://***/install_ipa.git\"\n  #ipa下载url\n  ipa_download_url=\"https://***/install_ipa/raw/master/XXX.ipa\"\n  #itms-services协议串\n  ios_install_url=\"itms-services://?action=download-manifest&url=https://***/install_ipa/raw/master/XXX.plist\"\n\n\n  cd $root_path/\n  # checkout path is OK\n  if [ ! -e $public_git_path ]; then\n      mkdir $public_git_path\n  fi\n\n  if [ -n $public_git_path ]; then\n      rm -rf $public_git_path\n  fi\n  mkdir $public_git_path\n  cd $public_git_path\n  git init\n  git remote add origin $public_git\n\n\n  cd $root_path/$workspace_name/build/\n\n  #拷贝ipa到临时文件夹中\n  cp ./$scheme_name.ipa ./tmp.zip\n  rm -rf Payload\n  #将ipa解压\n  unzip tmp.zip\n\n  #app文件中Info.plist文件路径\n  app_infoplist_path=$(pwd)/Payload/*.app/Info.plist\n  #取bundleIdentifier\n  bundleIdentifier=$(/usr/libexec/PlistBuddy -c \"print CFBundleIdentifier\" ${app_infoplist_path})\n  #取build值\n  bundleVersion=$(/usr/libexec/PlistBuddy -c \"print CFBundleVersion\" ${app_infoplist_path})\n  #取shortVersionbuild值\n  shortVersion=$(/usr/libexec/PlistBuddy -c \"print CFBundleShortVersionString\" ${app_infoplist_path})\n  #显示名称\n  ipa_name=$(/usr/libexec/PlistBuddy -c \"print CFBundleDisplayName\" ${app_infoplist_path})\n  nowTime=$(date +%Y-%m-%d\\ %H:%M)\n  log_url=\"https://madordie.github.io/uploads/avatar.png\"\n\n  #生成install.html文件\n\n  cat << EOF > index.html\n  <!DOCTYPE HTML>\n  <html>\n  <head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=0\">\n  <title>${ipa_name}安装</title>\n  <style>\n  .containor {\n      position: relative;\n      top: 0;\n      left: 0;\n      right: 0;\n      margin: 0 auto;\n      width: 100%;\n      max-width: 640px;\n      text-align: center;\n  }\n  .logo {\n      width: 120px;\n      margin-top: 30px;\n  }\n  .title,\n  .version_history,\n  .update_time {\n      text-align: center;\n      color: #999;\n      font-size: 16px;\n  }\n  .title {\n      margin-top: 10px;\n  }\n  .version_history,\n  .update_time {\n      margin-top: 5px;\n  }\n  .download {\n      display: block;\n      width: 150px;\n      height: 30px;\n      line-height: 30px;\n      margin: 0 auto;\n      margin-top: 20px;\n      border: 1px solid #eee;\n      border-radius: 20px;\n      text-decoration: none;\n      color: #999;\n  }\n  .log_title {\n      margin-top: 20px;\n      font-size: 18px;\n      color: #333;\n  }\n  .log {\n      color: #aaa;\n      padding: 20px;\n      text-align: left;\n      font-size: 12px;\n      line-height: 15px;\n      white-space: pre-wrap;\n      word-wrap: break-word;\n      overflow: hidden;\n  }\n  </style>\n  </head>\n  <body>\n  <div class=\"containor\">\n      <img class=\"logo\" src=${log_url} />\n      <div class=\"title\">$ipa_name</div>\n      <div class=\"version_history\">${shortVersion}(bundle:${bundleVersion})</div>\n      <div></div>\n      <div class=\"update_time\">${nowTime}</div>\n      <a class=\"download\" href=\"${ios_install_url}\">点击这里安装</a>\n      <div class=\"log_title\">更新日志</div>\n      <div class=\"log\"> ${git_log} </div>\n  </div>\n  </body>\n  </html>\n  EOF\n\n  #生成plist文件\n  cat << EOF > ${scheme_name}.plist\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n  <plist version=\"1.0\">\n  <dict>\n     <key>items</key>\n     <array>\n         <dict>\n             <key>assets</key>\n             <array>\n                 <dict>\n                     <key>kind</key>\n                     <string>software-package</string>\n                     <key>url</key>\n                     <string>${ipa_download_url}</string>\n                 </dict>\n                 <dict>\n                     <key>kind</key>\n                     <string>display-image</string>\n                     <key>needs-shine</key>\n                     <true/>\n                     <key>url</key>\n                     <string>http://git.oschina.net/logo.svg</string>\n                 </dict>\n             <dict>\n                     <key>kind</key>\n                     <string>full-size-image</string>\n                     <key>needs-shine</key>\n                     <true/>\n                     <key>url</key>\n                     <string>http://git.oschina.net/logo.svg</string>\n                 </dict>\n             </array><key>metadata</key>\n             <dict>\n                 <key>bundle-identifier</key>\n                 <string>${bundleIdentifier}</string>\n                 <key>bundle-version</key>\n                 <string>${bundleVersion}</string>\n                 <key>kind</key>\n                 <string>software</string>\n                 <key>subtitle</key>\n                 <string>${ipa_name}</string>\n                 <key>title</key>\n                 <string>${ipa_name}</string>\n             </dict>\n         </dict>\n     </array>\n  </dict>\n  </plist>\n  EOF\n\n  #fir i $scheme_name.ipa\n  cp $scheme_name.ipa $public_git_path\n  cp $scheme_name.plist $public_git_path\n  cp index.html $public_git_path\n\n  cd $public_git_path\n  ls -l > README.md\n  if [ ! -e \"./.git/\" ]; then\n      echo \"*** OSC的git目录不完整，无法上传，请联系开发! ***\"\n      exit -1\n  fi\n  echo \"commit and pushing ...\"\n  git add .\n  git commit -am $bundleVersion\n  git push -f origin master\n  ```","slug":"build-ipa-sh","published":1,"updated":"2016-12-01T10:36:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixbaqyme0004cb6ar1jp15xx","content":"<p>Xcode8下的打包脚本</p>\n<a id=\"more\"></a>\n<h2 id=\"Xcode8\"><a href=\"#Xcode8\" class=\"headerlink\" title=\"Xcode8\"></a>Xcode8</h2><p>  好悲催，Xcode8更新之后Jenkins打包失败了。。由于代码库中使用了swift3语法，故必须使用Xcode8。。</p>\n<p>  先来重点：可用脚本：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#   追上fir API token 自动上传</span></div><div class=\"line\"><span class=\"comment\">#   基于当前代码进行打包打包目录：MyProject/build/MyProject_ent.ipa</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">cd</span> MyProject</div><div class=\"line\"></div><div class=\"line\">rm -rf ./build/*</div><div class=\"line\"></div><div class=\"line\">xcodebuild -archivePath <span class=\"string\">\"./build/xxx.xcarchive\"</span> -workspace MyProject.xcworkspace -sdk iphoneos -scheme <span class=\"string\">\"MyProject_ent\"</span> -configuration <span class=\"string\">\"Release Inhouse\"</span> archive</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;?xml version=\"</span>1.0<span class=\"string\">\" encoding=\"</span>UTF-8<span class=\"string\">\"?&gt;&lt;!DOCTYPE plist PUBLIC \"</span>-//Apple//DTD PLIST 1.0//EN<span class=\"string\">\" \"</span>http://www.apple.com/DTDs/PropertyList-1.0.dtd<span class=\"string\">\"&gt;&lt;plist version=\"</span>1.0<span class=\"string\">\"&gt;&lt;dict&gt;&lt;key&gt;method&lt;/key&gt;&lt;string&gt;enterprise&lt;/string&gt;&lt;key&gt;compileBitcode&lt;/key&gt;&lt;string&gt;YES&lt;/string&gt;&lt;/dict&gt;&lt;/plist&gt;\"</span> &gt; ./build/<span class=\"built_in\">export</span>OptionsPlist.plist</div><div class=\"line\"></div><div class=\"line\">xcodebuild -exportArchive -archivePath <span class=\"string\">\"./build/xxx.xcarchive\"</span> -exportPath <span class=\"string\">\"./build/\"</span> -exportOptionsPlist ./build/<span class=\"built_in\">export</span>OptionsPlist.plist</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">cd</span> build/</div><div class=\"line\"></div><div class=\"line\">fir i ./MyProject_ent.ipa</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ -n <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> ]; <span class=\"keyword\">then</span></div><div class=\"line\">    git <span class=\"built_in\">log</span> -10 &gt; git.log</div><div class=\"line\">    fir p ./MyProject_ent.ipa -T <span class=\"variable\">$1</span> -c git.log</div><div class=\"line\"><span class=\"keyword\">fi</span></div></pre></td></tr></table></figure>\n<p>  之前漏掉了一个错误：<code>The flag -exportFormat cannot be specified along with -exportOptionsPlist</code> 导致了最终包签名错误，而无法安装。</p>\n<p>  exportOptionsPlist参考的<a href=\"https://testerhome.com/topics/4619\" target=\"_blank\" rel=\"external\">iOS 打包总结</a></p>\n<h2 id=\"手动上传\"><a href=\"#手动上传\" class=\"headerlink\" title=\"手动上传\"></a>手动上传</h2>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\"></div><div class=\"line\">#   追上fir API token 自动上传</div><div class=\"line\">#   基于当前代码进行打包打包目录：xxxx/build/xxxx_ent.ipa</div><div class=\"line\"></div><div class=\"line\">workspace_name=xxxx</div><div class=\"line\">scheme_name=xxxx_ent</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">cd $workspace_name</div><div class=\"line\"></div><div class=\"line\">rm -rf ./build/*</div><div class=\"line\"></div><div class=\"line\">xcodebuild -archivePath &quot;./build/xxx.xcarchive&quot; -workspace $workspace_name.xcworkspace -sdk iphoneos -scheme $scheme_name -configuration &quot;Release Inhouse&quot; archive</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">cat &lt;&lt; EOF &gt; ./build/exportOptionsPlist.plist</div><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</div><div class=\"line\">&lt;plist version=&quot;1.0&quot;&gt;</div><div class=\"line\">    &lt;dict&gt;</div><div class=\"line\">        &lt;key&gt;method&lt;/key&gt;</div><div class=\"line\">        &lt;string&gt;enterprise&lt;/string&gt;</div><div class=\"line\">        &lt;key&gt;compileBitcode&lt;/key&gt;</div><div class=\"line\">            &lt;false/&gt;</div><div class=\"line\">    &lt;/dict&gt;</div><div class=\"line\">&lt;/plist&gt;</div><div class=\"line\">EOF</div><div class=\"line\"></div><div class=\"line\">xcodebuild -exportArchive -archivePath &quot;./build/xxx.xcarchive&quot; -exportOptionsPlist &quot;./build/exportOptionsPlist.plist&quot; -exportPath &quot;./build/&quot;</div><div class=\"line\"></div><div class=\"line\">cd build/</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">git log -10 &gt; git.log</div><div class=\"line\"></div><div class=\"line\">#拷贝ipa到临时文件夹中</div><div class=\"line\">cp ./$scheme_name.ipa ./tmp.zip</div><div class=\"line\">#将ipa解压</div><div class=\"line\">unzip tmp.zip</div><div class=\"line\"></div><div class=\"line\">#app文件中Info.plist文件路径</div><div class=\"line\">app_infoplist_path=$(pwd)/Payload/*.app/Info.plist</div><div class=\"line\">#取bundleIdentifier</div><div class=\"line\">bundleIdentifier=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleIdentifier&quot; $&#123;app_infoplist_path&#125;)</div><div class=\"line\">#取build值</div><div class=\"line\">bundleVersion=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleVersion&quot; $&#123;app_infoplist_path&#125;)</div><div class=\"line\">#显示名称</div><div class=\"line\">ipa_name=$workspace_name</div><div class=\"line\"></div><div class=\"line\">#ipa下载url</div><div class=\"line\">ipa_download_url=&quot;https://***/install_ipa/raw/master/xxxx_ent.ipa&quot;</div><div class=\"line\">#itms-services协议串</div><div class=\"line\">ios_install_url=&quot;itms-services://?action=download-manifest&amp;url=https://***/install_ipa/raw/master/xxxx_ent.plist&quot;</div><div class=\"line\"></div><div class=\"line\">#生成install.html文件</div><div class=\"line\"></div><div class=\"line\">cat &lt;&lt; EOF &gt; index.html</div><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">  &lt;head&gt;</div><div class=\"line\">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</div><div class=\"line\">    &lt;title&gt;安装&lt;/title&gt;</div><div class=\"line\">  &lt;/head&gt;</div><div class=\"line\">  &lt;body&gt;</div><div class=\"line\">    &lt;br&gt;</div><div class=\"line\">    &lt;br&gt;</div><div class=\"line\">    &lt;br&gt;</div><div class=\"line\">    &lt;br&gt;</div><div class=\"line\">    &lt;p align=center&gt;</div><div class=\"line\">        &lt;font size=&quot;8&quot;&gt;</div><div class=\"line\">            &lt;a href=&quot;$&#123;ios_install_url&#125;&quot;&gt;点击这里安装&lt;/a&gt;</div><div class=\"line\">        &lt;/font&gt;</div><div class=\"line\">    &lt;/p&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">  &lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div><div class=\"line\">EOF</div><div class=\"line\"></div><div class=\"line\">#生成plist文件</div><div class=\"line\">cat &lt;&lt; EOF &gt; $&#123;workspace_name&#125;.plist</div><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</div><div class=\"line\">&lt;plist version=&quot;1.0&quot;&gt;</div><div class=\"line\">&lt;dict&gt;</div><div class=\"line\">   &lt;key&gt;items&lt;/key&gt;</div><div class=\"line\">   &lt;array&gt;</div><div class=\"line\">       &lt;dict&gt;</div><div class=\"line\">           &lt;key&gt;assets&lt;/key&gt;</div><div class=\"line\">           &lt;array&gt;</div><div class=\"line\">               &lt;dict&gt;</div><div class=\"line\">                   &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;software-package&lt;/string&gt;</div><div class=\"line\">                   &lt;key&gt;url&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;$&#123;ipa_download_url&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;/dict&gt;</div><div class=\"line\">               &lt;dict&gt;</div><div class=\"line\">                   &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;display-image&lt;/string&gt;</div><div class=\"line\">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class=\"line\">                   &lt;true/&gt;</div><div class=\"line\">                   &lt;key&gt;url&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;http://git.oschina.net/logo.svg&lt;/string&gt;</div><div class=\"line\">               &lt;/dict&gt;</div><div class=\"line\">           &lt;dict&gt;</div><div class=\"line\">                   &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;full-size-image&lt;/string&gt;</div><div class=\"line\">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class=\"line\">                   &lt;true/&gt;</div><div class=\"line\">                   &lt;key&gt;url&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;http://git.oschina.net/logo.svg&lt;/string&gt;</div><div class=\"line\">               &lt;/dict&gt;</div><div class=\"line\">           &lt;/array&gt;&lt;key&gt;metadata&lt;/key&gt;</div><div class=\"line\">           &lt;dict&gt;</div><div class=\"line\">               &lt;key&gt;bundle-identifier&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;bundleIdentifier&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;bundle-version&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;bundleVersion&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;software&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;subtitle&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;ipa_name&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;title&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;ipa_name&#125;&lt;/string&gt;</div><div class=\"line\">           &lt;/dict&gt;</div><div class=\"line\">       &lt;/dict&gt;</div><div class=\"line\">   &lt;/array&gt;</div><div class=\"line\">&lt;/dict&gt;</div><div class=\"line\">&lt;/plist&gt;</div><div class=\"line\">EOF</div><div class=\"line\"></div><div class=\"line\">fir i $scheme_name.ipa</div></pre></td></tr></table></figure>\n<h2 id=\"手动上传到OSC脚本\"><a href=\"#手动上传到OSC脚本\" class=\"headerlink\" title=\"手动上传到OSC脚本\"></a>手动上传到OSC脚本</h2>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\"></div><div class=\"line\">root_path=$(pwd)</div><div class=\"line\">workspace_name=Fangduoduo</div><div class=\"line\">scheme_name=XXX</div><div class=\"line\"></div><div class=\"line\"># 编译</div><div class=\"line\">cd $root_path</div><div class=\"line\">cd $workspace_name</div><div class=\"line\"></div><div class=\"line\">rm -rf ./build/*</div><div class=\"line\"></div><div class=\"line\">xcodebuild -archivePath ./build/$scheme_name.xcarchive -workspace $workspace_name.xcworkspace -sdk iphoneos -scheme $scheme_name -configuration &quot;Release Inhouse&quot; archive</div><div class=\"line\"></div><div class=\"line\">echo &quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&lt;plist version=&quot;1.0&quot;&gt;&lt;dict&gt;&lt;key&gt;method&lt;/key&gt;&lt;string&gt;enterprise&lt;/string&gt;&lt;key&gt;compileBitcode&lt;/key&gt;&lt;false/&gt;&lt;/dict&gt;&lt;/plist&gt;&quot; &gt; ./build/exportOptionsPlist.plist</div><div class=\"line\"></div><div class=\"line\">xcodebuild -exportArchive -archivePath ./build/$scheme_name.xcarchive -exportOptionsPlist &quot;./build/exportOptionsPlist.plist&quot; -exportPath &quot;./build/&quot;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">cd build/</div><div class=\"line\"></div><div class=\"line\">if [ ! -f $scheme_name.ipa ]; then</div><div class=\"line\">    echo &quot;*** 无法打包 ***&quot;</div><div class=\"line\">    exit -1</div><div class=\"line\">fi</div><div class=\"line\"></div><div class=\"line\">fir i ./$scheme_name.ipa</div><div class=\"line\"></div><div class=\"line\">git log -10 &gt; git.log</div><div class=\"line\">git_log=$(cat git.log)</div><div class=\"line\"># fir 上传</div><div class=\"line\">if [ -n &quot;$1&quot; ]; then</div><div class=\"line\">    fir p ./$scheme_name.ipa -T $1 -c git.log</div><div class=\"line\">fi</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"># 校验HTML并上传</div><div class=\"line\"></div><div class=\"line\">public_git_path=$root_path/public_ipa_tmp/</div><div class=\"line\">public_git_root=&quot;install_ipa&quot;</div><div class=\"line\">public_git=&quot;https://***/install_ipa.git&quot;</div><div class=\"line\">#ipa下载url</div><div class=\"line\">ipa_download_url=&quot;https://***/install_ipa/raw/master/XXX.ipa&quot;</div><div class=\"line\">#itms-services协议串</div><div class=\"line\">ios_install_url=&quot;itms-services://?action=download-manifest&amp;url=https://***/install_ipa/raw/master/XXX.plist&quot;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">cd $root_path/</div><div class=\"line\"># checkout path is OK</div><div class=\"line\">if [ ! -e $public_git_path ]; then</div><div class=\"line\">    mkdir $public_git_path</div><div class=\"line\">fi</div><div class=\"line\"></div><div class=\"line\">if [ -n $public_git_path ]; then</div><div class=\"line\">    rm -rf $public_git_path</div><div class=\"line\">fi</div><div class=\"line\">mkdir $public_git_path</div><div class=\"line\">cd $public_git_path</div><div class=\"line\">git init</div><div class=\"line\">git remote add origin $public_git</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">cd $root_path/$workspace_name/build/</div><div class=\"line\"></div><div class=\"line\">#拷贝ipa到临时文件夹中</div><div class=\"line\">cp ./$scheme_name.ipa ./tmp.zip</div><div class=\"line\">rm -rf Payload</div><div class=\"line\">#将ipa解压</div><div class=\"line\">unzip tmp.zip</div><div class=\"line\"></div><div class=\"line\">#app文件中Info.plist文件路径</div><div class=\"line\">app_infoplist_path=$(pwd)/Payload/*.app/Info.plist</div><div class=\"line\">#取bundleIdentifier</div><div class=\"line\">bundleIdentifier=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleIdentifier&quot; $&#123;app_infoplist_path&#125;)</div><div class=\"line\">#取build值</div><div class=\"line\">bundleVersion=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleVersion&quot; $&#123;app_infoplist_path&#125;)</div><div class=\"line\">#取shortVersionbuild值</div><div class=\"line\">shortVersion=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleShortVersionString&quot; $&#123;app_infoplist_path&#125;)</div><div class=\"line\">#显示名称</div><div class=\"line\">ipa_name=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleDisplayName&quot; $&#123;app_infoplist_path&#125;)</div><div class=\"line\">nowTime=$(date +%Y-%m-%d\\ %H:%M)</div><div class=\"line\">log_url=&quot;https://madordie.github.io/uploads/avatar.png&quot;</div><div class=\"line\"></div><div class=\"line\">#生成install.html文件</div><div class=\"line\"></div><div class=\"line\">cat &lt;&lt; EOF &gt; index.html</div><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</div><div class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=0&quot;&gt;</div><div class=\"line\">&lt;title&gt;$&#123;ipa_name&#125;安装&lt;/title&gt;</div><div class=\"line\">&lt;style&gt;</div><div class=\"line\">.containor &#123;</div><div class=\"line\">    position: relative;</div><div class=\"line\">    top: 0;</div><div class=\"line\">    left: 0;</div><div class=\"line\">    right: 0;</div><div class=\"line\">    margin: 0 auto;</div><div class=\"line\">    width: 100%;</div><div class=\"line\">    max-width: 640px;</div><div class=\"line\">    text-align: center;</div><div class=\"line\">&#125;</div><div class=\"line\">.logo &#123;</div><div class=\"line\">    width: 120px;</div><div class=\"line\">    margin-top: 30px;</div><div class=\"line\">&#125;</div><div class=\"line\">.title,</div><div class=\"line\">.version_history,</div><div class=\"line\">.update_time &#123;</div><div class=\"line\">    text-align: center;</div><div class=\"line\">    color: #999;</div><div class=\"line\">    font-size: 16px;</div><div class=\"line\">&#125;</div><div class=\"line\">.title &#123;</div><div class=\"line\">    margin-top: 10px;</div><div class=\"line\">&#125;</div><div class=\"line\">.version_history,</div><div class=\"line\">.update_time &#123;</div><div class=\"line\">    margin-top: 5px;</div><div class=\"line\">&#125;</div><div class=\"line\">.download &#123;</div><div class=\"line\">    display: block;</div><div class=\"line\">    width: 150px;</div><div class=\"line\">    height: 30px;</div><div class=\"line\">    line-height: 30px;</div><div class=\"line\">    margin: 0 auto;</div><div class=\"line\">    margin-top: 20px;</div><div class=\"line\">    border: 1px solid #eee;</div><div class=\"line\">    border-radius: 20px;</div><div class=\"line\">    text-decoration: none;</div><div class=\"line\">    color: #999;</div><div class=\"line\">&#125;</div><div class=\"line\">.log_title &#123;</div><div class=\"line\">    margin-top: 20px;</div><div class=\"line\">    font-size: 18px;</div><div class=\"line\">    color: #333;</div><div class=\"line\">&#125;</div><div class=\"line\">.log &#123;</div><div class=\"line\">    color: #aaa;</div><div class=\"line\">    padding: 20px;</div><div class=\"line\">    text-align: left;</div><div class=\"line\">    font-size: 12px;</div><div class=\"line\">    line-height: 15px;</div><div class=\"line\">    white-space: pre-wrap;</div><div class=\"line\">    word-wrap: break-word;</div><div class=\"line\">    overflow: hidden;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;div class=&quot;containor&quot;&gt;</div><div class=\"line\">    &lt;img class=&quot;logo&quot; src=$&#123;log_url&#125; /&gt;</div><div class=\"line\">    &lt;div class=&quot;title&quot;&gt;$ipa_name&lt;/div&gt;</div><div class=\"line\">    &lt;div class=&quot;version_history&quot;&gt;$&#123;shortVersion&#125;(bundle:$&#123;bundleVersion&#125;)&lt;/div&gt;</div><div class=\"line\">    &lt;div&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=&quot;update_time&quot;&gt;$&#123;nowTime&#125;&lt;/div&gt;</div><div class=\"line\">    &lt;a class=&quot;download&quot; href=&quot;$&#123;ios_install_url&#125;&quot;&gt;点击这里安装&lt;/a&gt;</div><div class=\"line\">    &lt;div class=&quot;log_title&quot;&gt;更新日志&lt;/div&gt;</div><div class=\"line\">    &lt;div class=&quot;log&quot;&gt; $&#123;git_log&#125; &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div><div class=\"line\">EOF</div><div class=\"line\"></div><div class=\"line\">#生成plist文件</div><div class=\"line\">cat &lt;&lt; EOF &gt; $&#123;scheme_name&#125;.plist</div><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</div><div class=\"line\">&lt;plist version=&quot;1.0&quot;&gt;</div><div class=\"line\">&lt;dict&gt;</div><div class=\"line\">   &lt;key&gt;items&lt;/key&gt;</div><div class=\"line\">   &lt;array&gt;</div><div class=\"line\">       &lt;dict&gt;</div><div class=\"line\">           &lt;key&gt;assets&lt;/key&gt;</div><div class=\"line\">           &lt;array&gt;</div><div class=\"line\">               &lt;dict&gt;</div><div class=\"line\">                   &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;software-package&lt;/string&gt;</div><div class=\"line\">                   &lt;key&gt;url&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;$&#123;ipa_download_url&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;/dict&gt;</div><div class=\"line\">               &lt;dict&gt;</div><div class=\"line\">                   &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;display-image&lt;/string&gt;</div><div class=\"line\">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class=\"line\">                   &lt;true/&gt;</div><div class=\"line\">                   &lt;key&gt;url&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;http://git.oschina.net/logo.svg&lt;/string&gt;</div><div class=\"line\">               &lt;/dict&gt;</div><div class=\"line\">           &lt;dict&gt;</div><div class=\"line\">                   &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;full-size-image&lt;/string&gt;</div><div class=\"line\">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class=\"line\">                   &lt;true/&gt;</div><div class=\"line\">                   &lt;key&gt;url&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;http://git.oschina.net/logo.svg&lt;/string&gt;</div><div class=\"line\">               &lt;/dict&gt;</div><div class=\"line\">           &lt;/array&gt;&lt;key&gt;metadata&lt;/key&gt;</div><div class=\"line\">           &lt;dict&gt;</div><div class=\"line\">               &lt;key&gt;bundle-identifier&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;bundleIdentifier&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;bundle-version&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;bundleVersion&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;software&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;subtitle&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;ipa_name&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;title&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;ipa_name&#125;&lt;/string&gt;</div><div class=\"line\">           &lt;/dict&gt;</div><div class=\"line\">       &lt;/dict&gt;</div><div class=\"line\">   &lt;/array&gt;</div><div class=\"line\">&lt;/dict&gt;</div><div class=\"line\">&lt;/plist&gt;</div><div class=\"line\">EOF</div><div class=\"line\"></div><div class=\"line\">#fir i $scheme_name.ipa</div><div class=\"line\">cp $scheme_name.ipa $public_git_path</div><div class=\"line\">cp $scheme_name.plist $public_git_path</div><div class=\"line\">cp index.html $public_git_path</div><div class=\"line\"></div><div class=\"line\">cd $public_git_path</div><div class=\"line\">ls -l &gt; README.md</div><div class=\"line\">if [ ! -e &quot;./.git/&quot; ]; then</div><div class=\"line\">    echo &quot;*** OSC的git目录不完整，无法上传，请联系开发! ***&quot;</div><div class=\"line\">    exit -1</div><div class=\"line\">fi</div><div class=\"line\">echo &quot;commit and pushing ...&quot;</div><div class=\"line\">git add .</div><div class=\"line\">git commit -am $bundleVersion</div><div class=\"line\">git push -f origin master</div></pre></td></tr></table></figure>","excerpt":"<p>Xcode8下的打包脚本</p>","more":"<h2 id=\"Xcode8\"><a href=\"#Xcode8\" class=\"headerlink\" title=\"Xcode8\"></a>Xcode8</h2><p>  好悲催，Xcode8更新之后Jenkins打包失败了。。由于代码库中使用了swift3语法，故必须使用Xcode8。。</p>\n<p>  先来重点：可用脚本：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</div><div class=\"line\"></span></div><div class=\"line\"><span class=\"comment\">#   追上fir API token 自动上传</span></div><div class=\"line\"><span class=\"comment\">#   基于当前代码进行打包打包目录：MyProject/build/MyProject_ent.ipa</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">cd</span> MyProject</div><div class=\"line\"></div><div class=\"line\">rm -rf ./build/*</div><div class=\"line\"></div><div class=\"line\">xcodebuild -archivePath <span class=\"string\">\"./build/xxx.xcarchive\"</span> -workspace MyProject.xcworkspace -sdk iphoneos -scheme <span class=\"string\">\"MyProject_ent\"</span> -configuration <span class=\"string\">\"Release Inhouse\"</span> archive</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;?xml version=\"</span>1.0<span class=\"string\">\" encoding=\"</span>UTF-8<span class=\"string\">\"?&gt;&lt;!DOCTYPE plist PUBLIC \"</span>-//Apple//DTD PLIST 1.0//EN<span class=\"string\">\" \"</span>http://www.apple.com/DTDs/PropertyList-1.0.dtd<span class=\"string\">\"&gt;&lt;plist version=\"</span>1.0<span class=\"string\">\"&gt;&lt;dict&gt;&lt;key&gt;method&lt;/key&gt;&lt;string&gt;enterprise&lt;/string&gt;&lt;key&gt;compileBitcode&lt;/key&gt;&lt;string&gt;YES&lt;/string&gt;&lt;/dict&gt;&lt;/plist&gt;\"</span> &gt; ./build/<span class=\"built_in\">export</span>OptionsPlist.plist</div><div class=\"line\"></div><div class=\"line\">xcodebuild -exportArchive -archivePath <span class=\"string\">\"./build/xxx.xcarchive\"</span> -exportPath <span class=\"string\">\"./build/\"</span> -exportOptionsPlist ./build/<span class=\"built_in\">export</span>OptionsPlist.plist</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">cd</span> build/</div><div class=\"line\"></div><div class=\"line\">fir i ./MyProject_ent.ipa</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> [ -n <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> ]; <span class=\"keyword\">then</span></div><div class=\"line\">    git <span class=\"built_in\">log</span> -10 &gt; git.log</div><div class=\"line\">    fir p ./MyProject_ent.ipa -T <span class=\"variable\">$1</span> -c git.log</div><div class=\"line\"><span class=\"keyword\">fi</span></div></pre></td></tr></table></figure>\n<p>  之前漏掉了一个错误：<code>The flag -exportFormat cannot be specified along with -exportOptionsPlist</code> 导致了最终包签名错误，而无法安装。</p>\n<p>  exportOptionsPlist参考的<a href=\"https://testerhome.com/topics/4619\">iOS 打包总结</a></p>\n<h2 id=\"手动上传\"><a href=\"#手动上传\" class=\"headerlink\" title=\"手动上传\"></a>手动上传</h2>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\"></div><div class=\"line\">#   追上fir API token 自动上传</div><div class=\"line\">#   基于当前代码进行打包打包目录：xxxx/build/xxxx_ent.ipa</div><div class=\"line\"></div><div class=\"line\">workspace_name=xxxx</div><div class=\"line\">scheme_name=xxxx_ent</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">cd $workspace_name</div><div class=\"line\"></div><div class=\"line\">rm -rf ./build/*</div><div class=\"line\"></div><div class=\"line\">xcodebuild -archivePath &quot;./build/xxx.xcarchive&quot; -workspace $workspace_name.xcworkspace -sdk iphoneos -scheme $scheme_name -configuration &quot;Release Inhouse&quot; archive</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">cat &lt;&lt; EOF &gt; ./build/exportOptionsPlist.plist</div><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</div><div class=\"line\">&lt;plist version=&quot;1.0&quot;&gt;</div><div class=\"line\">    &lt;dict&gt;</div><div class=\"line\">        &lt;key&gt;method&lt;/key&gt;</div><div class=\"line\">        &lt;string&gt;enterprise&lt;/string&gt;</div><div class=\"line\">        &lt;key&gt;compileBitcode&lt;/key&gt;</div><div class=\"line\">            &lt;false/&gt;</div><div class=\"line\">    &lt;/dict&gt;</div><div class=\"line\">&lt;/plist&gt;</div><div class=\"line\">EOF</div><div class=\"line\"></div><div class=\"line\">xcodebuild -exportArchive -archivePath &quot;./build/xxx.xcarchive&quot; -exportOptionsPlist &quot;./build/exportOptionsPlist.plist&quot; -exportPath &quot;./build/&quot;</div><div class=\"line\"></div><div class=\"line\">cd build/</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">git log -10 &gt; git.log</div><div class=\"line\"></div><div class=\"line\">#拷贝ipa到临时文件夹中</div><div class=\"line\">cp ./$scheme_name.ipa ./tmp.zip</div><div class=\"line\">#将ipa解压</div><div class=\"line\">unzip tmp.zip</div><div class=\"line\"></div><div class=\"line\">#app文件中Info.plist文件路径</div><div class=\"line\">app_infoplist_path=$(pwd)/Payload/*.app/Info.plist</div><div class=\"line\">#取bundleIdentifier</div><div class=\"line\">bundleIdentifier=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleIdentifier&quot; $&#123;app_infoplist_path&#125;)</div><div class=\"line\">#取build值</div><div class=\"line\">bundleVersion=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleVersion&quot; $&#123;app_infoplist_path&#125;)</div><div class=\"line\">#显示名称</div><div class=\"line\">ipa_name=$workspace_name</div><div class=\"line\"></div><div class=\"line\">#ipa下载url</div><div class=\"line\">ipa_download_url=&quot;https://***/install_ipa/raw/master/xxxx_ent.ipa&quot;</div><div class=\"line\">#itms-services协议串</div><div class=\"line\">ios_install_url=&quot;itms-services://?action=download-manifest&amp;url=https://***/install_ipa/raw/master/xxxx_ent.plist&quot;</div><div class=\"line\"></div><div class=\"line\">#生成install.html文件</div><div class=\"line\"></div><div class=\"line\">cat &lt;&lt; EOF &gt; index.html</div><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">  &lt;head&gt;</div><div class=\"line\">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</div><div class=\"line\">    &lt;title&gt;安装&lt;/title&gt;</div><div class=\"line\">  &lt;/head&gt;</div><div class=\"line\">  &lt;body&gt;</div><div class=\"line\">    &lt;br&gt;</div><div class=\"line\">    &lt;br&gt;</div><div class=\"line\">    &lt;br&gt;</div><div class=\"line\">    &lt;br&gt;</div><div class=\"line\">    &lt;p align=center&gt;</div><div class=\"line\">        &lt;font size=&quot;8&quot;&gt;</div><div class=\"line\">            &lt;a href=&quot;$&#123;ios_install_url&#125;&quot;&gt;点击这里安装&lt;/a&gt;</div><div class=\"line\">        &lt;/font&gt;</div><div class=\"line\">    &lt;/p&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">  &lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div><div class=\"line\">EOF</div><div class=\"line\"></div><div class=\"line\">#生成plist文件</div><div class=\"line\">cat &lt;&lt; EOF &gt; $&#123;workspace_name&#125;.plist</div><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</div><div class=\"line\">&lt;plist version=&quot;1.0&quot;&gt;</div><div class=\"line\">&lt;dict&gt;</div><div class=\"line\">   &lt;key&gt;items&lt;/key&gt;</div><div class=\"line\">   &lt;array&gt;</div><div class=\"line\">       &lt;dict&gt;</div><div class=\"line\">           &lt;key&gt;assets&lt;/key&gt;</div><div class=\"line\">           &lt;array&gt;</div><div class=\"line\">               &lt;dict&gt;</div><div class=\"line\">                   &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;software-package&lt;/string&gt;</div><div class=\"line\">                   &lt;key&gt;url&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;$&#123;ipa_download_url&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;/dict&gt;</div><div class=\"line\">               &lt;dict&gt;</div><div class=\"line\">                   &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;display-image&lt;/string&gt;</div><div class=\"line\">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class=\"line\">                   &lt;true/&gt;</div><div class=\"line\">                   &lt;key&gt;url&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;http://git.oschina.net/logo.svg&lt;/string&gt;</div><div class=\"line\">               &lt;/dict&gt;</div><div class=\"line\">           &lt;dict&gt;</div><div class=\"line\">                   &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;full-size-image&lt;/string&gt;</div><div class=\"line\">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class=\"line\">                   &lt;true/&gt;</div><div class=\"line\">                   &lt;key&gt;url&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;http://git.oschina.net/logo.svg&lt;/string&gt;</div><div class=\"line\">               &lt;/dict&gt;</div><div class=\"line\">           &lt;/array&gt;&lt;key&gt;metadata&lt;/key&gt;</div><div class=\"line\">           &lt;dict&gt;</div><div class=\"line\">               &lt;key&gt;bundle-identifier&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;bundleIdentifier&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;bundle-version&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;bundleVersion&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;software&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;subtitle&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;ipa_name&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;title&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;ipa_name&#125;&lt;/string&gt;</div><div class=\"line\">           &lt;/dict&gt;</div><div class=\"line\">       &lt;/dict&gt;</div><div class=\"line\">   &lt;/array&gt;</div><div class=\"line\">&lt;/dict&gt;</div><div class=\"line\">&lt;/plist&gt;</div><div class=\"line\">EOF</div><div class=\"line\"></div><div class=\"line\">fir i $scheme_name.ipa</div></pre></td></tr></table></figure>\n<h2 id=\"手动上传到OSC脚本\"><a href=\"#手动上传到OSC脚本\" class=\"headerlink\" title=\"手动上传到OSC脚本\"></a>手动上传到OSC脚本</h2>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\"></div><div class=\"line\">root_path=$(pwd)</div><div class=\"line\">workspace_name=Fangduoduo</div><div class=\"line\">scheme_name=XXX</div><div class=\"line\"></div><div class=\"line\"># 编译</div><div class=\"line\">cd $root_path</div><div class=\"line\">cd $workspace_name</div><div class=\"line\"></div><div class=\"line\">rm -rf ./build/*</div><div class=\"line\"></div><div class=\"line\">xcodebuild -archivePath ./build/$scheme_name.xcarchive -workspace $workspace_name.xcworkspace -sdk iphoneos -scheme $scheme_name -configuration &quot;Release Inhouse&quot; archive</div><div class=\"line\"></div><div class=\"line\">echo &quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&lt;plist version=&quot;1.0&quot;&gt;&lt;dict&gt;&lt;key&gt;method&lt;/key&gt;&lt;string&gt;enterprise&lt;/string&gt;&lt;key&gt;compileBitcode&lt;/key&gt;&lt;false/&gt;&lt;/dict&gt;&lt;/plist&gt;&quot; &gt; ./build/exportOptionsPlist.plist</div><div class=\"line\"></div><div class=\"line\">xcodebuild -exportArchive -archivePath ./build/$scheme_name.xcarchive -exportOptionsPlist &quot;./build/exportOptionsPlist.plist&quot; -exportPath &quot;./build/&quot;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">cd build/</div><div class=\"line\"></div><div class=\"line\">if [ ! -f $scheme_name.ipa ]; then</div><div class=\"line\">    echo &quot;*** 无法打包 ***&quot;</div><div class=\"line\">    exit -1</div><div class=\"line\">fi</div><div class=\"line\"></div><div class=\"line\">fir i ./$scheme_name.ipa</div><div class=\"line\"></div><div class=\"line\">git log -10 &gt; git.log</div><div class=\"line\">git_log=$(cat git.log)</div><div class=\"line\"># fir 上传</div><div class=\"line\">if [ -n &quot;$1&quot; ]; then</div><div class=\"line\">    fir p ./$scheme_name.ipa -T $1 -c git.log</div><div class=\"line\">fi</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"># 校验HTML并上传</div><div class=\"line\"></div><div class=\"line\">public_git_path=$root_path/public_ipa_tmp/</div><div class=\"line\">public_git_root=&quot;install_ipa&quot;</div><div class=\"line\">public_git=&quot;https://***/install_ipa.git&quot;</div><div class=\"line\">#ipa下载url</div><div class=\"line\">ipa_download_url=&quot;https://***/install_ipa/raw/master/XXX.ipa&quot;</div><div class=\"line\">#itms-services协议串</div><div class=\"line\">ios_install_url=&quot;itms-services://?action=download-manifest&amp;url=https://***/install_ipa/raw/master/XXX.plist&quot;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">cd $root_path/</div><div class=\"line\"># checkout path is OK</div><div class=\"line\">if [ ! -e $public_git_path ]; then</div><div class=\"line\">    mkdir $public_git_path</div><div class=\"line\">fi</div><div class=\"line\"></div><div class=\"line\">if [ -n $public_git_path ]; then</div><div class=\"line\">    rm -rf $public_git_path</div><div class=\"line\">fi</div><div class=\"line\">mkdir $public_git_path</div><div class=\"line\">cd $public_git_path</div><div class=\"line\">git init</div><div class=\"line\">git remote add origin $public_git</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">cd $root_path/$workspace_name/build/</div><div class=\"line\"></div><div class=\"line\">#拷贝ipa到临时文件夹中</div><div class=\"line\">cp ./$scheme_name.ipa ./tmp.zip</div><div class=\"line\">rm -rf Payload</div><div class=\"line\">#将ipa解压</div><div class=\"line\">unzip tmp.zip</div><div class=\"line\"></div><div class=\"line\">#app文件中Info.plist文件路径</div><div class=\"line\">app_infoplist_path=$(pwd)/Payload/*.app/Info.plist</div><div class=\"line\">#取bundleIdentifier</div><div class=\"line\">bundleIdentifier=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleIdentifier&quot; $&#123;app_infoplist_path&#125;)</div><div class=\"line\">#取build值</div><div class=\"line\">bundleVersion=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleVersion&quot; $&#123;app_infoplist_path&#125;)</div><div class=\"line\">#取shortVersionbuild值</div><div class=\"line\">shortVersion=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleShortVersionString&quot; $&#123;app_infoplist_path&#125;)</div><div class=\"line\">#显示名称</div><div class=\"line\">ipa_name=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleDisplayName&quot; $&#123;app_infoplist_path&#125;)</div><div class=\"line\">nowTime=$(date +%Y-%m-%d\\ %H:%M)</div><div class=\"line\">log_url=&quot;https://madordie.github.io/uploads/avatar.png&quot;</div><div class=\"line\"></div><div class=\"line\">#生成install.html文件</div><div class=\"line\"></div><div class=\"line\">cat &lt;&lt; EOF &gt; index.html</div><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</div><div class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=0&quot;&gt;</div><div class=\"line\">&lt;title&gt;$&#123;ipa_name&#125;安装&lt;/title&gt;</div><div class=\"line\">&lt;style&gt;</div><div class=\"line\">.containor &#123;</div><div class=\"line\">    position: relative;</div><div class=\"line\">    top: 0;</div><div class=\"line\">    left: 0;</div><div class=\"line\">    right: 0;</div><div class=\"line\">    margin: 0 auto;</div><div class=\"line\">    width: 100%;</div><div class=\"line\">    max-width: 640px;</div><div class=\"line\">    text-align: center;</div><div class=\"line\">&#125;</div><div class=\"line\">.logo &#123;</div><div class=\"line\">    width: 120px;</div><div class=\"line\">    margin-top: 30px;</div><div class=\"line\">&#125;</div><div class=\"line\">.title,</div><div class=\"line\">.version_history,</div><div class=\"line\">.update_time &#123;</div><div class=\"line\">    text-align: center;</div><div class=\"line\">    color: #999;</div><div class=\"line\">    font-size: 16px;</div><div class=\"line\">&#125;</div><div class=\"line\">.title &#123;</div><div class=\"line\">    margin-top: 10px;</div><div class=\"line\">&#125;</div><div class=\"line\">.version_history,</div><div class=\"line\">.update_time &#123;</div><div class=\"line\">    margin-top: 5px;</div><div class=\"line\">&#125;</div><div class=\"line\">.download &#123;</div><div class=\"line\">    display: block;</div><div class=\"line\">    width: 150px;</div><div class=\"line\">    height: 30px;</div><div class=\"line\">    line-height: 30px;</div><div class=\"line\">    margin: 0 auto;</div><div class=\"line\">    margin-top: 20px;</div><div class=\"line\">    border: 1px solid #eee;</div><div class=\"line\">    border-radius: 20px;</div><div class=\"line\">    text-decoration: none;</div><div class=\"line\">    color: #999;</div><div class=\"line\">&#125;</div><div class=\"line\">.log_title &#123;</div><div class=\"line\">    margin-top: 20px;</div><div class=\"line\">    font-size: 18px;</div><div class=\"line\">    color: #333;</div><div class=\"line\">&#125;</div><div class=\"line\">.log &#123;</div><div class=\"line\">    color: #aaa;</div><div class=\"line\">    padding: 20px;</div><div class=\"line\">    text-align: left;</div><div class=\"line\">    font-size: 12px;</div><div class=\"line\">    line-height: 15px;</div><div class=\"line\">    white-space: pre-wrap;</div><div class=\"line\">    word-wrap: break-word;</div><div class=\"line\">    overflow: hidden;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;div class=&quot;containor&quot;&gt;</div><div class=\"line\">    &lt;img class=&quot;logo&quot; src=$&#123;log_url&#125; /&gt;</div><div class=\"line\">    &lt;div class=&quot;title&quot;&gt;$ipa_name&lt;/div&gt;</div><div class=\"line\">    &lt;div class=&quot;version_history&quot;&gt;$&#123;shortVersion&#125;(bundle:$&#123;bundleVersion&#125;)&lt;/div&gt;</div><div class=\"line\">    &lt;div&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=&quot;update_time&quot;&gt;$&#123;nowTime&#125;&lt;/div&gt;</div><div class=\"line\">    &lt;a class=&quot;download&quot; href=&quot;$&#123;ios_install_url&#125;&quot;&gt;点击这里安装&lt;/a&gt;</div><div class=\"line\">    &lt;div class=&quot;log_title&quot;&gt;更新日志&lt;/div&gt;</div><div class=\"line\">    &lt;div class=&quot;log&quot;&gt; $&#123;git_log&#125; &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div><div class=\"line\">EOF</div><div class=\"line\"></div><div class=\"line\">#生成plist文件</div><div class=\"line\">cat &lt;&lt; EOF &gt; $&#123;scheme_name&#125;.plist</div><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</div><div class=\"line\">&lt;plist version=&quot;1.0&quot;&gt;</div><div class=\"line\">&lt;dict&gt;</div><div class=\"line\">   &lt;key&gt;items&lt;/key&gt;</div><div class=\"line\">   &lt;array&gt;</div><div class=\"line\">       &lt;dict&gt;</div><div class=\"line\">           &lt;key&gt;assets&lt;/key&gt;</div><div class=\"line\">           &lt;array&gt;</div><div class=\"line\">               &lt;dict&gt;</div><div class=\"line\">                   &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;software-package&lt;/string&gt;</div><div class=\"line\">                   &lt;key&gt;url&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;$&#123;ipa_download_url&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;/dict&gt;</div><div class=\"line\">               &lt;dict&gt;</div><div class=\"line\">                   &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;display-image&lt;/string&gt;</div><div class=\"line\">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class=\"line\">                   &lt;true/&gt;</div><div class=\"line\">                   &lt;key&gt;url&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;http://git.oschina.net/logo.svg&lt;/string&gt;</div><div class=\"line\">               &lt;/dict&gt;</div><div class=\"line\">           &lt;dict&gt;</div><div class=\"line\">                   &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;full-size-image&lt;/string&gt;</div><div class=\"line\">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class=\"line\">                   &lt;true/&gt;</div><div class=\"line\">                   &lt;key&gt;url&lt;/key&gt;</div><div class=\"line\">                   &lt;string&gt;http://git.oschina.net/logo.svg&lt;/string&gt;</div><div class=\"line\">               &lt;/dict&gt;</div><div class=\"line\">           &lt;/array&gt;&lt;key&gt;metadata&lt;/key&gt;</div><div class=\"line\">           &lt;dict&gt;</div><div class=\"line\">               &lt;key&gt;bundle-identifier&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;bundleIdentifier&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;bundle-version&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;bundleVersion&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;kind&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;software&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;subtitle&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;ipa_name&#125;&lt;/string&gt;</div><div class=\"line\">               &lt;key&gt;title&lt;/key&gt;</div><div class=\"line\">               &lt;string&gt;$&#123;ipa_name&#125;&lt;/string&gt;</div><div class=\"line\">           &lt;/dict&gt;</div><div class=\"line\">       &lt;/dict&gt;</div><div class=\"line\">   &lt;/array&gt;</div><div class=\"line\">&lt;/dict&gt;</div><div class=\"line\">&lt;/plist&gt;</div><div class=\"line\">EOF</div><div class=\"line\"></div><div class=\"line\">#fir i $scheme_name.ipa</div><div class=\"line\">cp $scheme_name.ipa $public_git_path</div><div class=\"line\">cp $scheme_name.plist $public_git_path</div><div class=\"line\">cp index.html $public_git_path</div><div class=\"line\"></div><div class=\"line\">cd $public_git_path</div><div class=\"line\">ls -l &gt; README.md</div><div class=\"line\">if [ ! -e &quot;./.git/&quot; ]; then</div><div class=\"line\">    echo &quot;*** OSC的git目录不完整，无法上传，请联系开发! ***&quot;</div><div class=\"line\">    exit -1</div><div class=\"line\">fi</div><div class=\"line\">echo &quot;commit and pushing ...&quot;</div><div class=\"line\">git add .</div><div class=\"line\">git commit -am $bundleVersion</div><div class=\"line\">git push -f origin master</div></pre></td></tr></table></figure>"},{"title":"项目中的UITableView","_content":"\n前两天听到有人说多人合作的项目并不需要处理很多事情，只需要处理好自己的那部分业务逻辑就好了。感觉这是一个很不负责任的说法。作为一个APP的开发者，自己负责的事其中的一个模块，但是都是这个APP的开发者，也要往里面塞代码，如果每个人都用不同的逻辑风格去组织代码。那么整个项目就是一坨坨坨，这个坨会影响项目的演进、日后的发展。当然有的是看不出来的，比如说：当一个请假的人写的代码出现一个BUG，需要修复上线的时候，对于不同的代码风格，需要找到问题的关键代码，这个过程是撕心裂肺的，但是如果同一套代码风格，心中就会有一个大致的位置，去修改时候就会比较快速的定位问题。\n\n<!--more-->\n\n# 论项目架构设计的重要性\n\n前两天听到有人说多人合作的项目并不需要处理很多事情，只需要处理好自己的那部分业务逻辑就好了。感觉这是一个很不负责任的说法。作为一个APP的开发者，自己负责的事其中的一个模块，但是都是这个APP的开发者，也要往里面塞代码，如果每个人都用不同的逻辑风格去组织代码。那么整个项目就是一坨坨坨，这个坨会影响项目的演进、日后的发展。当然有的是看不出来的，比如说：当一个请假的人写的代码出现一个BUG，需要修复上线的时候，对于不同的代码风格，需要找到问题的关键代码，这个过程是撕心裂肺的，但是如果同一套代码风格，心中就会有一个大致的位置，去修改时候就会比较快速的定位问题。\n\n对于无法接受通用的代码风格，只钟爱自己一种代码风格的程序员来说：如果你是刚转行过来的，那么你要走的路还有很长，踩的坑还有很多。积极主动的踩坑，才能不会掉队。\n\n\n# 从协议入手\n\n`UITableView`是项目中非常常见的iOS高级控件，在页面中所有相似的页面几乎都是由该控件进行完成。其广泛运用的不止是使用方便，最主要的是内部的复用优化也是相当给力的。\n\n\n\n## 协议模式下的UITableView\n\n`UITableView`是典型的 __协议-代理模式__ ，比例`id <UITableViewDataSource> dataSource`和`id <UITableViewDelegate> delegate`，所以使用对于这种比较规整的列表来说把协议继续扩展到下一级也是可以的。\n\n为了统一`UITableView.dataSource`和`UITableView.delegate`，构建如下协议：\n```objc\n//  直接填充Cell的cellModel\n@protocol CellModelProtocol <NSObject>\n\n- (NSString *)cellClassName;  //  cellModel绑定的类名\n- (void)cellModelForCell:(UITableViewCell *)cell; //  cellModel填充上面绑定的cell\n\n@end\n\n```\n\n\n那么只需要在代理中做如下设置:\n\n```objc\n#pragma mark <UITableViewDelegate, UITableViewDataSource>\n- (NSInteger)numberOfSectionsInTableView:(UITableView*)tableView\n{\n    return 1;\n}\n- (NSInteger)tableView:(UITableView*)tableView numberOfRowsInSection:(NSInteger)section\n{\n    return self.viewModel.dataSource.count;\n}\n- (UITableViewCell*)tableView:(UITableView*)tableView cellForRowAtIndexPath:(NSIndexPath*)indexPath\n{\n      id<CellModelProtocol> cellModel = self.viewModel.dataSource[indexPath.row];\n      UITableViewCell* cell = [tableView dequeueReusableCellWithIdentifier:[cellModel cellClassName]];\n      cell.frame = tableView.bounds;\n      [cellModel cellModelForCell:cell];\n      [cell sizeToFit];\n      return cell;\n}\n- (CGFloat)tableView:(UITableView*)tableView heightForRowAtIndexPath:(NSIndexPath*)indexPath\n{\n      id<CellModelProtocol> cellModel = self.viewModel.dataSource[indexPath.row];\n      UITableViewCell* cell = [tableView ktj_cacheHeightCellForReuseIDFA:[cellModel cellClassName]];\n      [cellModel cellModelForCell:cell];\n      return [cell sizeThatFits:tableView.bounds.size].height;\n}\n\n```\n\n而在cell中，默认在`sizeThatFits:`中进行布局的设置和算高即可。如下：\n\n```objc\n//  xxxCell.m\n\n- (CGSize)sizeThatFits:(CGSize)size {\n    \n    CGRect frame = CGRectZero;\n    //  根据Cell的实际内容进行布局并设置高度\n    frame.origin = CGPointMake(10, 15);\n    frame.size = [self.infoLabel sizeThatFits:CGSizeMake(size.width-frame.origin.x*2, size.height)];\n    self.infoLabel.frame = frame;\n    \n    size.height = CGRectGetMaxY(self.infoLabel.frame)+frame.origin.y;\n    return size;\n}\n\n```\n\n如果cell采用autolayout，则计算采用[UITableView-FDTemplateLayoutCell](https://github.com/forkingdog/UITableView-FDTemplateLayoutCell/blob/e3ee86ce419d18d3ff735056f1474f2863e43003/Classes/UITableView%2BFDTemplateLayoutCell.m)的计算方法。\n\n```objc\n@implementation UITableViewCell (KTJCellAutoLayoutForSize)\n//  autolout布局计算高度\n- (CGSize)ktj_ALCellSizeThatFits:(CGSize)size {\n    // Add a hard width constraint to make dynamic content views (like labels) expand vertically instead\n    // of growing horizontally, in a flow-layout manner.\n    NSLayoutConstraint *tempWidthConstraint =\n    [NSLayoutConstraint constraintWithItem:self.contentView\n                                 attribute:NSLayoutAttributeWidth\n                                 relatedBy:NSLayoutRelationEqual\n                                    toItem:nil\n                                 attribute:NSLayoutAttributeNotAnAttribute\n                                multiplier:1.0\n                                  constant:size.width];\n    [self.contentView addConstraint:tempWidthConstraint];\n    // Auto layout engine does its math\n    size = [self.contentView systemLayoutSizeFittingSize:UILayoutFittingCompressedSize];\n    size.height += 1;\n    [self.contentView removeConstraint:tempWidthConstraint];\n    return size;\n}\n@end\n\n```\n\n另外在`<UITableViewDelegate, UITableViewDataSource>`中只写了1组，只有cell，没有header、footer的情况，如果需要，炮制即可。\n\n说一下这个其中的`ktj_cacheHeightCellForReuseIDFA:`类别方法。这个方法是为了算高进行缓存的一个cell，这个cell保存在 `NSCache`中。所以为了统一，需要在数据初始化时候注册所有的cell。当然你也可以根据类名直接生成，这个自主决定。\n\n说到算高，需要说一下这其中的`dequeueReusableCellWithIdentifier:`方法。该方法是从tableView的缓存池中取出指定ID的cell。请注意是 __取出__ ，并且`UITableView`并没有暴露出如何放进缓存池，也没有必要暴露出放进缓存池的方法。而且`UITableView`只有一个地方能够接收Cell那就是`tableView:cellForRowAtIndexPath:`。所以请保证`dequeueReusableCellWithIdentifier:`取出的方法 __需要通过`tableView:cellForRowAtIndexPath:`返回给`UITableView`__ 。这就是我上面说的`ktj_cacheHeightCellForReuseIDFA:`方法为何要做一个 cache去缓存我取出的cell，目的是为了减少cell的浪费。\n\n\n同理，对于`UITableView`的`headerView`、`footerView`来说，可以炮制以上协议、方法。不再赘述\n\n\nPS.\n  1. [UITableView-FDTemplateLayoutCell](https://github.com/forkingdog/UITableView-FDTemplateLayoutCell): [sunnyxx](https://github.com/sunnyxx)打造的优化UITableView的一个库，6000的star，很赞。\n  \n\n# 规范化的代码风格\n\n对于多人开发，最崩溃的事情就要数去读别人的代码。就算不是多人开发，接手别人的代码也是让人最崩溃的事情。如果有不用考虑这件事的叫我！\n\n不同的公司可以有不同的代码风格，但是一个公司的代码风格需要保持一致，这样就不会出现一人请假，无人能接受项目的尴尬局面，就算能接，也是需要为了加一个逻辑判断，需要花费很大的精力去处理。\n\n至于其中的代码不统一的坑，恐怕要等踩过才知道吧😂。\n\n\n# 业务逻辑的拆分\n\n对于复杂的业务逻辑，对其拆分是非常重要的，不拆分很可能写出来的代码一个文件 >1000 行。复杂的业务逻辑对于写出来需要一气呵成，修改起来也就出现了牵一发动全身(虽然拆分完成之后可能也会关键逻辑代码不可拆分，但是会好很多)。\n\n\n## 筛选重构\n\n筛选主要处理的是筛选项，针对众多筛选条件拆分为不同的业务逻辑模块是必须的。遵照拆分的原则，于是乎根据UI划分出来位置、价格、户型、筛选、排序这么几个模块。针对每个模块自行处理选中数据、UI展示。对外只暴露选中项输入和选中回调。\n\n对于每个数据大致都可分为一个列表，然后可选中1项或多项。于是乎，这个代码如果不拉出来是要写好多次的，拉出来，但是选中需要把选中的逻辑扔出来，方便自定义。\n\n\n\n## 地图踩坑","source":"_posts/about-project-tableview.md","raw":"---\ntitle: 项目中的UITableView\ntags:\n  - iOS\n  - 架构\n---\n\n前两天听到有人说多人合作的项目并不需要处理很多事情，只需要处理好自己的那部分业务逻辑就好了。感觉这是一个很不负责任的说法。作为一个APP的开发者，自己负责的事其中的一个模块，但是都是这个APP的开发者，也要往里面塞代码，如果每个人都用不同的逻辑风格去组织代码。那么整个项目就是一坨坨坨，这个坨会影响项目的演进、日后的发展。当然有的是看不出来的，比如说：当一个请假的人写的代码出现一个BUG，需要修复上线的时候，对于不同的代码风格，需要找到问题的关键代码，这个过程是撕心裂肺的，但是如果同一套代码风格，心中就会有一个大致的位置，去修改时候就会比较快速的定位问题。\n\n<!--more-->\n\n# 论项目架构设计的重要性\n\n前两天听到有人说多人合作的项目并不需要处理很多事情，只需要处理好自己的那部分业务逻辑就好了。感觉这是一个很不负责任的说法。作为一个APP的开发者，自己负责的事其中的一个模块，但是都是这个APP的开发者，也要往里面塞代码，如果每个人都用不同的逻辑风格去组织代码。那么整个项目就是一坨坨坨，这个坨会影响项目的演进、日后的发展。当然有的是看不出来的，比如说：当一个请假的人写的代码出现一个BUG，需要修复上线的时候，对于不同的代码风格，需要找到问题的关键代码，这个过程是撕心裂肺的，但是如果同一套代码风格，心中就会有一个大致的位置，去修改时候就会比较快速的定位问题。\n\n对于无法接受通用的代码风格，只钟爱自己一种代码风格的程序员来说：如果你是刚转行过来的，那么你要走的路还有很长，踩的坑还有很多。积极主动的踩坑，才能不会掉队。\n\n\n# 从协议入手\n\n`UITableView`是项目中非常常见的iOS高级控件，在页面中所有相似的页面几乎都是由该控件进行完成。其广泛运用的不止是使用方便，最主要的是内部的复用优化也是相当给力的。\n\n\n\n## 协议模式下的UITableView\n\n`UITableView`是典型的 __协议-代理模式__ ，比例`id <UITableViewDataSource> dataSource`和`id <UITableViewDelegate> delegate`，所以使用对于这种比较规整的列表来说把协议继续扩展到下一级也是可以的。\n\n为了统一`UITableView.dataSource`和`UITableView.delegate`，构建如下协议：\n```objc\n//  直接填充Cell的cellModel\n@protocol CellModelProtocol <NSObject>\n\n- (NSString *)cellClassName;  //  cellModel绑定的类名\n- (void)cellModelForCell:(UITableViewCell *)cell; //  cellModel填充上面绑定的cell\n\n@end\n\n```\n\n\n那么只需要在代理中做如下设置:\n\n```objc\n#pragma mark <UITableViewDelegate, UITableViewDataSource>\n- (NSInteger)numberOfSectionsInTableView:(UITableView*)tableView\n{\n    return 1;\n}\n- (NSInteger)tableView:(UITableView*)tableView numberOfRowsInSection:(NSInteger)section\n{\n    return self.viewModel.dataSource.count;\n}\n- (UITableViewCell*)tableView:(UITableView*)tableView cellForRowAtIndexPath:(NSIndexPath*)indexPath\n{\n      id<CellModelProtocol> cellModel = self.viewModel.dataSource[indexPath.row];\n      UITableViewCell* cell = [tableView dequeueReusableCellWithIdentifier:[cellModel cellClassName]];\n      cell.frame = tableView.bounds;\n      [cellModel cellModelForCell:cell];\n      [cell sizeToFit];\n      return cell;\n}\n- (CGFloat)tableView:(UITableView*)tableView heightForRowAtIndexPath:(NSIndexPath*)indexPath\n{\n      id<CellModelProtocol> cellModel = self.viewModel.dataSource[indexPath.row];\n      UITableViewCell* cell = [tableView ktj_cacheHeightCellForReuseIDFA:[cellModel cellClassName]];\n      [cellModel cellModelForCell:cell];\n      return [cell sizeThatFits:tableView.bounds.size].height;\n}\n\n```\n\n而在cell中，默认在`sizeThatFits:`中进行布局的设置和算高即可。如下：\n\n```objc\n//  xxxCell.m\n\n- (CGSize)sizeThatFits:(CGSize)size {\n    \n    CGRect frame = CGRectZero;\n    //  根据Cell的实际内容进行布局并设置高度\n    frame.origin = CGPointMake(10, 15);\n    frame.size = [self.infoLabel sizeThatFits:CGSizeMake(size.width-frame.origin.x*2, size.height)];\n    self.infoLabel.frame = frame;\n    \n    size.height = CGRectGetMaxY(self.infoLabel.frame)+frame.origin.y;\n    return size;\n}\n\n```\n\n如果cell采用autolayout，则计算采用[UITableView-FDTemplateLayoutCell](https://github.com/forkingdog/UITableView-FDTemplateLayoutCell/blob/e3ee86ce419d18d3ff735056f1474f2863e43003/Classes/UITableView%2BFDTemplateLayoutCell.m)的计算方法。\n\n```objc\n@implementation UITableViewCell (KTJCellAutoLayoutForSize)\n//  autolout布局计算高度\n- (CGSize)ktj_ALCellSizeThatFits:(CGSize)size {\n    // Add a hard width constraint to make dynamic content views (like labels) expand vertically instead\n    // of growing horizontally, in a flow-layout manner.\n    NSLayoutConstraint *tempWidthConstraint =\n    [NSLayoutConstraint constraintWithItem:self.contentView\n                                 attribute:NSLayoutAttributeWidth\n                                 relatedBy:NSLayoutRelationEqual\n                                    toItem:nil\n                                 attribute:NSLayoutAttributeNotAnAttribute\n                                multiplier:1.0\n                                  constant:size.width];\n    [self.contentView addConstraint:tempWidthConstraint];\n    // Auto layout engine does its math\n    size = [self.contentView systemLayoutSizeFittingSize:UILayoutFittingCompressedSize];\n    size.height += 1;\n    [self.contentView removeConstraint:tempWidthConstraint];\n    return size;\n}\n@end\n\n```\n\n另外在`<UITableViewDelegate, UITableViewDataSource>`中只写了1组，只有cell，没有header、footer的情况，如果需要，炮制即可。\n\n说一下这个其中的`ktj_cacheHeightCellForReuseIDFA:`类别方法。这个方法是为了算高进行缓存的一个cell，这个cell保存在 `NSCache`中。所以为了统一，需要在数据初始化时候注册所有的cell。当然你也可以根据类名直接生成，这个自主决定。\n\n说到算高，需要说一下这其中的`dequeueReusableCellWithIdentifier:`方法。该方法是从tableView的缓存池中取出指定ID的cell。请注意是 __取出__ ，并且`UITableView`并没有暴露出如何放进缓存池，也没有必要暴露出放进缓存池的方法。而且`UITableView`只有一个地方能够接收Cell那就是`tableView:cellForRowAtIndexPath:`。所以请保证`dequeueReusableCellWithIdentifier:`取出的方法 __需要通过`tableView:cellForRowAtIndexPath:`返回给`UITableView`__ 。这就是我上面说的`ktj_cacheHeightCellForReuseIDFA:`方法为何要做一个 cache去缓存我取出的cell，目的是为了减少cell的浪费。\n\n\n同理，对于`UITableView`的`headerView`、`footerView`来说，可以炮制以上协议、方法。不再赘述\n\n\nPS.\n  1. [UITableView-FDTemplateLayoutCell](https://github.com/forkingdog/UITableView-FDTemplateLayoutCell): [sunnyxx](https://github.com/sunnyxx)打造的优化UITableView的一个库，6000的star，很赞。\n  \n\n# 规范化的代码风格\n\n对于多人开发，最崩溃的事情就要数去读别人的代码。就算不是多人开发，接手别人的代码也是让人最崩溃的事情。如果有不用考虑这件事的叫我！\n\n不同的公司可以有不同的代码风格，但是一个公司的代码风格需要保持一致，这样就不会出现一人请假，无人能接受项目的尴尬局面，就算能接，也是需要为了加一个逻辑判断，需要花费很大的精力去处理。\n\n至于其中的代码不统一的坑，恐怕要等踩过才知道吧😂。\n\n\n# 业务逻辑的拆分\n\n对于复杂的业务逻辑，对其拆分是非常重要的，不拆分很可能写出来的代码一个文件 >1000 行。复杂的业务逻辑对于写出来需要一气呵成，修改起来也就出现了牵一发动全身(虽然拆分完成之后可能也会关键逻辑代码不可拆分，但是会好很多)。\n\n\n## 筛选重构\n\n筛选主要处理的是筛选项，针对众多筛选条件拆分为不同的业务逻辑模块是必须的。遵照拆分的原则，于是乎根据UI划分出来位置、价格、户型、筛选、排序这么几个模块。针对每个模块自行处理选中数据、UI展示。对外只暴露选中项输入和选中回调。\n\n对于每个数据大致都可分为一个列表，然后可选中1项或多项。于是乎，这个代码如果不拉出来是要写好多次的，拉出来，但是选中需要把选中的逻辑扔出来，方便自定义。\n\n\n\n## 地图踩坑","slug":"about-project-tableview","published":1,"date":"2016-07-27T05:30:45.000Z","updated":"2016-10-22T13:54:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixbaqymh0006cb6acwyghvc8","content":"<p>前两天听到有人说多人合作的项目并不需要处理很多事情，只需要处理好自己的那部分业务逻辑就好了。感觉这是一个很不负责任的说法。作为一个APP的开发者，自己负责的事其中的一个模块，但是都是这个APP的开发者，也要往里面塞代码，如果每个人都用不同的逻辑风格去组织代码。那么整个项目就是一坨坨坨，这个坨会影响项目的演进、日后的发展。当然有的是看不出来的，比如说：当一个请假的人写的代码出现一个BUG，需要修复上线的时候，对于不同的代码风格，需要找到问题的关键代码，这个过程是撕心裂肺的，但是如果同一套代码风格，心中就会有一个大致的位置，去修改时候就会比较快速的定位问题。</p>\n<a id=\"more\"></a>\n<h1 id=\"论项目架构设计的重要性\"><a href=\"#论项目架构设计的重要性\" class=\"headerlink\" title=\"论项目架构设计的重要性\"></a>论项目架构设计的重要性</h1><p>前两天听到有人说多人合作的项目并不需要处理很多事情，只需要处理好自己的那部分业务逻辑就好了。感觉这是一个很不负责任的说法。作为一个APP的开发者，自己负责的事其中的一个模块，但是都是这个APP的开发者，也要往里面塞代码，如果每个人都用不同的逻辑风格去组织代码。那么整个项目就是一坨坨坨，这个坨会影响项目的演进、日后的发展。当然有的是看不出来的，比如说：当一个请假的人写的代码出现一个BUG，需要修复上线的时候，对于不同的代码风格，需要找到问题的关键代码，这个过程是撕心裂肺的，但是如果同一套代码风格，心中就会有一个大致的位置，去修改时候就会比较快速的定位问题。</p>\n<p>对于无法接受通用的代码风格，只钟爱自己一种代码风格的程序员来说：如果你是刚转行过来的，那么你要走的路还有很长，踩的坑还有很多。积极主动的踩坑，才能不会掉队。</p>\n<h1 id=\"从协议入手\"><a href=\"#从协议入手\" class=\"headerlink\" title=\"从协议入手\"></a>从协议入手</h1><p><code>UITableView</code>是项目中非常常见的iOS高级控件，在页面中所有相似的页面几乎都是由该控件进行完成。其广泛运用的不止是使用方便，最主要的是内部的复用优化也是相当给力的。</p>\n<h2 id=\"协议模式下的UITableView\"><a href=\"#协议模式下的UITableView\" class=\"headerlink\" title=\"协议模式下的UITableView\"></a>协议模式下的UITableView</h2><p><code>UITableView</code>是典型的 <strong>协议-代理模式</strong> ，比例<code>id &lt;UITableViewDataSource&gt; dataSource</code>和<code>id &lt;UITableViewDelegate&gt; delegate</code>，所以使用对于这种比较规整的列表来说把协议继续扩展到下一级也是可以的。</p>\n<p>为了统一<code>UITableView.dataSource</code>和<code>UITableView.delegate</code>，构建如下协议：<br><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//  直接填充Cell的cellModel</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">@protocol</span> <span class=\"title\">CellModelProtocol</span> &lt;<span class=\"title\">NSObject</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">- (<span class=\"built_in\">NSString</span> *)cellClassName;  <span class=\"comment\">//  cellModel绑定的类名</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)cellModelForCell:(<span class=\"built_in\">UITableViewCell</span> *)cell; <span class=\"comment\">//  cellModel填充上面绑定的cell</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">@end</span></div></pre></td></tr></table></figure></p>\n<p>那么只需要在代理中做如下设置:</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#pragma mark <span class=\"meta-string\">&lt;UITableViewDelegate, UITableViewDataSource&gt;</span></span></div><div class=\"line\">- (<span class=\"built_in\">NSInteger</span>)numberOfSectionsInTableView:(<span class=\"built_in\">UITableView</span>*)tableView</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">- (<span class=\"built_in\">NSInteger</span>)tableView:(<span class=\"built_in\">UITableView</span>*)tableView numberOfRowsInSection:(<span class=\"built_in\">NSInteger</span>)section</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>.viewModel.dataSource.count;</div><div class=\"line\">&#125;</div><div class=\"line\">- (<span class=\"built_in\">UITableViewCell</span>*)tableView:(<span class=\"built_in\">UITableView</span>*)tableView cellForRowAtIndexPath:(<span class=\"built_in\">NSIndexPath</span>*)indexPath</div><div class=\"line\">&#123;</div><div class=\"line\">      <span class=\"keyword\">id</span>&lt;CellModelProtocol&gt; cellModel = <span class=\"keyword\">self</span>.viewModel.dataSource[indexPath.row];</div><div class=\"line\">      <span class=\"built_in\">UITableViewCell</span>* cell = [tableView dequeueReusableCellWithIdentifier:[cellModel cellClassName]];</div><div class=\"line\">      cell.frame = tableView.bounds;</div><div class=\"line\">      [cellModel cellModelForCell:cell];</div><div class=\"line\">      [cell sizeToFit];</div><div class=\"line\">      <span class=\"keyword\">return</span> cell;</div><div class=\"line\">&#125;</div><div class=\"line\">- (<span class=\"built_in\">CGFloat</span>)tableView:(<span class=\"built_in\">UITableView</span>*)tableView heightForRowAtIndexPath:(<span class=\"built_in\">NSIndexPath</span>*)indexPath</div><div class=\"line\">&#123;</div><div class=\"line\">      <span class=\"keyword\">id</span>&lt;CellModelProtocol&gt; cellModel = <span class=\"keyword\">self</span>.viewModel.dataSource[indexPath.row];</div><div class=\"line\">      <span class=\"built_in\">UITableViewCell</span>* cell = [tableView ktj_cacheHeightCellForReuseIDFA:[cellModel cellClassName]];</div><div class=\"line\">      [cellModel cellModelForCell:cell];</div><div class=\"line\">      <span class=\"keyword\">return</span> [cell sizeThatFits:tableView.bounds.size].height;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>而在cell中，默认在<code>sizeThatFits:</code>中进行布局的设置和算高即可。如下：</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//  xxxCell.m</span></div><div class=\"line\"></div><div class=\"line\">- (<span class=\"built_in\">CGSize</span>)sizeThatFits:(<span class=\"built_in\">CGSize</span>)size &#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"built_in\">CGRect</span> frame = <span class=\"built_in\">CGRectZero</span>;</div><div class=\"line\">    <span class=\"comment\">//  根据Cell的实际内容进行布局并设置高度</span></div><div class=\"line\">    frame.origin = <span class=\"built_in\">CGPointMake</span>(<span class=\"number\">10</span>, <span class=\"number\">15</span>);</div><div class=\"line\">    frame.size = [<span class=\"keyword\">self</span>.infoLabel sizeThatFits:<span class=\"built_in\">CGSizeMake</span>(size.width-frame.origin.x*<span class=\"number\">2</span>, size.height)];</div><div class=\"line\">    <span class=\"keyword\">self</span>.infoLabel.frame = frame;</div><div class=\"line\">    </div><div class=\"line\">    size.height = <span class=\"built_in\">CGRectGetMaxY</span>(<span class=\"keyword\">self</span>.infoLabel.frame)+frame.origin.y;</div><div class=\"line\">    <span class=\"keyword\">return</span> size;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果cell采用autolayout，则计算采用<a href=\"https://github.com/forkingdog/UITableView-FDTemplateLayoutCell/blob/e3ee86ce419d18d3ff735056f1474f2863e43003/Classes/UITableView%2BFDTemplateLayoutCell.m\" target=\"_blank\" rel=\"external\">UITableView-FDTemplateLayoutCell</a>的计算方法。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">@implementation</span> <span class=\"title\">UITableViewCell</span> (<span class=\"title\">KTJCellAutoLayoutForSize</span>)</span></div><div class=\"line\"><span class=\"comment\">//  autolout布局计算高度</span></div><div class=\"line\">- (<span class=\"built_in\">CGSize</span>)ktj_ALCellSizeThatFits:(<span class=\"built_in\">CGSize</span>)size &#123;</div><div class=\"line\">    <span class=\"comment\">// Add a hard width constraint to make dynamic content views (like labels) expand vertically instead</span></div><div class=\"line\">    <span class=\"comment\">// of growing horizontally, in a flow-layout manner.</span></div><div class=\"line\">    <span class=\"built_in\">NSLayoutConstraint</span> *tempWidthConstraint =</div><div class=\"line\">    [<span class=\"built_in\">NSLayoutConstraint</span> constraintWithItem:<span class=\"keyword\">self</span>.contentView</div><div class=\"line\">                                 attribute:<span class=\"built_in\">NSLayoutAttributeWidth</span></div><div class=\"line\">                                 relatedBy:<span class=\"built_in\">NSLayoutRelationEqual</span></div><div class=\"line\">                                    toItem:<span class=\"literal\">nil</span></div><div class=\"line\">                                 attribute:<span class=\"built_in\">NSLayoutAttributeNotAnAttribute</span></div><div class=\"line\">                                multiplier:<span class=\"number\">1.0</span></div><div class=\"line\">                                  constant:size.width];</div><div class=\"line\">    [<span class=\"keyword\">self</span>.contentView addConstraint:tempWidthConstraint];</div><div class=\"line\">    <span class=\"comment\">// Auto layout engine does its math</span></div><div class=\"line\">    size = [<span class=\"keyword\">self</span>.contentView systemLayoutSizeFittingSize:<span class=\"built_in\">UILayoutFittingCompressedSize</span>];</div><div class=\"line\">    size.height += <span class=\"number\">1</span>;</div><div class=\"line\">    [<span class=\"keyword\">self</span>.contentView removeConstraint:tempWidthConstraint];</div><div class=\"line\">    <span class=\"keyword\">return</span> size;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">@end</span></div></pre></td></tr></table></figure>\n<p>另外在<code>&lt;UITableViewDelegate, UITableViewDataSource&gt;</code>中只写了1组，只有cell，没有header、footer的情况，如果需要，炮制即可。</p>\n<p>说一下这个其中的<code>ktj_cacheHeightCellForReuseIDFA:</code>类别方法。这个方法是为了算高进行缓存的一个cell，这个cell保存在 <code>NSCache</code>中。所以为了统一，需要在数据初始化时候注册所有的cell。当然你也可以根据类名直接生成，这个自主决定。</p>\n<p>说到算高，需要说一下这其中的<code>dequeueReusableCellWithIdentifier:</code>方法。该方法是从tableView的缓存池中取出指定ID的cell。请注意是 <strong>取出</strong> ，并且<code>UITableView</code>并没有暴露出如何放进缓存池，也没有必要暴露出放进缓存池的方法。而且<code>UITableView</code>只有一个地方能够接收Cell那就是<code>tableView:cellForRowAtIndexPath:</code>。所以请保证<code>dequeueReusableCellWithIdentifier:</code>取出的方法 <strong>需要通过<code>tableView:cellForRowAtIndexPath:</code>返回给<code>UITableView</code></strong> 。这就是我上面说的<code>ktj_cacheHeightCellForReuseIDFA:</code>方法为何要做一个 cache去缓存我取出的cell，目的是为了减少cell的浪费。</p>\n<p>同理，对于<code>UITableView</code>的<code>headerView</code>、<code>footerView</code>来说，可以炮制以上协议、方法。不再赘述</p>\n<p>PS.</p>\n<ol>\n<li><a href=\"https://github.com/forkingdog/UITableView-FDTemplateLayoutCell\" target=\"_blank\" rel=\"external\">UITableView-FDTemplateLayoutCell</a>: <a href=\"https://github.com/sunnyxx\" target=\"_blank\" rel=\"external\">sunnyxx</a>打造的优化UITableView的一个库，6000的star，很赞。</li>\n</ol>\n<h1 id=\"规范化的代码风格\"><a href=\"#规范化的代码风格\" class=\"headerlink\" title=\"规范化的代码风格\"></a>规范化的代码风格</h1><p>对于多人开发，最崩溃的事情就要数去读别人的代码。就算不是多人开发，接手别人的代码也是让人最崩溃的事情。如果有不用考虑这件事的叫我！</p>\n<p>不同的公司可以有不同的代码风格，但是一个公司的代码风格需要保持一致，这样就不会出现一人请假，无人能接受项目的尴尬局面，就算能接，也是需要为了加一个逻辑判断，需要花费很大的精力去处理。</p>\n<p>至于其中的代码不统一的坑，恐怕要等踩过才知道吧😂。</p>\n<h1 id=\"业务逻辑的拆分\"><a href=\"#业务逻辑的拆分\" class=\"headerlink\" title=\"业务逻辑的拆分\"></a>业务逻辑的拆分</h1><p>对于复杂的业务逻辑，对其拆分是非常重要的，不拆分很可能写出来的代码一个文件 &gt;1000 行。复杂的业务逻辑对于写出来需要一气呵成，修改起来也就出现了牵一发动全身(虽然拆分完成之后可能也会关键逻辑代码不可拆分，但是会好很多)。</p>\n<h2 id=\"筛选重构\"><a href=\"#筛选重构\" class=\"headerlink\" title=\"筛选重构\"></a>筛选重构</h2><p>筛选主要处理的是筛选项，针对众多筛选条件拆分为不同的业务逻辑模块是必须的。遵照拆分的原则，于是乎根据UI划分出来位置、价格、户型、筛选、排序这么几个模块。针对每个模块自行处理选中数据、UI展示。对外只暴露选中项输入和选中回调。</p>\n<p>对于每个数据大致都可分为一个列表，然后可选中1项或多项。于是乎，这个代码如果不拉出来是要写好多次的，拉出来，但是选中需要把选中的逻辑扔出来，方便自定义。</p>\n<h2 id=\"地图踩坑\"><a href=\"#地图踩坑\" class=\"headerlink\" title=\"地图踩坑\"></a>地图踩坑</h2>","excerpt":"<p>前两天听到有人说多人合作的项目并不需要处理很多事情，只需要处理好自己的那部分业务逻辑就好了。感觉这是一个很不负责任的说法。作为一个APP的开发者，自己负责的事其中的一个模块，但是都是这个APP的开发者，也要往里面塞代码，如果每个人都用不同的逻辑风格去组织代码。那么整个项目就是一坨坨坨，这个坨会影响项目的演进、日后的发展。当然有的是看不出来的，比如说：当一个请假的人写的代码出现一个BUG，需要修复上线的时候，对于不同的代码风格，需要找到问题的关键代码，这个过程是撕心裂肺的，但是如果同一套代码风格，心中就会有一个大致的位置，去修改时候就会比较快速的定位问题。</p>","more":"<h1 id=\"论项目架构设计的重要性\"><a href=\"#论项目架构设计的重要性\" class=\"headerlink\" title=\"论项目架构设计的重要性\"></a>论项目架构设计的重要性</h1><p>前两天听到有人说多人合作的项目并不需要处理很多事情，只需要处理好自己的那部分业务逻辑就好了。感觉这是一个很不负责任的说法。作为一个APP的开发者，自己负责的事其中的一个模块，但是都是这个APP的开发者，也要往里面塞代码，如果每个人都用不同的逻辑风格去组织代码。那么整个项目就是一坨坨坨，这个坨会影响项目的演进、日后的发展。当然有的是看不出来的，比如说：当一个请假的人写的代码出现一个BUG，需要修复上线的时候，对于不同的代码风格，需要找到问题的关键代码，这个过程是撕心裂肺的，但是如果同一套代码风格，心中就会有一个大致的位置，去修改时候就会比较快速的定位问题。</p>\n<p>对于无法接受通用的代码风格，只钟爱自己一种代码风格的程序员来说：如果你是刚转行过来的，那么你要走的路还有很长，踩的坑还有很多。积极主动的踩坑，才能不会掉队。</p>\n<h1 id=\"从协议入手\"><a href=\"#从协议入手\" class=\"headerlink\" title=\"从协议入手\"></a>从协议入手</h1><p><code>UITableView</code>是项目中非常常见的iOS高级控件，在页面中所有相似的页面几乎都是由该控件进行完成。其广泛运用的不止是使用方便，最主要的是内部的复用优化也是相当给力的。</p>\n<h2 id=\"协议模式下的UITableView\"><a href=\"#协议模式下的UITableView\" class=\"headerlink\" title=\"协议模式下的UITableView\"></a>协议模式下的UITableView</h2><p><code>UITableView</code>是典型的 <strong>协议-代理模式</strong> ，比例<code>id &lt;UITableViewDataSource&gt; dataSource</code>和<code>id &lt;UITableViewDelegate&gt; delegate</code>，所以使用对于这种比较规整的列表来说把协议继续扩展到下一级也是可以的。</p>\n<p>为了统一<code>UITableView.dataSource</code>和<code>UITableView.delegate</code>，构建如下协议：<br><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//  直接填充Cell的cellModel</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">@protocol</span> <span class=\"title\">CellModelProtocol</span> &lt;<span class=\"title\">NSObject</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">- (<span class=\"built_in\">NSString</span> *)cellClassName;  <span class=\"comment\">//  cellModel绑定的类名</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)cellModelForCell:(<span class=\"built_in\">UITableViewCell</span> *)cell; <span class=\"comment\">//  cellModel填充上面绑定的cell</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">@end</span></div></pre></td></tr></table></figure></p>\n<p>那么只需要在代理中做如下设置:</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#pragma mark <span class=\"meta-string\">&lt;UITableViewDelegate, UITableViewDataSource&gt;</span></span></div><div class=\"line\">- (<span class=\"built_in\">NSInteger</span>)numberOfSectionsInTableView:(<span class=\"built_in\">UITableView</span>*)tableView</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">- (<span class=\"built_in\">NSInteger</span>)tableView:(<span class=\"built_in\">UITableView</span>*)tableView numberOfRowsInSection:(<span class=\"built_in\">NSInteger</span>)section</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>.viewModel.dataSource.count;</div><div class=\"line\">&#125;</div><div class=\"line\">- (<span class=\"built_in\">UITableViewCell</span>*)tableView:(<span class=\"built_in\">UITableView</span>*)tableView cellForRowAtIndexPath:(<span class=\"built_in\">NSIndexPath</span>*)indexPath</div><div class=\"line\">&#123;</div><div class=\"line\">      <span class=\"keyword\">id</span>&lt;CellModelProtocol&gt; cellModel = <span class=\"keyword\">self</span>.viewModel.dataSource[indexPath.row];</div><div class=\"line\">      <span class=\"built_in\">UITableViewCell</span>* cell = [tableView dequeueReusableCellWithIdentifier:[cellModel cellClassName]];</div><div class=\"line\">      cell.frame = tableView.bounds;</div><div class=\"line\">      [cellModel cellModelForCell:cell];</div><div class=\"line\">      [cell sizeToFit];</div><div class=\"line\">      <span class=\"keyword\">return</span> cell;</div><div class=\"line\">&#125;</div><div class=\"line\">- (<span class=\"built_in\">CGFloat</span>)tableView:(<span class=\"built_in\">UITableView</span>*)tableView heightForRowAtIndexPath:(<span class=\"built_in\">NSIndexPath</span>*)indexPath</div><div class=\"line\">&#123;</div><div class=\"line\">      <span class=\"keyword\">id</span>&lt;CellModelProtocol&gt; cellModel = <span class=\"keyword\">self</span>.viewModel.dataSource[indexPath.row];</div><div class=\"line\">      <span class=\"built_in\">UITableViewCell</span>* cell = [tableView ktj_cacheHeightCellForReuseIDFA:[cellModel cellClassName]];</div><div class=\"line\">      [cellModel cellModelForCell:cell];</div><div class=\"line\">      <span class=\"keyword\">return</span> [cell sizeThatFits:tableView.bounds.size].height;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>而在cell中，默认在<code>sizeThatFits:</code>中进行布局的设置和算高即可。如下：</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//  xxxCell.m</span></div><div class=\"line\"></div><div class=\"line\">- (<span class=\"built_in\">CGSize</span>)sizeThatFits:(<span class=\"built_in\">CGSize</span>)size &#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"built_in\">CGRect</span> frame = <span class=\"built_in\">CGRectZero</span>;</div><div class=\"line\">    <span class=\"comment\">//  根据Cell的实际内容进行布局并设置高度</span></div><div class=\"line\">    frame.origin = <span class=\"built_in\">CGPointMake</span>(<span class=\"number\">10</span>, <span class=\"number\">15</span>);</div><div class=\"line\">    frame.size = [<span class=\"keyword\">self</span>.infoLabel sizeThatFits:<span class=\"built_in\">CGSizeMake</span>(size.width-frame.origin.x*<span class=\"number\">2</span>, size.height)];</div><div class=\"line\">    <span class=\"keyword\">self</span>.infoLabel.frame = frame;</div><div class=\"line\">    </div><div class=\"line\">    size.height = <span class=\"built_in\">CGRectGetMaxY</span>(<span class=\"keyword\">self</span>.infoLabel.frame)+frame.origin.y;</div><div class=\"line\">    <span class=\"keyword\">return</span> size;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果cell采用autolayout，则计算采用<a href=\"https://github.com/forkingdog/UITableView-FDTemplateLayoutCell/blob/e3ee86ce419d18d3ff735056f1474f2863e43003/Classes/UITableView%2BFDTemplateLayoutCell.m\">UITableView-FDTemplateLayoutCell</a>的计算方法。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">@implementation</span> <span class=\"title\">UITableViewCell</span> (<span class=\"title\">KTJCellAutoLayoutForSize</span>)</span></div><div class=\"line\"><span class=\"comment\">//  autolout布局计算高度</span></div><div class=\"line\">- (<span class=\"built_in\">CGSize</span>)ktj_ALCellSizeThatFits:(<span class=\"built_in\">CGSize</span>)size &#123;</div><div class=\"line\">    <span class=\"comment\">// Add a hard width constraint to make dynamic content views (like labels) expand vertically instead</span></div><div class=\"line\">    <span class=\"comment\">// of growing horizontally, in a flow-layout manner.</span></div><div class=\"line\">    <span class=\"built_in\">NSLayoutConstraint</span> *tempWidthConstraint =</div><div class=\"line\">    [<span class=\"built_in\">NSLayoutConstraint</span> constraintWithItem:<span class=\"keyword\">self</span>.contentView</div><div class=\"line\">                                 attribute:<span class=\"built_in\">NSLayoutAttributeWidth</span></div><div class=\"line\">                                 relatedBy:<span class=\"built_in\">NSLayoutRelationEqual</span></div><div class=\"line\">                                    toItem:<span class=\"literal\">nil</span></div><div class=\"line\">                                 attribute:<span class=\"built_in\">NSLayoutAttributeNotAnAttribute</span></div><div class=\"line\">                                multiplier:<span class=\"number\">1.0</span></div><div class=\"line\">                                  constant:size.width];</div><div class=\"line\">    [<span class=\"keyword\">self</span>.contentView addConstraint:tempWidthConstraint];</div><div class=\"line\">    <span class=\"comment\">// Auto layout engine does its math</span></div><div class=\"line\">    size = [<span class=\"keyword\">self</span>.contentView systemLayoutSizeFittingSize:<span class=\"built_in\">UILayoutFittingCompressedSize</span>];</div><div class=\"line\">    size.height += <span class=\"number\">1</span>;</div><div class=\"line\">    [<span class=\"keyword\">self</span>.contentView removeConstraint:tempWidthConstraint];</div><div class=\"line\">    <span class=\"keyword\">return</span> size;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">@end</span></div></pre></td></tr></table></figure>\n<p>另外在<code>&lt;UITableViewDelegate, UITableViewDataSource&gt;</code>中只写了1组，只有cell，没有header、footer的情况，如果需要，炮制即可。</p>\n<p>说一下这个其中的<code>ktj_cacheHeightCellForReuseIDFA:</code>类别方法。这个方法是为了算高进行缓存的一个cell，这个cell保存在 <code>NSCache</code>中。所以为了统一，需要在数据初始化时候注册所有的cell。当然你也可以根据类名直接生成，这个自主决定。</p>\n<p>说到算高，需要说一下这其中的<code>dequeueReusableCellWithIdentifier:</code>方法。该方法是从tableView的缓存池中取出指定ID的cell。请注意是 <strong>取出</strong> ，并且<code>UITableView</code>并没有暴露出如何放进缓存池，也没有必要暴露出放进缓存池的方法。而且<code>UITableView</code>只有一个地方能够接收Cell那就是<code>tableView:cellForRowAtIndexPath:</code>。所以请保证<code>dequeueReusableCellWithIdentifier:</code>取出的方法 <strong>需要通过<code>tableView:cellForRowAtIndexPath:</code>返回给<code>UITableView</code></strong> 。这就是我上面说的<code>ktj_cacheHeightCellForReuseIDFA:</code>方法为何要做一个 cache去缓存我取出的cell，目的是为了减少cell的浪费。</p>\n<p>同理，对于<code>UITableView</code>的<code>headerView</code>、<code>footerView</code>来说，可以炮制以上协议、方法。不再赘述</p>\n<p>PS.</p>\n<ol>\n<li><a href=\"https://github.com/forkingdog/UITableView-FDTemplateLayoutCell\">UITableView-FDTemplateLayoutCell</a>: <a href=\"https://github.com/sunnyxx\">sunnyxx</a>打造的优化UITableView的一个库，6000的star，很赞。</li>\n</ol>\n<h1 id=\"规范化的代码风格\"><a href=\"#规范化的代码风格\" class=\"headerlink\" title=\"规范化的代码风格\"></a>规范化的代码风格</h1><p>对于多人开发，最崩溃的事情就要数去读别人的代码。就算不是多人开发，接手别人的代码也是让人最崩溃的事情。如果有不用考虑这件事的叫我！</p>\n<p>不同的公司可以有不同的代码风格，但是一个公司的代码风格需要保持一致，这样就不会出现一人请假，无人能接受项目的尴尬局面，就算能接，也是需要为了加一个逻辑判断，需要花费很大的精力去处理。</p>\n<p>至于其中的代码不统一的坑，恐怕要等踩过才知道吧😂。</p>\n<h1 id=\"业务逻辑的拆分\"><a href=\"#业务逻辑的拆分\" class=\"headerlink\" title=\"业务逻辑的拆分\"></a>业务逻辑的拆分</h1><p>对于复杂的业务逻辑，对其拆分是非常重要的，不拆分很可能写出来的代码一个文件 &gt;1000 行。复杂的业务逻辑对于写出来需要一气呵成，修改起来也就出现了牵一发动全身(虽然拆分完成之后可能也会关键逻辑代码不可拆分，但是会好很多)。</p>\n<h2 id=\"筛选重构\"><a href=\"#筛选重构\" class=\"headerlink\" title=\"筛选重构\"></a>筛选重构</h2><p>筛选主要处理的是筛选项，针对众多筛选条件拆分为不同的业务逻辑模块是必须的。遵照拆分的原则，于是乎根据UI划分出来位置、价格、户型、筛选、排序这么几个模块。针对每个模块自行处理选中数据、UI展示。对外只暴露选中项输入和选中回调。</p>\n<p>对于每个数据大致都可分为一个列表，然后可选中1项或多项。于是乎，这个代码如果不拉出来是要写好多次的，拉出来，但是选中需要把选中的逻辑扔出来，方便自定义。</p>\n<h2 id=\"地图踩坑\"><a href=\"#地图踩坑\" class=\"headerlink\" title=\"地图踩坑\"></a>地图踩坑</h2>"},{"title":"DEBUG - swift中取出通知中的frame","date":"2016-11-30T16:00:00.000Z","_content":"\nswift中获取OC存储的Frame两种获取方案。\n\n<!--more-->\n\n# Swift下在Notification.userInfo取Frame，Debug和Release情况下还不一样。。\n  -->更新于2016.12.1\n  \n  __ Version 8.1 (8B62) __\n\n  ``` swift\n    func keyboardShow(sender: Notification) {\n        var endFrame = CGRect.zero        \n        if let frame = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? CGRect {\n            endFrame = frame\n            //  *** Debug是可以通过的。但是Release无法通过。\n            NSLog(\"<<<INFO>>>: as CGRect\")\n        } else if let value = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? NSValue {\n            endFrame = value.cgRectValue\n            //  *** Release会取出NSValue\n            NSLog(\"<<<INFO>>>: as NSValue\")\n        }\n\n  ```\n\n  由于Release无法调试，所以费了不少劲。首先Swift中的字典已经可以存放值类型，其本身也是值类型。所以我首先选择了第一种写法`let frame = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? CGRect`, 但是Release情况下却发生解包失败的情况。所以采用OC的传统写法`let value = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? NSValue`。就能解析出来。但是总感觉OC的方法不够swift😂。。。\n\n  有同事直接强制转换为NSValue是没有问题的，于是乎试了一下，发现直接校验NSValue就可以。但是swift中感觉不应该有这个转换了，毕竟本身就可以存储CGRect..\n\n  猜测原因：目前阶段Swift的字典和OC的字典数据结构还并未完全一致。。\n\n","source":"_posts/debug-swift-notifa-frame.md","raw":"---\ntitle: DEBUG - swift中取出通知中的frame\ndate: 2016-12-01\ntags: \ncategories:\n    - DEBUG\n---\n\nswift中获取OC存储的Frame两种获取方案。\n\n<!--more-->\n\n# Swift下在Notification.userInfo取Frame，Debug和Release情况下还不一样。。\n  -->更新于2016.12.1\n  \n  __ Version 8.1 (8B62) __\n\n  ``` swift\n    func keyboardShow(sender: Notification) {\n        var endFrame = CGRect.zero        \n        if let frame = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? CGRect {\n            endFrame = frame\n            //  *** Debug是可以通过的。但是Release无法通过。\n            NSLog(\"<<<INFO>>>: as CGRect\")\n        } else if let value = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? NSValue {\n            endFrame = value.cgRectValue\n            //  *** Release会取出NSValue\n            NSLog(\"<<<INFO>>>: as NSValue\")\n        }\n\n  ```\n\n  由于Release无法调试，所以费了不少劲。首先Swift中的字典已经可以存放值类型，其本身也是值类型。所以我首先选择了第一种写法`let frame = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? CGRect`, 但是Release情况下却发生解包失败的情况。所以采用OC的传统写法`let value = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? NSValue`。就能解析出来。但是总感觉OC的方法不够swift😂。。。\n\n  有同事直接强制转换为NSValue是没有问题的，于是乎试了一下，发现直接校验NSValue就可以。但是swift中感觉不应该有这个转换了，毕竟本身就可以存储CGRect..\n\n  猜测原因：目前阶段Swift的字典和OC的字典数据结构还并未完全一致。。\n\n","slug":"debug-swift-notifa-frame","published":1,"updated":"2016-12-30T11:18:29.000Z","_id":"cixbaqyml0007cb6ab5i3pjsp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>swift中获取OC存储的Frame两种获取方案。</p>\n<a id=\"more\"></a>\n<h1 id=\"Swift下在Notification-userInfo取Frame，Debug和Release情况下还不一样。。\"><a href=\"#Swift下在Notification-userInfo取Frame，Debug和Release情况下还不一样。。\" class=\"headerlink\" title=\"Swift下在Notification.userInfo取Frame，Debug和Release情况下还不一样。。\"></a>Swift下在Notification.userInfo取Frame，Debug和Release情况下还不一样。。</h1><p>  –&gt;更新于2016.12.1</p>\n<p>  <strong> Version 8.1 (8B62) </strong></p>\n  <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">keyboardShow</span><span class=\"params\">(sender: Notification)</span></span> &#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> endFrame = <span class=\"type\">CGRect</span>.zero        </div><div class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> frame = sender.userInfo?[<span class=\"type\">UIKeyboardFrameEndUserInfoKey</span>] <span class=\"keyword\">as</span>? <span class=\"type\">CGRect</span> &#123;</div><div class=\"line\">        endFrame = frame</div><div class=\"line\">        <span class=\"comment\">//  *** Debug是可以通过的。但是Release无法通过。</span></div><div class=\"line\">        <span class=\"type\">NSLog</span>(<span class=\"string\">\"&lt;&lt;&lt;INFO&gt;&gt;&gt;: as CGRect\"</span>)</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> value = sender.userInfo?[<span class=\"type\">UIKeyboardFrameEndUserInfoKey</span>] <span class=\"keyword\">as</span>? <span class=\"type\">NSValue</span> &#123;</div><div class=\"line\">        endFrame = value.cgRectValue</div><div class=\"line\">        <span class=\"comment\">//  *** Release会取出NSValue</span></div><div class=\"line\">        <span class=\"type\">NSLog</span>(<span class=\"string\">\"&lt;&lt;&lt;INFO&gt;&gt;&gt;: as NSValue\"</span>)</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>  由于Release无法调试，所以费了不少劲。首先Swift中的字典已经可以存放值类型，其本身也是值类型。所以我首先选择了第一种写法<code>let frame = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? CGRect</code>, 但是Release情况下却发生解包失败的情况。所以采用OC的传统写法<code>let value = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? NSValue</code>。就能解析出来。但是总感觉OC的方法不够swift😂。。。</p>\n<p>  有同事直接强制转换为NSValue是没有问题的，于是乎试了一下，发现直接校验NSValue就可以。但是swift中感觉不应该有这个转换了，毕竟本身就可以存储CGRect..</p>\n<p>  猜测原因：目前阶段Swift的字典和OC的字典数据结构还并未完全一致。。</p>\n","excerpt":"<p>swift中获取OC存储的Frame两种获取方案。</p>","more":"<h1 id=\"Swift下在Notification-userInfo取Frame，Debug和Release情况下还不一样。。\"><a href=\"#Swift下在Notification-userInfo取Frame，Debug和Release情况下还不一样。。\" class=\"headerlink\" title=\"Swift下在Notification.userInfo取Frame，Debug和Release情况下还不一样。。\"></a>Swift下在Notification.userInfo取Frame，Debug和Release情况下还不一样。。</h1><p>  –&gt;更新于2016.12.1</p>\n<p>  <strong> Version 8.1 (8B62) </strong></p>\n  <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">keyboardShow</span><span class=\"params\">(sender: Notification)</span></span> &#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> endFrame = <span class=\"type\">CGRect</span>.zero        </div><div class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> frame = sender.userInfo?[<span class=\"type\">UIKeyboardFrameEndUserInfoKey</span>] <span class=\"keyword\">as</span>? <span class=\"type\">CGRect</span> &#123;</div><div class=\"line\">        endFrame = frame</div><div class=\"line\">        <span class=\"comment\">//  *** Debug是可以通过的。但是Release无法通过。</span></div><div class=\"line\">        <span class=\"type\">NSLog</span>(<span class=\"string\">\"&lt;&lt;&lt;INFO&gt;&gt;&gt;: as CGRect\"</span>)</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> value = sender.userInfo?[<span class=\"type\">UIKeyboardFrameEndUserInfoKey</span>] <span class=\"keyword\">as</span>? <span class=\"type\">NSValue</span> &#123;</div><div class=\"line\">        endFrame = value.cgRectValue</div><div class=\"line\">        <span class=\"comment\">//  *** Release会取出NSValue</span></div><div class=\"line\">        <span class=\"type\">NSLog</span>(<span class=\"string\">\"&lt;&lt;&lt;INFO&gt;&gt;&gt;: as NSValue\"</span>)</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>  由于Release无法调试，所以费了不少劲。首先Swift中的字典已经可以存放值类型，其本身也是值类型。所以我首先选择了第一种写法<code>let frame = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? CGRect</code>, 但是Release情况下却发生解包失败的情况。所以采用OC的传统写法<code>let value = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? NSValue</code>。就能解析出来。但是总感觉OC的方法不够swift😂。。。</p>\n<p>  有同事直接强制转换为NSValue是没有问题的，于是乎试了一下，发现直接校验NSValue就可以。但是swift中感觉不应该有这个转换了，毕竟本身就可以存储CGRect..</p>\n<p>  猜测原因：目前阶段Swift的字典和OC的字典数据结构还并未完全一致。。</p>"},{"title":"DEBUG - UIView.h#190","date":"2016-10-11T04:43:22.000Z","_content":"\nCRASH:\n`void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)()`\n\n<!--more-->\n\n# UIView.m:190 - UIViewReportBrokenSuperviewChain\n\n## 异常信息：\n  ```\n  *** Assertion failure in void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)(), /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3599.6.1/UIView.m:190\n  invalid mode 'kCFRunLoopCommonModes' provided to CFRunLoopRunSpecific - break on _CFRunLoopError_RunCalledWithInvalidMode to debug. This message will only appear once per execution.\n  libc++abi.dylib: terminate_handler unexpectedly threw an exception\n  ```\n\n## 异常分析\n  APP crash在\n  ```\n  [keyWindow addSubview:weakSelf];\n  ```\n  [错误堆栈信息](#错误堆栈)。\n\n\n  但是真正造成crash的代码为：\n\n  ```\n  [self.layer insertSublayer:xxxView.layer atIndex:0];\n  ```\n  \n  \n  解决方案：\n  ```\n  [self layoutIfNeeded];\n  [self.layer insertSublayer:xxxView.layer atIndex:0];\n  ```\n  \n  原因分析：\n  下面这个说的很在理\n  > http://stackoverflow.com/questions/39565424/swift-uiviewreportbrokensuperviewchain-cause-by-layer-manipulation\n  >\n  > I had this issue with a library when moving over to Xcode 8 (Material-Controls-For-iOS - MDTextField). I found that the problem was coming from where the layer of one view (which had no superview) was being added to another.\n  >\n  > It looks like this may be the case for yourself also - your toolbar being created has not been added to a superview first. The fix I used was to add the view as a subview of the view that the layer was being added to, so in your case adding the toolbar as a subview of myModelView should stop the error.\n  \n\n## 碰到该问题的还有\n  - [Google出来的一个，但是并未看到相关回复。。。](http://technology.ezeenow.com/Posts/119474/Unity_Prime31_prompt_for_photo_is_crashing_on_iOS_10_and_XCode_8)\n  - [IOS10上崩溃错误“View has lost track of its superview, most (并未找到原贴)](http://www.th7.cn/Program/IOS/201609/975582.shtml)\n  - [stackoverflow(这个分析的很到位)](http://stackoverflow.com/questions/39565424/swift-uiviewreportbrokensuperviewchain-cause-by-layer-manipulation)\n\n## <a name=\"错误堆栈\">错误堆栈 <脱敏></a>\n\n  ```\n  *** Assertion failure in void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)(), /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3599.6.1/UIView.m:190\n  invalid mode 'kCFRunLoopCommonModes' provided to CFRunLoopRunSpecific - break on _CFRunLoopError_RunCalledWithInvalidMode to debug. This message will only appear once per execution.\n  libc++abi.dylib: terminate_handler unexpectedly threw an exception\n\n  (lldb) bt\n  * thread #1: tid = 0x87c18, 0x000000018238c524 libobjc.A.dylib`objc_exception_throw, queue = 'com.apple.main-thread', stop reason = breakpoint 1.2\n      frame #0: 0x000000018238c524 libobjc.A.dylib`objc_exception_throw\n      frame #1: 0x0000000183954094 CoreFoundation`+[NSException raise:format:arguments:] + 104\n      frame #2: 0x00000001843de898 Foundation`-[NSAssertionHandler handleFailureInFunction:file:lineNumber:description:] + 88\n      frame #3: 0x0000000189a7cf9c UIKit`UIViewReportBrokenSuperviewChain + 472\n      frame #4: 0x0000000189a7d658 UIKit`_UIViewTopDownSubtreeTraversal + 1496\n      frame #5: 0x000000018a0f3390 UIKit`-[UIView(UIConstraintBasedLayout_EngineDelegate) _invalidateSystemLayoutSizeFittingSizeAtEngineDelegateLevel] + 232\n      frame #6: 0x00000001843832ac Foundation`-[NSISEngine tryToAddConstraintWithMarker:expression:integralizationAdjustment:mutuallyExclusiveConstraints:] + 920\n      frame #7: 0x0000000184382dcc Foundation`-[NSLayoutConstraint _addLoweredExpression:toEngine:integralizationAdjustment:lastLoweredConstantWasRounded:mutuallyExclusiveConstraints:] + 284\n      frame #8: 0x00000001843809e0 Foundation`-[NSLayoutConstraint _addToEngine:integralizationAdjustment:mutuallyExclusiveConstraints:] + 272\n      frame #9: 0x000000018989cfdc UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 396\n      frame #10: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168\n      frame #11: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564\n      frame #12: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224\n      frame #13: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196\n      frame #14: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168\n      frame #15: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564\n      frame #16: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224\n      frame #17: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196\n      frame #18: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168\n      frame #19: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564\n      frame #20: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224\n      frame #21: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196\n      frame #22: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168\n      frame #23: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564\n      frame #24: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224\n      frame #25: 0x00000001898a4bb0 UIKit`-[UIWindow(UIConstraintBasedLayout) _switchToLayoutEngine:] + 72\n      frame #26: 0x00000001898a4b04 UIKit`-[UIWindow(UIConstraintBasedLayout) _initializeLayoutEngine] + 256\n      frame #27: 0x00000001898a4910 UIKit`-[UIView(UIConstraintBasedLayout) _layoutEngine_windowDidChange] + 132\n      frame #28: 0x00000001897996dc UIKit`-[UIView(Internal) _didMoveFromWindow:toWindow:] + 200\n      frame #29: 0x0000000189798d90 UIKit`__45-[UIView(Hierarchy) _postMovedFromSuperview:]_block_invoke + 156\n      frame #30: 0x0000000189798be8 UIKit`-[UIView(Hierarchy) _postMovedFromSuperview:] + 792\n      frame #31: 0x00000001897a4ad0 UIKit`-[UIView(Internal) _addSubview:positioned:relativeTo:] + 1788\n      frame #32: 0x00000001897a43bc UIKit`-[UIView(Hierarchy) addSubview:] + 828\n    * frame #33: 0x00000001004f78ec Project_ent`__31-[EsfCommentReportView show]_block_invoke((null)=<unavailable>) + 228 at EsfCommentReportView.m:293\n      frame #34: 0x00000001897d2b88 UIKit`+[UIView(UIViewAnimationWithBlocks) _setupAnimationWithDuration:delay:view:options:factory:animations:start:animationStateGenerator:completion:] + 660\n      frame #35: 0x00000001897d28e8 UIKit`+[UIView(UIViewAnimationWithBlocks) animateWithDuration:animations:] + 56\n      frame #36: 0x00000001004f77a0 Project_ent`-[EsfCommentReportView show](self=0x000000015fe32020, _cmd=\"show\") + 492 at EsfCommentReportView.m:291\n      frame #37: 0x0000000100858a04 Project_ent`__53-[BuyerAdviserProfileViewController reportAction:]_block_invoke((null)=<unavailable>) + 308 at BuyerAdviserProfileViewController.m:174\n      frame #38: 0x00000001003f93e4 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:sourceType:afterCheckOrLogin:cancelLogin:](self=MyLoginViewController, _cmd=\"ifShouldLoginFromViewController:sourceType:afterCheckOrLogin:cancelLogin:\", viewController=0x000000015fd2e320, sourceType=2, afterCheckOrLogin=0x00000001008588d0, cancelLogin=(null)) + 236 at MyLoginViewController.m:123\n      frame #39: 0x00000001003f92b0 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:afterCheckOrLogin:cancelLogin:](self=MyLoginViewController, _cmd=\"ifShouldLoginFromViewController:afterCheckOrLogin:cancelLogin:\", viewController=0x000000015fd2e320, afterCheckOrLogin=0x00000001008588d0, cancelLogin=(null)) + 156 at MyLoginViewController.m:114\n      frame #40: 0x00000001003f9124 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:afterCheckOrLogin:](self=MyLoginViewController, _cmd=\"ifShouldLoginFromViewController:afterCheckOrLogin:\", viewController=0x000000015fd2e320, afterCheckOrLogin=0x00000001008588d0) + 120 at MyLoginViewController.m:104\n      frame #41: 0x0000000100858870 Project_ent`-[BuyerAdviserProfileViewController reportAction:](self=0x000000015fd2e320, _cmd=\"reportAction:\", button=0x000000015fe26650) + 452 at BuyerAdviserProfileViewController.m:156\n      frame #42: 0x00000001897d27b0 UIKit`-[UIApplication sendAction:to:from:forEvent:] + 96\n      frame #43: 0x00000001897d2730 UIKit`-[UIControl sendAction:to:forEvent:] + 80\n      frame #44: 0x00000001897bcbe4 UIKit`-[UIControl _sendActionsForEvents:withEvent:] + 452\n      frame #45: 0x00000001897d201c UIKit`-[UIControl touchesEnded:withEvent:] + 584\n      frame #46: 0x00000001897d1b44 UIKit`-[UIWindow _sendTouchesForEvent:] + 2484\n      frame #47: 0x00000001897ccd8c UIKit`-[UIWindow sendEvent:] + 2988\n      frame #48: 0x000000018979d858 UIKit`-[UIApplication sendEvent:] + 340\n      frame #49: 0x0000000189f8acb8 UIKit`__dispatchPreprocessedEventFromEventQueue + 2736\n      frame #50: 0x0000000189f84720 UIKit`__handleEventQueue + 784\n      frame #51: 0x0000000183902278 CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 24\n      frame #52: 0x0000000183901bc0 CoreFoundation`__CFRunLoopDoSources0 + 524\n      frame #53: 0x00000001838ff7c0 CoreFoundation`__CFRunLoopRun + 804\n      frame #54: 0x000000018382e048 CoreFoundation`CFRunLoopRunSpecific + 444\n      frame #55: 0x00000001852b1198 GraphicsServices`GSEventRunModal + 180\n      frame #56: 0x0000000189808628 UIKit`-[UIApplication _run] + 684\n      frame #57: 0x0000000189803360 UIKit`UIApplicationMain + 208\n      frame #58: 0x0000000100a3db78 Project_ent`main + 460 at main.swift:24\n      frame #59: 0x00000001828105b8 libdyld.dylib`start + 4\n  (lldb) \n  ```","source":"_posts/debug-uiview-m-190.md","raw":"---\ntitle: DEBUG - UIView.h#190\ndate: 2016-10-11 12:43:22\ntags: \ncategories:\n    - DEBUG\n\n---\n\nCRASH:\n`void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)()`\n\n<!--more-->\n\n# UIView.m:190 - UIViewReportBrokenSuperviewChain\n\n## 异常信息：\n  ```\n  *** Assertion failure in void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)(), /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3599.6.1/UIView.m:190\n  invalid mode 'kCFRunLoopCommonModes' provided to CFRunLoopRunSpecific - break on _CFRunLoopError_RunCalledWithInvalidMode to debug. This message will only appear once per execution.\n  libc++abi.dylib: terminate_handler unexpectedly threw an exception\n  ```\n\n## 异常分析\n  APP crash在\n  ```\n  [keyWindow addSubview:weakSelf];\n  ```\n  [错误堆栈信息](#错误堆栈)。\n\n\n  但是真正造成crash的代码为：\n\n  ```\n  [self.layer insertSublayer:xxxView.layer atIndex:0];\n  ```\n  \n  \n  解决方案：\n  ```\n  [self layoutIfNeeded];\n  [self.layer insertSublayer:xxxView.layer atIndex:0];\n  ```\n  \n  原因分析：\n  下面这个说的很在理\n  > http://stackoverflow.com/questions/39565424/swift-uiviewreportbrokensuperviewchain-cause-by-layer-manipulation\n  >\n  > I had this issue with a library when moving over to Xcode 8 (Material-Controls-For-iOS - MDTextField). I found that the problem was coming from where the layer of one view (which had no superview) was being added to another.\n  >\n  > It looks like this may be the case for yourself also - your toolbar being created has not been added to a superview first. The fix I used was to add the view as a subview of the view that the layer was being added to, so in your case adding the toolbar as a subview of myModelView should stop the error.\n  \n\n## 碰到该问题的还有\n  - [Google出来的一个，但是并未看到相关回复。。。](http://technology.ezeenow.com/Posts/119474/Unity_Prime31_prompt_for_photo_is_crashing_on_iOS_10_and_XCode_8)\n  - [IOS10上崩溃错误“View has lost track of its superview, most (并未找到原贴)](http://www.th7.cn/Program/IOS/201609/975582.shtml)\n  - [stackoverflow(这个分析的很到位)](http://stackoverflow.com/questions/39565424/swift-uiviewreportbrokensuperviewchain-cause-by-layer-manipulation)\n\n## <a name=\"错误堆栈\">错误堆栈 <脱敏></a>\n\n  ```\n  *** Assertion failure in void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)(), /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3599.6.1/UIView.m:190\n  invalid mode 'kCFRunLoopCommonModes' provided to CFRunLoopRunSpecific - break on _CFRunLoopError_RunCalledWithInvalidMode to debug. This message will only appear once per execution.\n  libc++abi.dylib: terminate_handler unexpectedly threw an exception\n\n  (lldb) bt\n  * thread #1: tid = 0x87c18, 0x000000018238c524 libobjc.A.dylib`objc_exception_throw, queue = 'com.apple.main-thread', stop reason = breakpoint 1.2\n      frame #0: 0x000000018238c524 libobjc.A.dylib`objc_exception_throw\n      frame #1: 0x0000000183954094 CoreFoundation`+[NSException raise:format:arguments:] + 104\n      frame #2: 0x00000001843de898 Foundation`-[NSAssertionHandler handleFailureInFunction:file:lineNumber:description:] + 88\n      frame #3: 0x0000000189a7cf9c UIKit`UIViewReportBrokenSuperviewChain + 472\n      frame #4: 0x0000000189a7d658 UIKit`_UIViewTopDownSubtreeTraversal + 1496\n      frame #5: 0x000000018a0f3390 UIKit`-[UIView(UIConstraintBasedLayout_EngineDelegate) _invalidateSystemLayoutSizeFittingSizeAtEngineDelegateLevel] + 232\n      frame #6: 0x00000001843832ac Foundation`-[NSISEngine tryToAddConstraintWithMarker:expression:integralizationAdjustment:mutuallyExclusiveConstraints:] + 920\n      frame #7: 0x0000000184382dcc Foundation`-[NSLayoutConstraint _addLoweredExpression:toEngine:integralizationAdjustment:lastLoweredConstantWasRounded:mutuallyExclusiveConstraints:] + 284\n      frame #8: 0x00000001843809e0 Foundation`-[NSLayoutConstraint _addToEngine:integralizationAdjustment:mutuallyExclusiveConstraints:] + 272\n      frame #9: 0x000000018989cfdc UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 396\n      frame #10: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168\n      frame #11: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564\n      frame #12: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224\n      frame #13: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196\n      frame #14: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168\n      frame #15: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564\n      frame #16: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224\n      frame #17: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196\n      frame #18: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168\n      frame #19: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564\n      frame #20: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224\n      frame #21: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196\n      frame #22: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168\n      frame #23: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564\n      frame #24: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224\n      frame #25: 0x00000001898a4bb0 UIKit`-[UIWindow(UIConstraintBasedLayout) _switchToLayoutEngine:] + 72\n      frame #26: 0x00000001898a4b04 UIKit`-[UIWindow(UIConstraintBasedLayout) _initializeLayoutEngine] + 256\n      frame #27: 0x00000001898a4910 UIKit`-[UIView(UIConstraintBasedLayout) _layoutEngine_windowDidChange] + 132\n      frame #28: 0x00000001897996dc UIKit`-[UIView(Internal) _didMoveFromWindow:toWindow:] + 200\n      frame #29: 0x0000000189798d90 UIKit`__45-[UIView(Hierarchy) _postMovedFromSuperview:]_block_invoke + 156\n      frame #30: 0x0000000189798be8 UIKit`-[UIView(Hierarchy) _postMovedFromSuperview:] + 792\n      frame #31: 0x00000001897a4ad0 UIKit`-[UIView(Internal) _addSubview:positioned:relativeTo:] + 1788\n      frame #32: 0x00000001897a43bc UIKit`-[UIView(Hierarchy) addSubview:] + 828\n    * frame #33: 0x00000001004f78ec Project_ent`__31-[EsfCommentReportView show]_block_invoke((null)=<unavailable>) + 228 at EsfCommentReportView.m:293\n      frame #34: 0x00000001897d2b88 UIKit`+[UIView(UIViewAnimationWithBlocks) _setupAnimationWithDuration:delay:view:options:factory:animations:start:animationStateGenerator:completion:] + 660\n      frame #35: 0x00000001897d28e8 UIKit`+[UIView(UIViewAnimationWithBlocks) animateWithDuration:animations:] + 56\n      frame #36: 0x00000001004f77a0 Project_ent`-[EsfCommentReportView show](self=0x000000015fe32020, _cmd=\"show\") + 492 at EsfCommentReportView.m:291\n      frame #37: 0x0000000100858a04 Project_ent`__53-[BuyerAdviserProfileViewController reportAction:]_block_invoke((null)=<unavailable>) + 308 at BuyerAdviserProfileViewController.m:174\n      frame #38: 0x00000001003f93e4 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:sourceType:afterCheckOrLogin:cancelLogin:](self=MyLoginViewController, _cmd=\"ifShouldLoginFromViewController:sourceType:afterCheckOrLogin:cancelLogin:\", viewController=0x000000015fd2e320, sourceType=2, afterCheckOrLogin=0x00000001008588d0, cancelLogin=(null)) + 236 at MyLoginViewController.m:123\n      frame #39: 0x00000001003f92b0 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:afterCheckOrLogin:cancelLogin:](self=MyLoginViewController, _cmd=\"ifShouldLoginFromViewController:afterCheckOrLogin:cancelLogin:\", viewController=0x000000015fd2e320, afterCheckOrLogin=0x00000001008588d0, cancelLogin=(null)) + 156 at MyLoginViewController.m:114\n      frame #40: 0x00000001003f9124 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:afterCheckOrLogin:](self=MyLoginViewController, _cmd=\"ifShouldLoginFromViewController:afterCheckOrLogin:\", viewController=0x000000015fd2e320, afterCheckOrLogin=0x00000001008588d0) + 120 at MyLoginViewController.m:104\n      frame #41: 0x0000000100858870 Project_ent`-[BuyerAdviserProfileViewController reportAction:](self=0x000000015fd2e320, _cmd=\"reportAction:\", button=0x000000015fe26650) + 452 at BuyerAdviserProfileViewController.m:156\n      frame #42: 0x00000001897d27b0 UIKit`-[UIApplication sendAction:to:from:forEvent:] + 96\n      frame #43: 0x00000001897d2730 UIKit`-[UIControl sendAction:to:forEvent:] + 80\n      frame #44: 0x00000001897bcbe4 UIKit`-[UIControl _sendActionsForEvents:withEvent:] + 452\n      frame #45: 0x00000001897d201c UIKit`-[UIControl touchesEnded:withEvent:] + 584\n      frame #46: 0x00000001897d1b44 UIKit`-[UIWindow _sendTouchesForEvent:] + 2484\n      frame #47: 0x00000001897ccd8c UIKit`-[UIWindow sendEvent:] + 2988\n      frame #48: 0x000000018979d858 UIKit`-[UIApplication sendEvent:] + 340\n      frame #49: 0x0000000189f8acb8 UIKit`__dispatchPreprocessedEventFromEventQueue + 2736\n      frame #50: 0x0000000189f84720 UIKit`__handleEventQueue + 784\n      frame #51: 0x0000000183902278 CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 24\n      frame #52: 0x0000000183901bc0 CoreFoundation`__CFRunLoopDoSources0 + 524\n      frame #53: 0x00000001838ff7c0 CoreFoundation`__CFRunLoopRun + 804\n      frame #54: 0x000000018382e048 CoreFoundation`CFRunLoopRunSpecific + 444\n      frame #55: 0x00000001852b1198 GraphicsServices`GSEventRunModal + 180\n      frame #56: 0x0000000189808628 UIKit`-[UIApplication _run] + 684\n      frame #57: 0x0000000189803360 UIKit`UIApplicationMain + 208\n      frame #58: 0x0000000100a3db78 Project_ent`main + 460 at main.swift:24\n      frame #59: 0x00000001828105b8 libdyld.dylib`start + 4\n  (lldb) \n  ```","slug":"debug-uiview-m-190","published":1,"updated":"2016-12-30T11:19:29.000Z","_id":"cixbaqymp0009cb6adqrtawap","comments":1,"layout":"post","photos":[],"link":"","content":"<p>CRASH:<br><code>void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)()</code></p>\n<a id=\"more\"></a>\n<h1 id=\"UIView-m-190-UIViewReportBrokenSuperviewChain\"><a href=\"#UIView-m-190-UIViewReportBrokenSuperviewChain\" class=\"headerlink\" title=\"UIView.m:190 - UIViewReportBrokenSuperviewChain\"></a>UIView.m:190 - UIViewReportBrokenSuperviewChain</h1><h2 id=\"异常信息：\"><a href=\"#异常信息：\" class=\"headerlink\" title=\"异常信息：\"></a>异常信息：</h2>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">*** Assertion failure in void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)(), /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3599.6.1/UIView.m:190</div><div class=\"line\">invalid mode &apos;kCFRunLoopCommonModes&apos; provided to CFRunLoopRunSpecific - break on _CFRunLoopError_RunCalledWithInvalidMode to debug. This message will only appear once per execution.</div><div class=\"line\">libc++abi.dylib: terminate_handler unexpectedly threw an exception</div></pre></td></tr></table></figure>\n<h2 id=\"异常分析\"><a href=\"#异常分析\" class=\"headerlink\" title=\"异常分析\"></a>异常分析</h2><p>  APP crash在<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[keyWindow addSubview:weakSelf];</div></pre></td></tr></table></figure></p>\n<p>  <a href=\"#错误堆栈\">错误堆栈信息</a>。</p>\n<p>  但是真正造成crash的代码为：</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[self.layer insertSublayer:xxxView.layer atIndex:0];</div></pre></td></tr></table></figure>\n<p>  解决方案：<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[self layoutIfNeeded];</div><div class=\"line\">[self.layer insertSublayer:xxxView.layer atIndex:0];</div></pre></td></tr></table></figure></p>\n<p>  原因分析：<br>  下面这个说的很在理</p>\n<blockquote>\n<p><a href=\"http://stackoverflow.com/questions/39565424/swift-uiviewreportbrokensuperviewchain-cause-by-layer-manipulation\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/39565424/swift-uiviewreportbrokensuperviewchain-cause-by-layer-manipulation</a></p>\n<p>I had this issue with a library when moving over to Xcode 8 (Material-Controls-For-iOS - MDTextField). I found that the problem was coming from where the layer of one view (which had no superview) was being added to another.</p>\n<p>It looks like this may be the case for yourself also - your toolbar being created has not been added to a superview first. The fix I used was to add the view as a subview of the view that the layer was being added to, so in your case adding the toolbar as a subview of myModelView should stop the error.</p>\n</blockquote>\n<h2 id=\"碰到该问题的还有\"><a href=\"#碰到该问题的还有\" class=\"headerlink\" title=\"碰到该问题的还有\"></a>碰到该问题的还有</h2><ul>\n<li><a href=\"http://technology.ezeenow.com/Posts/119474/Unity_Prime31_prompt_for_photo_is_crashing_on_iOS_10_and_XCode_8\" target=\"_blank\" rel=\"external\">Google出来的一个，但是并未看到相关回复。。。</a></li>\n<li><a href=\"http://www.th7.cn/Program/IOS/201609/975582.shtml\" target=\"_blank\" rel=\"external\">IOS10上崩溃错误“View has lost track of its superview, most (并未找到原贴)</a></li>\n<li><a href=\"http://stackoverflow.com/questions/39565424/swift-uiviewreportbrokensuperviewchain-cause-by-layer-manipulation\" target=\"_blank\" rel=\"external\">stackoverflow(这个分析的很到位)</a></li>\n</ul>\n<h2 id=\"错误堆栈-lt-脱敏-gt\"><a href=\"#错误堆栈-lt-脱敏-gt\" class=\"headerlink\" title=\"错误堆栈 &lt;脱敏&gt;\"></a><a name=\"错误堆栈\">错误堆栈 &lt;脱敏&gt;</a></h2>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\">*** Assertion failure in void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)(), /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3599.6.1/UIView.m:190</div><div class=\"line\">invalid mode &apos;kCFRunLoopCommonModes&apos; provided to CFRunLoopRunSpecific - break on _CFRunLoopError_RunCalledWithInvalidMode to debug. This message will only appear once per execution.</div><div class=\"line\">libc++abi.dylib: terminate_handler unexpectedly threw an exception</div><div class=\"line\"></div><div class=\"line\">(lldb) bt</div><div class=\"line\">* thread #1: tid = 0x87c18, 0x000000018238c524 libobjc.A.dylib`objc_exception_throw, queue = &apos;com.apple.main-thread&apos;, stop reason = breakpoint 1.2</div><div class=\"line\">    frame #0: 0x000000018238c524 libobjc.A.dylib`objc_exception_throw</div><div class=\"line\">    frame #1: 0x0000000183954094 CoreFoundation`+[NSException raise:format:arguments:] + 104</div><div class=\"line\">    frame #2: 0x00000001843de898 Foundation`-[NSAssertionHandler handleFailureInFunction:file:lineNumber:description:] + 88</div><div class=\"line\">    frame #3: 0x0000000189a7cf9c UIKit`UIViewReportBrokenSuperviewChain + 472</div><div class=\"line\">    frame #4: 0x0000000189a7d658 UIKit`_UIViewTopDownSubtreeTraversal + 1496</div><div class=\"line\">    frame #5: 0x000000018a0f3390 UIKit`-[UIView(UIConstraintBasedLayout_EngineDelegate) _invalidateSystemLayoutSizeFittingSizeAtEngineDelegateLevel] + 232</div><div class=\"line\">    frame #6: 0x00000001843832ac Foundation`-[NSISEngine tryToAddConstraintWithMarker:expression:integralizationAdjustment:mutuallyExclusiveConstraints:] + 920</div><div class=\"line\">    frame #7: 0x0000000184382dcc Foundation`-[NSLayoutConstraint _addLoweredExpression:toEngine:integralizationAdjustment:lastLoweredConstantWasRounded:mutuallyExclusiveConstraints:] + 284</div><div class=\"line\">    frame #8: 0x00000001843809e0 Foundation`-[NSLayoutConstraint _addToEngine:integralizationAdjustment:mutuallyExclusiveConstraints:] + 272</div><div class=\"line\">    frame #9: 0x000000018989cfdc UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 396</div><div class=\"line\">    frame #10: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168</div><div class=\"line\">    frame #11: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564</div><div class=\"line\">    frame #12: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224</div><div class=\"line\">    frame #13: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196</div><div class=\"line\">    frame #14: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168</div><div class=\"line\">    frame #15: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564</div><div class=\"line\">    frame #16: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224</div><div class=\"line\">    frame #17: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196</div><div class=\"line\">    frame #18: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168</div><div class=\"line\">    frame #19: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564</div><div class=\"line\">    frame #20: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224</div><div class=\"line\">    frame #21: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196</div><div class=\"line\">    frame #22: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168</div><div class=\"line\">    frame #23: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564</div><div class=\"line\">    frame #24: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224</div><div class=\"line\">    frame #25: 0x00000001898a4bb0 UIKit`-[UIWindow(UIConstraintBasedLayout) _switchToLayoutEngine:] + 72</div><div class=\"line\">    frame #26: 0x00000001898a4b04 UIKit`-[UIWindow(UIConstraintBasedLayout) _initializeLayoutEngine] + 256</div><div class=\"line\">    frame #27: 0x00000001898a4910 UIKit`-[UIView(UIConstraintBasedLayout) _layoutEngine_windowDidChange] + 132</div><div class=\"line\">    frame #28: 0x00000001897996dc UIKit`-[UIView(Internal) _didMoveFromWindow:toWindow:] + 200</div><div class=\"line\">    frame #29: 0x0000000189798d90 UIKit`__45-[UIView(Hierarchy) _postMovedFromSuperview:]_block_invoke + 156</div><div class=\"line\">    frame #30: 0x0000000189798be8 UIKit`-[UIView(Hierarchy) _postMovedFromSuperview:] + 792</div><div class=\"line\">    frame #31: 0x00000001897a4ad0 UIKit`-[UIView(Internal) _addSubview:positioned:relativeTo:] + 1788</div><div class=\"line\">    frame #32: 0x00000001897a43bc UIKit`-[UIView(Hierarchy) addSubview:] + 828</div><div class=\"line\">  * frame #33: 0x00000001004f78ec Project_ent`__31-[EsfCommentReportView show]_block_invoke((null)=&lt;unavailable&gt;) + 228 at EsfCommentReportView.m:293</div><div class=\"line\">    frame #34: 0x00000001897d2b88 UIKit`+[UIView(UIViewAnimationWithBlocks) _setupAnimationWithDuration:delay:view:options:factory:animations:start:animationStateGenerator:completion:] + 660</div><div class=\"line\">    frame #35: 0x00000001897d28e8 UIKit`+[UIView(UIViewAnimationWithBlocks) animateWithDuration:animations:] + 56</div><div class=\"line\">    frame #36: 0x00000001004f77a0 Project_ent`-[EsfCommentReportView show](self=0x000000015fe32020, _cmd=&quot;show&quot;) + 492 at EsfCommentReportView.m:291</div><div class=\"line\">    frame #37: 0x0000000100858a04 Project_ent`__53-[BuyerAdviserProfileViewController reportAction:]_block_invoke((null)=&lt;unavailable&gt;) + 308 at BuyerAdviserProfileViewController.m:174</div><div class=\"line\">    frame #38: 0x00000001003f93e4 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:sourceType:afterCheckOrLogin:cancelLogin:](self=MyLoginViewController, _cmd=&quot;ifShouldLoginFromViewController:sourceType:afterCheckOrLogin:cancelLogin:&quot;, viewController=0x000000015fd2e320, sourceType=2, afterCheckOrLogin=0x00000001008588d0, cancelLogin=(null)) + 236 at MyLoginViewController.m:123</div><div class=\"line\">    frame #39: 0x00000001003f92b0 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:afterCheckOrLogin:cancelLogin:](self=MyLoginViewController, _cmd=&quot;ifShouldLoginFromViewController:afterCheckOrLogin:cancelLogin:&quot;, viewController=0x000000015fd2e320, afterCheckOrLogin=0x00000001008588d0, cancelLogin=(null)) + 156 at MyLoginViewController.m:114</div><div class=\"line\">    frame #40: 0x00000001003f9124 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:afterCheckOrLogin:](self=MyLoginViewController, _cmd=&quot;ifShouldLoginFromViewController:afterCheckOrLogin:&quot;, viewController=0x000000015fd2e320, afterCheckOrLogin=0x00000001008588d0) + 120 at MyLoginViewController.m:104</div><div class=\"line\">    frame #41: 0x0000000100858870 Project_ent`-[BuyerAdviserProfileViewController reportAction:](self=0x000000015fd2e320, _cmd=&quot;reportAction:&quot;, button=0x000000015fe26650) + 452 at BuyerAdviserProfileViewController.m:156</div><div class=\"line\">    frame #42: 0x00000001897d27b0 UIKit`-[UIApplication sendAction:to:from:forEvent:] + 96</div><div class=\"line\">    frame #43: 0x00000001897d2730 UIKit`-[UIControl sendAction:to:forEvent:] + 80</div><div class=\"line\">    frame #44: 0x00000001897bcbe4 UIKit`-[UIControl _sendActionsForEvents:withEvent:] + 452</div><div class=\"line\">    frame #45: 0x00000001897d201c UIKit`-[UIControl touchesEnded:withEvent:] + 584</div><div class=\"line\">    frame #46: 0x00000001897d1b44 UIKit`-[UIWindow _sendTouchesForEvent:] + 2484</div><div class=\"line\">    frame #47: 0x00000001897ccd8c UIKit`-[UIWindow sendEvent:] + 2988</div><div class=\"line\">    frame #48: 0x000000018979d858 UIKit`-[UIApplication sendEvent:] + 340</div><div class=\"line\">    frame #49: 0x0000000189f8acb8 UIKit`__dispatchPreprocessedEventFromEventQueue + 2736</div><div class=\"line\">    frame #50: 0x0000000189f84720 UIKit`__handleEventQueue + 784</div><div class=\"line\">    frame #51: 0x0000000183902278 CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 24</div><div class=\"line\">    frame #52: 0x0000000183901bc0 CoreFoundation`__CFRunLoopDoSources0 + 524</div><div class=\"line\">    frame #53: 0x00000001838ff7c0 CoreFoundation`__CFRunLoopRun + 804</div><div class=\"line\">    frame #54: 0x000000018382e048 CoreFoundation`CFRunLoopRunSpecific + 444</div><div class=\"line\">    frame #55: 0x00000001852b1198 GraphicsServices`GSEventRunModal + 180</div><div class=\"line\">    frame #56: 0x0000000189808628 UIKit`-[UIApplication _run] + 684</div><div class=\"line\">    frame #57: 0x0000000189803360 UIKit`UIApplicationMain + 208</div><div class=\"line\">    frame #58: 0x0000000100a3db78 Project_ent`main + 460 at main.swift:24</div><div class=\"line\">    frame #59: 0x00000001828105b8 libdyld.dylib`start + 4</div><div class=\"line\">(lldb)</div></pre></td></tr></table></figure>","excerpt":"<p>CRASH:<br><code>void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)()</code></p>","more":"<h1 id=\"UIView-m-190-UIViewReportBrokenSuperviewChain\"><a href=\"#UIView-m-190-UIViewReportBrokenSuperviewChain\" class=\"headerlink\" title=\"UIView.m:190 - UIViewReportBrokenSuperviewChain\"></a>UIView.m:190 - UIViewReportBrokenSuperviewChain</h1><h2 id=\"异常信息：\"><a href=\"#异常信息：\" class=\"headerlink\" title=\"异常信息：\"></a>异常信息：</h2>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">*** Assertion failure in void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)(), /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3599.6.1/UIView.m:190</div><div class=\"line\">invalid mode &apos;kCFRunLoopCommonModes&apos; provided to CFRunLoopRunSpecific - break on _CFRunLoopError_RunCalledWithInvalidMode to debug. This message will only appear once per execution.</div><div class=\"line\">libc++abi.dylib: terminate_handler unexpectedly threw an exception</div></pre></td></tr></table></figure>\n<h2 id=\"异常分析\"><a href=\"#异常分析\" class=\"headerlink\" title=\"异常分析\"></a>异常分析</h2><p>  APP crash在<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[keyWindow addSubview:weakSelf];</div></pre></td></tr></table></figure></p>\n<p>  <a href=\"#错误堆栈\">错误堆栈信息</a>。</p>\n<p>  但是真正造成crash的代码为：</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[self.layer insertSublayer:xxxView.layer atIndex:0];</div></pre></td></tr></table></figure>\n<p>  解决方案：<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[self layoutIfNeeded];</div><div class=\"line\">[self.layer insertSublayer:xxxView.layer atIndex:0];</div></pre></td></tr></table></figure></p>\n<p>  原因分析：<br>  下面这个说的很在理</p>\n<blockquote>\n<p><a href=\"http://stackoverflow.com/questions/39565424/swift-uiviewreportbrokensuperviewchain-cause-by-layer-manipulation\">http://stackoverflow.com/questions/39565424/swift-uiviewreportbrokensuperviewchain-cause-by-layer-manipulation</a></p>\n<p>I had this issue with a library when moving over to Xcode 8 (Material-Controls-For-iOS - MDTextField). I found that the problem was coming from where the layer of one view (which had no superview) was being added to another.</p>\n<p>It looks like this may be the case for yourself also - your toolbar being created has not been added to a superview first. The fix I used was to add the view as a subview of the view that the layer was being added to, so in your case adding the toolbar as a subview of myModelView should stop the error.</p>\n</blockquote>\n<h2 id=\"碰到该问题的还有\"><a href=\"#碰到该问题的还有\" class=\"headerlink\" title=\"碰到该问题的还有\"></a>碰到该问题的还有</h2><ul>\n<li><a href=\"http://technology.ezeenow.com/Posts/119474/Unity_Prime31_prompt_for_photo_is_crashing_on_iOS_10_and_XCode_8\">Google出来的一个，但是并未看到相关回复。。。</a></li>\n<li><a href=\"http://www.th7.cn/Program/IOS/201609/975582.shtml\">IOS10上崩溃错误“View has lost track of its superview, most (并未找到原贴)</a></li>\n<li><a href=\"http://stackoverflow.com/questions/39565424/swift-uiviewreportbrokensuperviewchain-cause-by-layer-manipulation\">stackoverflow(这个分析的很到位)</a></li>\n</ul>\n<h2 id=\"错误堆栈-lt-脱敏-gt\"><a href=\"#错误堆栈-lt-脱敏-gt\" class=\"headerlink\" title=\"错误堆栈 &lt;脱敏&gt;\"></a><a name=\"错误堆栈\">错误堆栈 &lt;脱敏&gt;</a></h2>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\">*** Assertion failure in void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)(), /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3599.6.1/UIView.m:190</div><div class=\"line\">invalid mode &apos;kCFRunLoopCommonModes&apos; provided to CFRunLoopRunSpecific - break on _CFRunLoopError_RunCalledWithInvalidMode to debug. This message will only appear once per execution.</div><div class=\"line\">libc++abi.dylib: terminate_handler unexpectedly threw an exception</div><div class=\"line\"></div><div class=\"line\">(lldb) bt</div><div class=\"line\">* thread #1: tid = 0x87c18, 0x000000018238c524 libobjc.A.dylib`objc_exception_throw, queue = &apos;com.apple.main-thread&apos;, stop reason = breakpoint 1.2</div><div class=\"line\">    frame #0: 0x000000018238c524 libobjc.A.dylib`objc_exception_throw</div><div class=\"line\">    frame #1: 0x0000000183954094 CoreFoundation`+[NSException raise:format:arguments:] + 104</div><div class=\"line\">    frame #2: 0x00000001843de898 Foundation`-[NSAssertionHandler handleFailureInFunction:file:lineNumber:description:] + 88</div><div class=\"line\">    frame #3: 0x0000000189a7cf9c UIKit`UIViewReportBrokenSuperviewChain + 472</div><div class=\"line\">    frame #4: 0x0000000189a7d658 UIKit`_UIViewTopDownSubtreeTraversal + 1496</div><div class=\"line\">    frame #5: 0x000000018a0f3390 UIKit`-[UIView(UIConstraintBasedLayout_EngineDelegate) _invalidateSystemLayoutSizeFittingSizeAtEngineDelegateLevel] + 232</div><div class=\"line\">    frame #6: 0x00000001843832ac Foundation`-[NSISEngine tryToAddConstraintWithMarker:expression:integralizationAdjustment:mutuallyExclusiveConstraints:] + 920</div><div class=\"line\">    frame #7: 0x0000000184382dcc Foundation`-[NSLayoutConstraint _addLoweredExpression:toEngine:integralizationAdjustment:lastLoweredConstantWasRounded:mutuallyExclusiveConstraints:] + 284</div><div class=\"line\">    frame #8: 0x00000001843809e0 Foundation`-[NSLayoutConstraint _addToEngine:integralizationAdjustment:mutuallyExclusiveConstraints:] + 272</div><div class=\"line\">    frame #9: 0x000000018989cfdc UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 396</div><div class=\"line\">    frame #10: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168</div><div class=\"line\">    frame #11: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564</div><div class=\"line\">    frame #12: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224</div><div class=\"line\">    frame #13: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196</div><div class=\"line\">    frame #14: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168</div><div class=\"line\">    frame #15: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564</div><div class=\"line\">    frame #16: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224</div><div class=\"line\">    frame #17: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196</div><div class=\"line\">    frame #18: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168</div><div class=\"line\">    frame #19: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564</div><div class=\"line\">    frame #20: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224</div><div class=\"line\">    frame #21: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196</div><div class=\"line\">    frame #22: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168</div><div class=\"line\">    frame #23: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564</div><div class=\"line\">    frame #24: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224</div><div class=\"line\">    frame #25: 0x00000001898a4bb0 UIKit`-[UIWindow(UIConstraintBasedLayout) _switchToLayoutEngine:] + 72</div><div class=\"line\">    frame #26: 0x00000001898a4b04 UIKit`-[UIWindow(UIConstraintBasedLayout) _initializeLayoutEngine] + 256</div><div class=\"line\">    frame #27: 0x00000001898a4910 UIKit`-[UIView(UIConstraintBasedLayout) _layoutEngine_windowDidChange] + 132</div><div class=\"line\">    frame #28: 0x00000001897996dc UIKit`-[UIView(Internal) _didMoveFromWindow:toWindow:] + 200</div><div class=\"line\">    frame #29: 0x0000000189798d90 UIKit`__45-[UIView(Hierarchy) _postMovedFromSuperview:]_block_invoke + 156</div><div class=\"line\">    frame #30: 0x0000000189798be8 UIKit`-[UIView(Hierarchy) _postMovedFromSuperview:] + 792</div><div class=\"line\">    frame #31: 0x00000001897a4ad0 UIKit`-[UIView(Internal) _addSubview:positioned:relativeTo:] + 1788</div><div class=\"line\">    frame #32: 0x00000001897a43bc UIKit`-[UIView(Hierarchy) addSubview:] + 828</div><div class=\"line\">  * frame #33: 0x00000001004f78ec Project_ent`__31-[EsfCommentReportView show]_block_invoke((null)=&lt;unavailable&gt;) + 228 at EsfCommentReportView.m:293</div><div class=\"line\">    frame #34: 0x00000001897d2b88 UIKit`+[UIView(UIViewAnimationWithBlocks) _setupAnimationWithDuration:delay:view:options:factory:animations:start:animationStateGenerator:completion:] + 660</div><div class=\"line\">    frame #35: 0x00000001897d28e8 UIKit`+[UIView(UIViewAnimationWithBlocks) animateWithDuration:animations:] + 56</div><div class=\"line\">    frame #36: 0x00000001004f77a0 Project_ent`-[EsfCommentReportView show](self=0x000000015fe32020, _cmd=&quot;show&quot;) + 492 at EsfCommentReportView.m:291</div><div class=\"line\">    frame #37: 0x0000000100858a04 Project_ent`__53-[BuyerAdviserProfileViewController reportAction:]_block_invoke((null)=&lt;unavailable&gt;) + 308 at BuyerAdviserProfileViewController.m:174</div><div class=\"line\">    frame #38: 0x00000001003f93e4 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:sourceType:afterCheckOrLogin:cancelLogin:](self=MyLoginViewController, _cmd=&quot;ifShouldLoginFromViewController:sourceType:afterCheckOrLogin:cancelLogin:&quot;, viewController=0x000000015fd2e320, sourceType=2, afterCheckOrLogin=0x00000001008588d0, cancelLogin=(null)) + 236 at MyLoginViewController.m:123</div><div class=\"line\">    frame #39: 0x00000001003f92b0 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:afterCheckOrLogin:cancelLogin:](self=MyLoginViewController, _cmd=&quot;ifShouldLoginFromViewController:afterCheckOrLogin:cancelLogin:&quot;, viewController=0x000000015fd2e320, afterCheckOrLogin=0x00000001008588d0, cancelLogin=(null)) + 156 at MyLoginViewController.m:114</div><div class=\"line\">    frame #40: 0x00000001003f9124 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:afterCheckOrLogin:](self=MyLoginViewController, _cmd=&quot;ifShouldLoginFromViewController:afterCheckOrLogin:&quot;, viewController=0x000000015fd2e320, afterCheckOrLogin=0x00000001008588d0) + 120 at MyLoginViewController.m:104</div><div class=\"line\">    frame #41: 0x0000000100858870 Project_ent`-[BuyerAdviserProfileViewController reportAction:](self=0x000000015fd2e320, _cmd=&quot;reportAction:&quot;, button=0x000000015fe26650) + 452 at BuyerAdviserProfileViewController.m:156</div><div class=\"line\">    frame #42: 0x00000001897d27b0 UIKit`-[UIApplication sendAction:to:from:forEvent:] + 96</div><div class=\"line\">    frame #43: 0x00000001897d2730 UIKit`-[UIControl sendAction:to:forEvent:] + 80</div><div class=\"line\">    frame #44: 0x00000001897bcbe4 UIKit`-[UIControl _sendActionsForEvents:withEvent:] + 452</div><div class=\"line\">    frame #45: 0x00000001897d201c UIKit`-[UIControl touchesEnded:withEvent:] + 584</div><div class=\"line\">    frame #46: 0x00000001897d1b44 UIKit`-[UIWindow _sendTouchesForEvent:] + 2484</div><div class=\"line\">    frame #47: 0x00000001897ccd8c UIKit`-[UIWindow sendEvent:] + 2988</div><div class=\"line\">    frame #48: 0x000000018979d858 UIKit`-[UIApplication sendEvent:] + 340</div><div class=\"line\">    frame #49: 0x0000000189f8acb8 UIKit`__dispatchPreprocessedEventFromEventQueue + 2736</div><div class=\"line\">    frame #50: 0x0000000189f84720 UIKit`__handleEventQueue + 784</div><div class=\"line\">    frame #51: 0x0000000183902278 CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 24</div><div class=\"line\">    frame #52: 0x0000000183901bc0 CoreFoundation`__CFRunLoopDoSources0 + 524</div><div class=\"line\">    frame #53: 0x00000001838ff7c0 CoreFoundation`__CFRunLoopRun + 804</div><div class=\"line\">    frame #54: 0x000000018382e048 CoreFoundation`CFRunLoopRunSpecific + 444</div><div class=\"line\">    frame #55: 0x00000001852b1198 GraphicsServices`GSEventRunModal + 180</div><div class=\"line\">    frame #56: 0x0000000189808628 UIKit`-[UIApplication _run] + 684</div><div class=\"line\">    frame #57: 0x0000000189803360 UIKit`UIApplicationMain + 208</div><div class=\"line\">    frame #58: 0x0000000100a3db78 Project_ent`main + 460 at main.swift:24</div><div class=\"line\">    frame #59: 0x00000001828105b8 libdyld.dylib`start + 4</div><div class=\"line\">(lldb)</div></pre></td></tr></table></figure>"},{"title":"DEBUG - Xcode8解析.crash","date":"2016-11-14T04:43:22.000Z","_content":"\n5步解析`.crash`文件\n\n<!--more-->\n\n# Xcode8中解析.crash文件\n  \n  1. 导出`x.crash`文件，放置在`目录A`下\n  2. 复制`工程名.app.dSYM`到`目录A`\n  3. 配置环境变量，运行`export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer`\n  4. 拷贝脚本文件，运行`cp /Applications/Xcode.app/Contents/SharedFrameworks/DVTFoundation.framework/Versions/A/Resources/symbolicatecrash 目录A`\n  5. 到`目录A`解析，运行`./symbolicatecrash x.crash 工程名.app.dSYM > 自定义输出结果文件名`\n","source":"_posts/debug-xcode8-analysis-crash-file.md","raw":"---\ntitle: DEBUG - Xcode8解析.crash\ndate: 2016-11-14 12:43:22\ntags: \ncategories:\n    - DEBUG\n---\n\n5步解析`.crash`文件\n\n<!--more-->\n\n# Xcode8中解析.crash文件\n  \n  1. 导出`x.crash`文件，放置在`目录A`下\n  2. 复制`工程名.app.dSYM`到`目录A`\n  3. 配置环境变量，运行`export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer`\n  4. 拷贝脚本文件，运行`cp /Applications/Xcode.app/Contents/SharedFrameworks/DVTFoundation.framework/Versions/A/Resources/symbolicatecrash 目录A`\n  5. 到`目录A`解析，运行`./symbolicatecrash x.crash 工程名.app.dSYM > 自定义输出结果文件名`\n","slug":"debug-xcode8-analysis-crash-file","published":1,"updated":"2016-12-30T11:18:17.000Z","_id":"cixbaqymr000acb6akcflul48","comments":1,"layout":"post","photos":[],"link":"","content":"<p>5步解析<code>.crash</code>文件</p>\n<a id=\"more\"></a>\n<h1 id=\"Xcode8中解析-crash文件\"><a href=\"#Xcode8中解析-crash文件\" class=\"headerlink\" title=\"Xcode8中解析.crash文件\"></a>Xcode8中解析.crash文件</h1><ol>\n<li>导出<code>x.crash</code>文件，放置在<code>目录A</code>下</li>\n<li>复制<code>工程名.app.dSYM</code>到<code>目录A</code></li>\n<li>配置环境变量，运行<code>export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer</code></li>\n<li>拷贝脚本文件，运行<code>cp /Applications/Xcode.app/Contents/SharedFrameworks/DVTFoundation.framework/Versions/A/Resources/symbolicatecrash 目录A</code></li>\n<li>到<code>目录A</code>解析，运行<code>./symbolicatecrash x.crash 工程名.app.dSYM &gt; 自定义输出结果文件名</code></li>\n</ol>\n","excerpt":"<p>5步解析<code>.crash</code>文件</p>","more":"<h1 id=\"Xcode8中解析-crash文件\"><a href=\"#Xcode8中解析-crash文件\" class=\"headerlink\" title=\"Xcode8中解析.crash文件\"></a>Xcode8中解析.crash文件</h1><ol>\n<li>导出<code>x.crash</code>文件，放置在<code>目录A</code>下</li>\n<li>复制<code>工程名.app.dSYM</code>到<code>目录A</code></li>\n<li>配置环境变量，运行<code>export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer</code></li>\n<li>拷贝脚本文件，运行<code>cp /Applications/Xcode.app/Contents/SharedFrameworks/DVTFoundation.framework/Versions/A/Resources/symbolicatecrash 目录A</code></li>\n<li>到<code>目录A</code>解析，运行<code>./symbolicatecrash x.crash 工程名.app.dSYM &gt; 自定义输出结果文件名</code></li>\n</ol>"},{"title":"优雅的使用SwiftLint","date":"2016-12-23T03:59:57.000Z","_content":"\n接入了SwiftLine，修改2000+的warning、300+error的一点笔记心得。\n\n<!--more-->\n\n# SwiftLint\n\n  > ## [SwiftLint](https://github.com/realm/SwiftLint)\n  > A tool to enforce Swift style and conventions, loosely based on GitHub's Swift Style Guide.\n  SwiftLint hooks into Clang and SourceKit to use the AST representation of your source files for more accurate results.\n  SwiftLint 是一个用于强制检查 Swift 代码风格和规定的一个工具，基本上以 GitHub's Swift 代码风格指南为基础。\n  SwiftLint Hook 了 Clang 和 SourceKit 从而能够使用 AST 来表示源代码文件的更多精确结果。\n  \n## 对原有代码格式化\n### TrailingWhitespaceRule\n\n#### 现象\n  > xxx.swift:34: warning: Trailing Whitespace Violation: Lines should not have trailing whitespace. (trailing_whitespace)\n  \n  规则实现：[TrailingWhitespaceRule.swift](https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/TrailingWhitespaceRule.swift)\n  \n#### 原因\n  Xcode中的\"空白行\"。其实并不空白，含有空的字符。最明显的表现为git提交的时候会有明显的黄色警告。\n\n#### 解决办法\n  Xcode中有选项可以直接控制，具体路径为\n  ```\n  Xcode \n  -> Preferences\n  -> Text Editing\n  -> While editing\n  -> [V] Including whitespace-only lines\n  ```\n  \n### ColonRule\n\n#### 现象\n  > xxx.swift:13:71: warning: Colon Violation: Colons should be next to the identifier when specifying a type. (colon)\n  \n#### 原因\n  变量方法的 `: ` 的右边应该有一个空格才能识别出来，且左侧不能留空格。所以写代码的时候随手写上还是比较好的。。\n  栗子：\n  ```\n  //  OK:\n  var responseData: [String : Any]? = nil // 返回结果，请求之前为nil\n\n  //  warning: 第一个':'处左侧有空格\n  var responseData : [String : Any]? = nil // 返回结果，请求之前为nil\n  \n  //  warning: 第一个':'处右侧无空格\n  var responseData:[String : Any]? = nil // 返回结果，请求之前为nil\n  ```\n\n#### 解决办法\n  规范书写\n  \n### LineLengthRule\n\n#### 现象\n  > xxx.swift:90: warning: Line Length Violation: Line should be 100 characters or less: currently 101 characters (line_length)\n  \n#### 原因\n  行数超了呗。。\n  \n#### 解决办法\n  - 方法名字写的简单易懂\n  \n### ControlStatementRule\n\n#### 现象\n  > xxx.swift:169:21: warning: Control Statement Violation: if,for,while,do statements shouldn't wrap their conditionals in parentheses. (control_statement)\n  \n  规则实现[ControlStatementRule](https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/ControlStatementRule.swift)\n  \n#### 原因\n  swift中`if,for,while,do` 语句不应该用`()`\n\n\n### UnusedClosureParameterRule\n\n#### 现象\n  > xxx.swift:103:62: warning: Unused Closure Parameter Violation: Unused parameter \"response\" in a closure should be replaced with _. (unused_closure_parameter)\n\n  规则实现[UnusedClosureParameterRule](https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/UnusedClosureParameterRule.swift)\n\n#### 原因\n  `response` 没有使用，建议替换为 `_`。\n  \n### CyclomaticComplexityRule\n\n#### 现象\n  > xxx.swift:69:5: warning: Cyclomatic Complexity Violation: Function should have complexity 10 or less: currently complexity equals 14 (cyclomatic_complexity)\n  \n  规则实现[CyclomaticComplexityRule](https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/CyclomaticComplexityRule.swift)\n\n#### 原因\n  😂，他说你这函数写的太复杂了。看实现是说不能有过多的`if {}`\n  \n\n### OpeningBraceRule\n\n#### 现象\n  > xxx.swift:221:34: warning: Opening Brace Spacing Violation: Opening braces should be preceded by a single space and on the same line as the declaration. (opening_brace)\n  \n  规则实现[OpeningBraceRule](https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/OpeningBraceRule.swift)\n  \n#### 解决\n  `{}`的前面要有空格隔开\n","source":"_posts/elegant-to-use-swiftlint.md","raw":"---\ntitle: 优雅的使用SwiftLint\ndate: 2016-12-23 11:59:57\ntags:\n---\n\n接入了SwiftLine，修改2000+的warning、300+error的一点笔记心得。\n\n<!--more-->\n\n# SwiftLint\n\n  > ## [SwiftLint](https://github.com/realm/SwiftLint)\n  > A tool to enforce Swift style and conventions, loosely based on GitHub's Swift Style Guide.\n  SwiftLint hooks into Clang and SourceKit to use the AST representation of your source files for more accurate results.\n  SwiftLint 是一个用于强制检查 Swift 代码风格和规定的一个工具，基本上以 GitHub's Swift 代码风格指南为基础。\n  SwiftLint Hook 了 Clang 和 SourceKit 从而能够使用 AST 来表示源代码文件的更多精确结果。\n  \n## 对原有代码格式化\n### TrailingWhitespaceRule\n\n#### 现象\n  > xxx.swift:34: warning: Trailing Whitespace Violation: Lines should not have trailing whitespace. (trailing_whitespace)\n  \n  规则实现：[TrailingWhitespaceRule.swift](https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/TrailingWhitespaceRule.swift)\n  \n#### 原因\n  Xcode中的\"空白行\"。其实并不空白，含有空的字符。最明显的表现为git提交的时候会有明显的黄色警告。\n\n#### 解决办法\n  Xcode中有选项可以直接控制，具体路径为\n  ```\n  Xcode \n  -> Preferences\n  -> Text Editing\n  -> While editing\n  -> [V] Including whitespace-only lines\n  ```\n  \n### ColonRule\n\n#### 现象\n  > xxx.swift:13:71: warning: Colon Violation: Colons should be next to the identifier when specifying a type. (colon)\n  \n#### 原因\n  变量方法的 `: ` 的右边应该有一个空格才能识别出来，且左侧不能留空格。所以写代码的时候随手写上还是比较好的。。\n  栗子：\n  ```\n  //  OK:\n  var responseData: [String : Any]? = nil // 返回结果，请求之前为nil\n\n  //  warning: 第一个':'处左侧有空格\n  var responseData : [String : Any]? = nil // 返回结果，请求之前为nil\n  \n  //  warning: 第一个':'处右侧无空格\n  var responseData:[String : Any]? = nil // 返回结果，请求之前为nil\n  ```\n\n#### 解决办法\n  规范书写\n  \n### LineLengthRule\n\n#### 现象\n  > xxx.swift:90: warning: Line Length Violation: Line should be 100 characters or less: currently 101 characters (line_length)\n  \n#### 原因\n  行数超了呗。。\n  \n#### 解决办法\n  - 方法名字写的简单易懂\n  \n### ControlStatementRule\n\n#### 现象\n  > xxx.swift:169:21: warning: Control Statement Violation: if,for,while,do statements shouldn't wrap their conditionals in parentheses. (control_statement)\n  \n  规则实现[ControlStatementRule](https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/ControlStatementRule.swift)\n  \n#### 原因\n  swift中`if,for,while,do` 语句不应该用`()`\n\n\n### UnusedClosureParameterRule\n\n#### 现象\n  > xxx.swift:103:62: warning: Unused Closure Parameter Violation: Unused parameter \"response\" in a closure should be replaced with _. (unused_closure_parameter)\n\n  规则实现[UnusedClosureParameterRule](https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/UnusedClosureParameterRule.swift)\n\n#### 原因\n  `response` 没有使用，建议替换为 `_`。\n  \n### CyclomaticComplexityRule\n\n#### 现象\n  > xxx.swift:69:5: warning: Cyclomatic Complexity Violation: Function should have complexity 10 or less: currently complexity equals 14 (cyclomatic_complexity)\n  \n  规则实现[CyclomaticComplexityRule](https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/CyclomaticComplexityRule.swift)\n\n#### 原因\n  😂，他说你这函数写的太复杂了。看实现是说不能有过多的`if {}`\n  \n\n### OpeningBraceRule\n\n#### 现象\n  > xxx.swift:221:34: warning: Opening Brace Spacing Violation: Opening braces should be preceded by a single space and on the same line as the declaration. (opening_brace)\n  \n  规则实现[OpeningBraceRule](https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/OpeningBraceRule.swift)\n  \n#### 解决\n  `{}`的前面要有空格隔开\n","slug":"elegant-to-use-swiftlint","published":1,"updated":"2016-12-30T11:15:48.000Z","_id":"cixbaqymx000dcb6ajhvn4enh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>接入了SwiftLine，修改2000+的warning、300+error的一点笔记心得。</p>\n<a id=\"more\"></a>\n<h1 id=\"SwiftLint\"><a href=\"#SwiftLint\" class=\"headerlink\" title=\"SwiftLint\"></a>SwiftLint</h1><blockquote>\n<h2 id=\"SwiftLint-1\"><a href=\"#SwiftLint-1\" class=\"headerlink\" title=\"SwiftLint\"></a><a href=\"https://github.com/realm/SwiftLint\" target=\"_blank\" rel=\"external\">SwiftLint</a></h2><p>A tool to enforce Swift style and conventions, loosely based on GitHub’s Swift Style Guide.<br>  SwiftLint hooks into Clang and SourceKit to use the AST representation of your source files for more accurate results.<br>  SwiftLint 是一个用于强制检查 Swift 代码风格和规定的一个工具，基本上以 GitHub’s Swift 代码风格指南为基础。<br>  SwiftLint Hook 了 Clang 和 SourceKit 从而能够使用 AST 来表示源代码文件的更多精确结果。</p>\n</blockquote>\n<h2 id=\"对原有代码格式化\"><a href=\"#对原有代码格式化\" class=\"headerlink\" title=\"对原有代码格式化\"></a>对原有代码格式化</h2><h3 id=\"TrailingWhitespaceRule\"><a href=\"#TrailingWhitespaceRule\" class=\"headerlink\" title=\"TrailingWhitespaceRule\"></a>TrailingWhitespaceRule</h3><h4 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:34: warning: Trailing Whitespace Violation: Lines should not have trailing whitespace. (trailing_whitespace)</p>\n</blockquote>\n<p>  规则实现：<a href=\"https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/TrailingWhitespaceRule.swift\" target=\"_blank\" rel=\"external\">TrailingWhitespaceRule.swift</a></p>\n<h4 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>  Xcode中的”空白行”。其实并不空白，含有空的字符。最明显的表现为git提交的时候会有明显的黄色警告。</p>\n<h4 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h4><p>  Xcode中有选项可以直接控制，具体路径为<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Xcode </div><div class=\"line\">-&gt; Preferences</div><div class=\"line\">-&gt; Text Editing</div><div class=\"line\">-&gt; While editing</div><div class=\"line\">-&gt; [V] Including whitespace-only lines</div></pre></td></tr></table></figure></p>\n<h3 id=\"ColonRule\"><a href=\"#ColonRule\" class=\"headerlink\" title=\"ColonRule\"></a>ColonRule</h3><h4 id=\"现象-1\"><a href=\"#现象-1\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:13:71: warning: Colon Violation: Colons should be next to the identifier when specifying a type. (colon)</p>\n</blockquote>\n<h4 id=\"原因-1\"><a href=\"#原因-1\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>  变量方法的 <code>:</code> 的右边应该有一个空格才能识别出来，且左侧不能留空格。所以写代码的时候随手写上还是比较好的。。<br>  栗子：<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">//  OK:</div><div class=\"line\">var responseData: [String : Any]? = nil // 返回结果，请求之前为nil</div><div class=\"line\"></div><div class=\"line\">//  warning: 第一个&apos;:&apos;处左侧有空格</div><div class=\"line\">var responseData : [String : Any]? = nil // 返回结果，请求之前为nil</div><div class=\"line\"></div><div class=\"line\">//  warning: 第一个&apos;:&apos;处右侧无空格</div><div class=\"line\">var responseData:[String : Any]? = nil // 返回结果，请求之前为nil</div></pre></td></tr></table></figure></p>\n<h4 id=\"解决办法-1\"><a href=\"#解决办法-1\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h4><p>  规范书写</p>\n<h3 id=\"LineLengthRule\"><a href=\"#LineLengthRule\" class=\"headerlink\" title=\"LineLengthRule\"></a>LineLengthRule</h3><h4 id=\"现象-2\"><a href=\"#现象-2\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:90: warning: Line Length Violation: Line should be 100 characters or less: currently 101 characters (line_length)</p>\n</blockquote>\n<h4 id=\"原因-2\"><a href=\"#原因-2\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>  行数超了呗。。</p>\n<h4 id=\"解决办法-2\"><a href=\"#解决办法-2\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h4><ul>\n<li>方法名字写的简单易懂</li>\n</ul>\n<h3 id=\"ControlStatementRule\"><a href=\"#ControlStatementRule\" class=\"headerlink\" title=\"ControlStatementRule\"></a>ControlStatementRule</h3><h4 id=\"现象-3\"><a href=\"#现象-3\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:169:21: warning: Control Statement Violation: if,for,while,do statements shouldn’t wrap their conditionals in parentheses. (control_statement)</p>\n</blockquote>\n<p>  规则实现<a href=\"https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/ControlStatementRule.swift\" target=\"_blank\" rel=\"external\">ControlStatementRule</a></p>\n<h4 id=\"原因-3\"><a href=\"#原因-3\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>  swift中<code>if,for,while,do</code> 语句不应该用<code>()</code></p>\n<h3 id=\"UnusedClosureParameterRule\"><a href=\"#UnusedClosureParameterRule\" class=\"headerlink\" title=\"UnusedClosureParameterRule\"></a>UnusedClosureParameterRule</h3><h4 id=\"现象-4\"><a href=\"#现象-4\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:103:62: warning: Unused Closure Parameter Violation: Unused parameter “response” in a closure should be replaced with _. (unused_closure_parameter)</p>\n</blockquote>\n<p>  规则实现<a href=\"https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/UnusedClosureParameterRule.swift\" target=\"_blank\" rel=\"external\">UnusedClosureParameterRule</a></p>\n<h4 id=\"原因-4\"><a href=\"#原因-4\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>  <code>response</code> 没有使用，建议替换为 <code>_</code>。</p>\n<h3 id=\"CyclomaticComplexityRule\"><a href=\"#CyclomaticComplexityRule\" class=\"headerlink\" title=\"CyclomaticComplexityRule\"></a>CyclomaticComplexityRule</h3><h4 id=\"现象-5\"><a href=\"#现象-5\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:69:5: warning: Cyclomatic Complexity Violation: Function should have complexity 10 or less: currently complexity equals 14 (cyclomatic_complexity)</p>\n</blockquote>\n<p>  规则实现<a href=\"https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/CyclomaticComplexityRule.swift\" target=\"_blank\" rel=\"external\">CyclomaticComplexityRule</a></p>\n<h4 id=\"原因-5\"><a href=\"#原因-5\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>  😂，他说你这函数写的太复杂了。看实现是说不能有过多的<code>if {}</code></p>\n<h3 id=\"OpeningBraceRule\"><a href=\"#OpeningBraceRule\" class=\"headerlink\" title=\"OpeningBraceRule\"></a>OpeningBraceRule</h3><h4 id=\"现象-6\"><a href=\"#现象-6\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:221:34: warning: Opening Brace Spacing Violation: Opening braces should be preceded by a single space and on the same line as the declaration. (opening_brace)</p>\n</blockquote>\n<p>  规则实现<a href=\"https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/OpeningBraceRule.swift\" target=\"_blank\" rel=\"external\">OpeningBraceRule</a></p>\n<h4 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h4><p>  <code>{}</code>的前面要有空格隔开</p>\n","excerpt":"<p>接入了SwiftLine，修改2000+的warning、300+error的一点笔记心得。</p>","more":"<h1 id=\"SwiftLint\"><a href=\"#SwiftLint\" class=\"headerlink\" title=\"SwiftLint\"></a>SwiftLint</h1><blockquote>\n<h2 id=\"SwiftLint-1\"><a href=\"#SwiftLint-1\" class=\"headerlink\" title=\"SwiftLint\"></a><a href=\"https://github.com/realm/SwiftLint\">SwiftLint</a></h2><p>A tool to enforce Swift style and conventions, loosely based on GitHub’s Swift Style Guide.<br>  SwiftLint hooks into Clang and SourceKit to use the AST representation of your source files for more accurate results.<br>  SwiftLint 是一个用于强制检查 Swift 代码风格和规定的一个工具，基本上以 GitHub’s Swift 代码风格指南为基础。<br>  SwiftLint Hook 了 Clang 和 SourceKit 从而能够使用 AST 来表示源代码文件的更多精确结果。</p>\n</blockquote>\n<h2 id=\"对原有代码格式化\"><a href=\"#对原有代码格式化\" class=\"headerlink\" title=\"对原有代码格式化\"></a>对原有代码格式化</h2><h3 id=\"TrailingWhitespaceRule\"><a href=\"#TrailingWhitespaceRule\" class=\"headerlink\" title=\"TrailingWhitespaceRule\"></a>TrailingWhitespaceRule</h3><h4 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:34: warning: Trailing Whitespace Violation: Lines should not have trailing whitespace. (trailing_whitespace)</p>\n</blockquote>\n<p>  规则实现：<a href=\"https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/TrailingWhitespaceRule.swift\">TrailingWhitespaceRule.swift</a></p>\n<h4 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>  Xcode中的”空白行”。其实并不空白，含有空的字符。最明显的表现为git提交的时候会有明显的黄色警告。</p>\n<h4 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h4><p>  Xcode中有选项可以直接控制，具体路径为<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Xcode </div><div class=\"line\">-&gt; Preferences</div><div class=\"line\">-&gt; Text Editing</div><div class=\"line\">-&gt; While editing</div><div class=\"line\">-&gt; [V] Including whitespace-only lines</div></pre></td></tr></table></figure></p>\n<h3 id=\"ColonRule\"><a href=\"#ColonRule\" class=\"headerlink\" title=\"ColonRule\"></a>ColonRule</h3><h4 id=\"现象-1\"><a href=\"#现象-1\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:13:71: warning: Colon Violation: Colons should be next to the identifier when specifying a type. (colon)</p>\n</blockquote>\n<h4 id=\"原因-1\"><a href=\"#原因-1\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>  变量方法的 <code>:</code> 的右边应该有一个空格才能识别出来，且左侧不能留空格。所以写代码的时候随手写上还是比较好的。。<br>  栗子：<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">//  OK:</div><div class=\"line\">var responseData: [String : Any]? = nil // 返回结果，请求之前为nil</div><div class=\"line\"></div><div class=\"line\">//  warning: 第一个&apos;:&apos;处左侧有空格</div><div class=\"line\">var responseData : [String : Any]? = nil // 返回结果，请求之前为nil</div><div class=\"line\"></div><div class=\"line\">//  warning: 第一个&apos;:&apos;处右侧无空格</div><div class=\"line\">var responseData:[String : Any]? = nil // 返回结果，请求之前为nil</div></pre></td></tr></table></figure></p>\n<h4 id=\"解决办法-1\"><a href=\"#解决办法-1\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h4><p>  规范书写</p>\n<h3 id=\"LineLengthRule\"><a href=\"#LineLengthRule\" class=\"headerlink\" title=\"LineLengthRule\"></a>LineLengthRule</h3><h4 id=\"现象-2\"><a href=\"#现象-2\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:90: warning: Line Length Violation: Line should be 100 characters or less: currently 101 characters (line_length)</p>\n</blockquote>\n<h4 id=\"原因-2\"><a href=\"#原因-2\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>  行数超了呗。。</p>\n<h4 id=\"解决办法-2\"><a href=\"#解决办法-2\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h4><ul>\n<li>方法名字写的简单易懂</li>\n</ul>\n<h3 id=\"ControlStatementRule\"><a href=\"#ControlStatementRule\" class=\"headerlink\" title=\"ControlStatementRule\"></a>ControlStatementRule</h3><h4 id=\"现象-3\"><a href=\"#现象-3\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:169:21: warning: Control Statement Violation: if,for,while,do statements shouldn’t wrap their conditionals in parentheses. (control_statement)</p>\n</blockquote>\n<p>  规则实现<a href=\"https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/ControlStatementRule.swift\">ControlStatementRule</a></p>\n<h4 id=\"原因-3\"><a href=\"#原因-3\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>  swift中<code>if,for,while,do</code> 语句不应该用<code>()</code></p>\n<h3 id=\"UnusedClosureParameterRule\"><a href=\"#UnusedClosureParameterRule\" class=\"headerlink\" title=\"UnusedClosureParameterRule\"></a>UnusedClosureParameterRule</h3><h4 id=\"现象-4\"><a href=\"#现象-4\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:103:62: warning: Unused Closure Parameter Violation: Unused parameter “response” in a closure should be replaced with _. (unused_closure_parameter)</p>\n</blockquote>\n<p>  规则实现<a href=\"https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/UnusedClosureParameterRule.swift\">UnusedClosureParameterRule</a></p>\n<h4 id=\"原因-4\"><a href=\"#原因-4\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>  <code>response</code> 没有使用，建议替换为 <code>_</code>。</p>\n<h3 id=\"CyclomaticComplexityRule\"><a href=\"#CyclomaticComplexityRule\" class=\"headerlink\" title=\"CyclomaticComplexityRule\"></a>CyclomaticComplexityRule</h3><h4 id=\"现象-5\"><a href=\"#现象-5\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:69:5: warning: Cyclomatic Complexity Violation: Function should have complexity 10 or less: currently complexity equals 14 (cyclomatic_complexity)</p>\n</blockquote>\n<p>  规则实现<a href=\"https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/CyclomaticComplexityRule.swift\">CyclomaticComplexityRule</a></p>\n<h4 id=\"原因-5\"><a href=\"#原因-5\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>  😂，他说你这函数写的太复杂了。看实现是说不能有过多的<code>if {}</code></p>\n<h3 id=\"OpeningBraceRule\"><a href=\"#OpeningBraceRule\" class=\"headerlink\" title=\"OpeningBraceRule\"></a>OpeningBraceRule</h3><h4 id=\"现象-6\"><a href=\"#现象-6\" class=\"headerlink\" title=\"现象\"></a>现象</h4><blockquote>\n<p>xxx.swift:221:34: warning: Opening Brace Spacing Violation: Opening braces should be preceded by a single space and on the same line as the declaration. (opening_brace)</p>\n</blockquote>\n<p>  规则实现<a href=\"https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/OpeningBraceRule.swift\">OpeningBraceRule</a></p>\n<h4 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h4><p>  <code>{}</code>的前面要有空格隔开</p>"},{"title":"准备食用RAC(ReactiveCocoa)的顾虑","date":"2016-07-12T01:53:14.000Z","_content":"\n对于目前的项目，如果引用RAC，会对项目造成哪些影响的相关思考。\n\n<!--more-->\n\n# 说明\n\n众所周知，RAC很火，有很多崇拜者。本文只是一个新手第一次使用RAC时候所顾忌的一些问题，如果有比较好的解决方案及时告知我，我会及时更改。\n\n\n# OC简单食用方法\n\n先来个例子代码：\n\n```objc\n\n    RACSignal *RSignal = [[self.R rac_newValueChannelWithNilValue:@0] startWith:@(self.R.value)];\n    RACSignal *GSignal = [[self.G rac_newValueChannelWithNilValue:@0] startWith:@(self.G.value)];\n    RACSignal *BSignal = [[self.B rac_newValueChannelWithNilValue:@0] startWith:@(self.B.value)];\n\n    NSString*(^valueFormat)(NSNumber *value) = ^(NSNumber *value) {\n        return [NSString stringWithFormat:@\"%.0f\", [value doubleValue]*255];\n    };\n    \n    [RSignal subscribeNext:^(id x) {\n        self.RVaule.text = valueFormat(x);\n    }];\n    [GSignal subscribeNext:^(id x) {\n        self.GValue.text = valueFormat(x);\n    }];\n    [BSignal subscribeNext:^(id x) {\n        self.BValue.text = valueFormat(x);\n    }];\n    \n```\n\n是不是超级简单！\n\n\n## 顾虑\n\n可是我有一个问题：\n\n- OC属于运行时语法，这个里面的`id x`的不确定因素可能会导致类型识别出现错误。如果说项目是多人维护，那么A可能不知道B写的Signal走的类型是什么，所以这个问题就不适用于松散的多人开发。如果需要使用RAC恐怕需要在项目启动时进行规避这些不确定的问题才能引入。\n\n\n# Swift简单食用方法\n\n在[ReactiveCocoa](https://github.com/ReactiveCocoa/ReactiveCocoa)的[README.md](https://github.com/ReactiveCocoa/ReactiveCocoa#objective-c-and-swift)中有这么一段话：\n\n> ## Objective-C and Swift\n>\n  Although ReactiveCocoa was started as an Objective-C framework, as of [version\n  3.0][CHANGELOG], all major feature development is concentrated on the [Swift API][].\n>\n  RAC’s [Objective-C API][] and Swift API are entirely separate, but there is\n  a [bridge][Objective-C Bridging] to convert between the two. This\n  is mostly meant as a compatibility layer for older ReactiveCocoa projects, or to\n  use Cocoa extensions which haven’t been added to the Swift API yet.\n>\n  The Objective-C API will continue to exist and be supported for the foreseeable\n  future, but it won’t receive many improvements. For more information about using\n  this API, please consult our [legacy documentation][].\n>\n  **We highly recommend that all new projects use the Swift API.**\n","source":"_posts/reactivecocoa-ready-to-use.md","raw":"---\ntitle: 准备食用RAC(ReactiveCocoa)的顾虑\ndate: 2016-07-12 09:53:14\ntags: \n  - iOS\n  - ReactiveCocoa\n---\n\n对于目前的项目，如果引用RAC，会对项目造成哪些影响的相关思考。\n\n<!--more-->\n\n# 说明\n\n众所周知，RAC很火，有很多崇拜者。本文只是一个新手第一次使用RAC时候所顾忌的一些问题，如果有比较好的解决方案及时告知我，我会及时更改。\n\n\n# OC简单食用方法\n\n先来个例子代码：\n\n```objc\n\n    RACSignal *RSignal = [[self.R rac_newValueChannelWithNilValue:@0] startWith:@(self.R.value)];\n    RACSignal *GSignal = [[self.G rac_newValueChannelWithNilValue:@0] startWith:@(self.G.value)];\n    RACSignal *BSignal = [[self.B rac_newValueChannelWithNilValue:@0] startWith:@(self.B.value)];\n\n    NSString*(^valueFormat)(NSNumber *value) = ^(NSNumber *value) {\n        return [NSString stringWithFormat:@\"%.0f\", [value doubleValue]*255];\n    };\n    \n    [RSignal subscribeNext:^(id x) {\n        self.RVaule.text = valueFormat(x);\n    }];\n    [GSignal subscribeNext:^(id x) {\n        self.GValue.text = valueFormat(x);\n    }];\n    [BSignal subscribeNext:^(id x) {\n        self.BValue.text = valueFormat(x);\n    }];\n    \n```\n\n是不是超级简单！\n\n\n## 顾虑\n\n可是我有一个问题：\n\n- OC属于运行时语法，这个里面的`id x`的不确定因素可能会导致类型识别出现错误。如果说项目是多人维护，那么A可能不知道B写的Signal走的类型是什么，所以这个问题就不适用于松散的多人开发。如果需要使用RAC恐怕需要在项目启动时进行规避这些不确定的问题才能引入。\n\n\n# Swift简单食用方法\n\n在[ReactiveCocoa](https://github.com/ReactiveCocoa/ReactiveCocoa)的[README.md](https://github.com/ReactiveCocoa/ReactiveCocoa#objective-c-and-swift)中有这么一段话：\n\n> ## Objective-C and Swift\n>\n  Although ReactiveCocoa was started as an Objective-C framework, as of [version\n  3.0][CHANGELOG], all major feature development is concentrated on the [Swift API][].\n>\n  RAC’s [Objective-C API][] and Swift API are entirely separate, but there is\n  a [bridge][Objective-C Bridging] to convert between the two. This\n  is mostly meant as a compatibility layer for older ReactiveCocoa projects, or to\n  use Cocoa extensions which haven’t been added to the Swift API yet.\n>\n  The Objective-C API will continue to exist and be supported for the foreseeable\n  future, but it won’t receive many improvements. For more information about using\n  this API, please consult our [legacy documentation][].\n>\n  **We highly recommend that all new projects use the Swift API.**\n","slug":"reactivecocoa-ready-to-use","published":1,"updated":"2016-10-22T14:00:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixbaqymy000fcb6afcwizlws","content":"<p>对于目前的项目，如果引用RAC，会对项目造成哪些影响的相关思考。</p>\n<a id=\"more\"></a>\n<h1 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h1><p>众所周知，RAC很火，有很多崇拜者。本文只是一个新手第一次使用RAC时候所顾忌的一些问题，如果有比较好的解决方案及时告知我，我会及时更改。</p>\n<h1 id=\"OC简单食用方法\"><a href=\"#OC简单食用方法\" class=\"headerlink\" title=\"OC简单食用方法\"></a>OC简单食用方法</h1><p>先来个例子代码：</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">RACSignal *RSignal = [[<span class=\"keyword\">self</span>.R rac_newValueChannelWithNilValue:@<span class=\"number\">0</span>] startWith:@(<span class=\"keyword\">self</span>.R.value)];</div><div class=\"line\">RACSignal *GSignal = [[<span class=\"keyword\">self</span>.G rac_newValueChannelWithNilValue:@<span class=\"number\">0</span>] startWith:@(<span class=\"keyword\">self</span>.G.value)];</div><div class=\"line\">RACSignal *BSignal = [[<span class=\"keyword\">self</span>.B rac_newValueChannelWithNilValue:@<span class=\"number\">0</span>] startWith:@(<span class=\"keyword\">self</span>.B.value)];</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">NSString</span>*(^valueFormat)(<span class=\"built_in\">NSNumber</span> *value) = ^(<span class=\"built_in\">NSNumber</span> *value) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%.0f\"</span>, [value doubleValue]*<span class=\"number\">255</span>];</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">[RSignal subscribeNext:^(<span class=\"keyword\">id</span> x) &#123;</div><div class=\"line\">    <span class=\"keyword\">self</span>.RVaule.text = valueFormat(x);</div><div class=\"line\">&#125;];</div><div class=\"line\">[GSignal subscribeNext:^(<span class=\"keyword\">id</span> x) &#123;</div><div class=\"line\">    <span class=\"keyword\">self</span>.GValue.text = valueFormat(x);</div><div class=\"line\">&#125;];</div><div class=\"line\">[BSignal subscribeNext:^(<span class=\"keyword\">id</span> x) &#123;</div><div class=\"line\">    <span class=\"keyword\">self</span>.BValue.text = valueFormat(x);</div><div class=\"line\">&#125;];</div></pre></td></tr></table></figure>\n<p>是不是超级简单！</p>\n<h2 id=\"顾虑\"><a href=\"#顾虑\" class=\"headerlink\" title=\"顾虑\"></a>顾虑</h2><p>可是我有一个问题：</p>\n<ul>\n<li>OC属于运行时语法，这个里面的<code>id x</code>的不确定因素可能会导致类型识别出现错误。如果说项目是多人维护，那么A可能不知道B写的Signal走的类型是什么，所以这个问题就不适用于松散的多人开发。如果需要使用RAC恐怕需要在项目启动时进行规避这些不确定的问题才能引入。</li>\n</ul>\n<h1 id=\"Swift简单食用方法\"><a href=\"#Swift简单食用方法\" class=\"headerlink\" title=\"Swift简单食用方法\"></a>Swift简单食用方法</h1><p>在<a href=\"https://github.com/ReactiveCocoa/ReactiveCocoa\" target=\"_blank\" rel=\"external\">ReactiveCocoa</a>的<a href=\"https://github.com/ReactiveCocoa/ReactiveCocoa#objective-c-and-swift\" target=\"_blank\" rel=\"external\">README.md</a>中有这么一段话：</p>\n<blockquote>\n<h2 id=\"Objective-C-and-Swift\"><a href=\"#Objective-C-and-Swift\" class=\"headerlink\" title=\"Objective-C and Swift\"></a>Objective-C and Swift</h2><p>  Although ReactiveCocoa was started as an Objective-C framework, as of [version<br>  3.0][CHANGELOG], all major feature development is concentrated on the [Swift API][].</p>\n<p>  RAC’s [Objective-C API][] and Swift API are entirely separate, but there is<br>  a [bridge][Objective-C Bridging] to convert between the two. This<br>  is mostly meant as a compatibility layer for older ReactiveCocoa projects, or to<br>  use Cocoa extensions which haven’t been added to the Swift API yet.</p>\n<p>  The Objective-C API will continue to exist and be supported for the foreseeable<br>  future, but it won’t receive many improvements. For more information about using<br>  this API, please consult our [legacy documentation][].</p>\n<p>  <strong>We highly recommend that all new projects use the Swift API.</strong></p>\n</blockquote>\n","excerpt":"<p>对于目前的项目，如果引用RAC，会对项目造成哪些影响的相关思考。</p>","more":"<h1 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h1><p>众所周知，RAC很火，有很多崇拜者。本文只是一个新手第一次使用RAC时候所顾忌的一些问题，如果有比较好的解决方案及时告知我，我会及时更改。</p>\n<h1 id=\"OC简单食用方法\"><a href=\"#OC简单食用方法\" class=\"headerlink\" title=\"OC简单食用方法\"></a>OC简单食用方法</h1><p>先来个例子代码：</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">RACSignal *RSignal = [[<span class=\"keyword\">self</span>.R rac_newValueChannelWithNilValue:@<span class=\"number\">0</span>] startWith:@(<span class=\"keyword\">self</span>.R.value)];</div><div class=\"line\">RACSignal *GSignal = [[<span class=\"keyword\">self</span>.G rac_newValueChannelWithNilValue:@<span class=\"number\">0</span>] startWith:@(<span class=\"keyword\">self</span>.G.value)];</div><div class=\"line\">RACSignal *BSignal = [[<span class=\"keyword\">self</span>.B rac_newValueChannelWithNilValue:@<span class=\"number\">0</span>] startWith:@(<span class=\"keyword\">self</span>.B.value)];</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">NSString</span>*(^valueFormat)(<span class=\"built_in\">NSNumber</span> *value) = ^(<span class=\"built_in\">NSNumber</span> *value) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%.0f\"</span>, [value doubleValue]*<span class=\"number\">255</span>];</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">[RSignal subscribeNext:^(<span class=\"keyword\">id</span> x) &#123;</div><div class=\"line\">    <span class=\"keyword\">self</span>.RVaule.text = valueFormat(x);</div><div class=\"line\">&#125;];</div><div class=\"line\">[GSignal subscribeNext:^(<span class=\"keyword\">id</span> x) &#123;</div><div class=\"line\">    <span class=\"keyword\">self</span>.GValue.text = valueFormat(x);</div><div class=\"line\">&#125;];</div><div class=\"line\">[BSignal subscribeNext:^(<span class=\"keyword\">id</span> x) &#123;</div><div class=\"line\">    <span class=\"keyword\">self</span>.BValue.text = valueFormat(x);</div><div class=\"line\">&#125;];</div></pre></td></tr></table></figure>\n<p>是不是超级简单！</p>\n<h2 id=\"顾虑\"><a href=\"#顾虑\" class=\"headerlink\" title=\"顾虑\"></a>顾虑</h2><p>可是我有一个问题：</p>\n<ul>\n<li>OC属于运行时语法，这个里面的<code>id x</code>的不确定因素可能会导致类型识别出现错误。如果说项目是多人维护，那么A可能不知道B写的Signal走的类型是什么，所以这个问题就不适用于松散的多人开发。如果需要使用RAC恐怕需要在项目启动时进行规避这些不确定的问题才能引入。</li>\n</ul>\n<h1 id=\"Swift简单食用方法\"><a href=\"#Swift简单食用方法\" class=\"headerlink\" title=\"Swift简单食用方法\"></a>Swift简单食用方法</h1><p>在<a href=\"https://github.com/ReactiveCocoa/ReactiveCocoa\">ReactiveCocoa</a>的<a href=\"https://github.com/ReactiveCocoa/ReactiveCocoa#objective-c-and-swift\">README.md</a>中有这么一段话：</p>\n<blockquote>\n<h2 id=\"Objective-C-and-Swift\"><a href=\"#Objective-C-and-Swift\" class=\"headerlink\" title=\"Objective-C and Swift\"></a>Objective-C and Swift</h2><p>  Although ReactiveCocoa was started as an Objective-C framework, as of [version<br>  3.0][CHANGELOG], all major feature development is concentrated on the [Swift API][].</p>\n<p>  RAC’s [Objective-C API][] and Swift API are entirely separate, but there is<br>  a [bridge][Objective-C Bridging] to convert between the two. This<br>  is mostly meant as a compatibility layer for older ReactiveCocoa projects, or to<br>  use Cocoa extensions which haven’t been added to the Swift API yet.</p>\n<p>  The Objective-C API will continue to exist and be supported for the foreseeable<br>  future, but it won’t receive many improvements. For more information about using<br>  this API, please consult our [legacy documentation][].</p>\n<p>  <strong>We highly recommend that all new projects use the Swift API.</strong></p>\n</blockquote>"},{"title":"开发小记","date":"2016-07-28T06:52:22.000Z","_content":"\n\n开发中的小笔记。记录开发中的点滴滴点。\n\n<!--more-->\n\n- NAN\n  - 当`NSUInteger 0 - 1`时，运算结果为 NAN，iOS中有一个宏`isnan(x)`返回是否为nan。另外这里有一篇文章[Objective-C 中 判断 NaN](http://blog.csdn.net/toss156/article/details/7101885)大致记录了一下\n  ```objc\n  //  math.h  #56\n\n  #if defined(__GNUC__)\n  #   define    HUGE_VAL     __builtin_huge_val()\n  #   define    HUGE_VALF    __builtin_huge_valf()\n  #   define    HUGE_VALL    __builtin_huge_vall()\n  #   define    NAN          __builtin_nanf(\"0x7fc00000\")\n  #else\n  #   define    HUGE_VAL     1e500\n  #   define    HUGE_VALF    1e50f\n  #   define    HUGE_VALL    1e5000L\n  #   define    NAN          __nan()\n  #endif\n\n```\n  \n  - 另外，NAN不能直接判断 == 需要调用下面的宏。否则会发生莫名其妙的问题\n  ``` objc\n    //  math.h  #178\n\n  #define isnan(x)                                                         \\\n      ( sizeof(x) == sizeof(float)  ? __inline_isnanf((float)(x))          \\\n      : sizeof(x) == sizeof(double) ? __inline_isnand((double)(x))         \\\n                                    : __inline_isnanl((long double)(x)))\n```\n\n- 论项目架构设计的重要性 \n  - 规范化\n  - 筛选的坑 \n  - 常见布局BUG \n  - 线程安全\n  \n- 百度地图的坑\n  - 设置经纬度缓慢\n  - 刷新缓慢\n\n- 选择图片时候默认方法选择不到系统的云端图片，但是默认单张选择器却可以！\n  - 16G手机存储空间不够，图片转到了云端，会出现相册中的照片无法选择的情况\n  \n- 无埋点技术的讨论\n\n- 多个window的显示、删除、操作问题\n\n- 使用HTTP架设日志实时显示系统","source":"_posts/note.md","raw":"---\ntitle: 开发小记\ndate: 2016-07-28 14:52:22\ntags: \ncategories:\n    - 笔记\n---\n\n\n开发中的小笔记。记录开发中的点滴滴点。\n\n<!--more-->\n\n- NAN\n  - 当`NSUInteger 0 - 1`时，运算结果为 NAN，iOS中有一个宏`isnan(x)`返回是否为nan。另外这里有一篇文章[Objective-C 中 判断 NaN](http://blog.csdn.net/toss156/article/details/7101885)大致记录了一下\n  ```objc\n  //  math.h  #56\n\n  #if defined(__GNUC__)\n  #   define    HUGE_VAL     __builtin_huge_val()\n  #   define    HUGE_VALF    __builtin_huge_valf()\n  #   define    HUGE_VALL    __builtin_huge_vall()\n  #   define    NAN          __builtin_nanf(\"0x7fc00000\")\n  #else\n  #   define    HUGE_VAL     1e500\n  #   define    HUGE_VALF    1e50f\n  #   define    HUGE_VALL    1e5000L\n  #   define    NAN          __nan()\n  #endif\n\n```\n  \n  - 另外，NAN不能直接判断 == 需要调用下面的宏。否则会发生莫名其妙的问题\n  ``` objc\n    //  math.h  #178\n\n  #define isnan(x)                                                         \\\n      ( sizeof(x) == sizeof(float)  ? __inline_isnanf((float)(x))          \\\n      : sizeof(x) == sizeof(double) ? __inline_isnand((double)(x))         \\\n                                    : __inline_isnanl((long double)(x)))\n```\n\n- 论项目架构设计的重要性 \n  - 规范化\n  - 筛选的坑 \n  - 常见布局BUG \n  - 线程安全\n  \n- 百度地图的坑\n  - 设置经纬度缓慢\n  - 刷新缓慢\n\n- 选择图片时候默认方法选择不到系统的云端图片，但是默认单张选择器却可以！\n  - 16G手机存储空间不够，图片转到了云端，会出现相册中的照片无法选择的情况\n  \n- 无埋点技术的讨论\n\n- 多个window的显示、删除、操作问题\n\n- 使用HTTP架设日志实时显示系统","slug":"note","published":1,"updated":"2016-10-22T13:55:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixbaqyn0000hcb6ar10202wt","content":"<p>开发中的小笔记。记录开发中的点滴滴点。</p>\n<a id=\"more\"></a>\n<ul>\n<li>NAN<ul>\n<li>当<code>NSUInteger 0 - 1</code>时，运算结果为 NAN，iOS中有一个宏<code>isnan(x)</code>返回是否为nan。另外这里有一篇文章<a href=\"http://blog.csdn.net/toss156/article/details/7101885\" target=\"_blank\" rel=\"external\">Objective-C 中 判断 NaN</a>大致记录了一下<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//  math.h  #56</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#if defined(__GNUC__)</span></div><div class=\"line\"><span class=\"meta\">#   define    HUGE_VAL     __builtin_huge_val()</span></div><div class=\"line\"><span class=\"meta\">#   define    HUGE_VALF    __builtin_huge_valf()</span></div><div class=\"line\"><span class=\"meta\">#   define    HUGE_VALL    __builtin_huge_vall()</span></div><div class=\"line\"><span class=\"meta\">#   define    NAN          __builtin_nanf(<span class=\"meta-string\">\"0x7fc00000\"</span>)</span></div><div class=\"line\"><span class=\"meta\">#else</span></div><div class=\"line\"><span class=\"meta\">#   define    HUGE_VAL     1e500</span></div><div class=\"line\"><span class=\"meta\">#   define    HUGE_VALF    1e50f</span></div><div class=\"line\"><span class=\"meta\">#   define    HUGE_VALL    1e5000L</span></div><div class=\"line\"><span class=\"meta\">#   define    NAN          __nan()</span></div><div class=\"line\"><span class=\"meta\">#endif</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>另外，NAN不能直接判断 == 需要调用下面的宏。否则会发生莫名其妙的问题<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">  <span class=\"comment\">//  math.h  #178</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#define isnan(x)                                                         \\</span></div><div class=\"line\">    ( <span class=\"keyword\">sizeof</span>(x) == <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">float</span>)  ? __inline_isnanf((<span class=\"keyword\">float</span>)(x))          \\</div><div class=\"line\">    : <span class=\"keyword\">sizeof</span>(x) == <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">double</span>) ? __inline_isnand((<span class=\"keyword\">double</span>)(x))         \\</div><div class=\"line\">                                  : __inline_isnanl((<span class=\"keyword\">long</span> <span class=\"keyword\">double</span>)(x)))</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>论项目架构设计的重要性 </p>\n<ul>\n<li>规范化</li>\n<li>筛选的坑 </li>\n<li>常见布局BUG </li>\n<li>线程安全</li>\n</ul>\n</li>\n<li><p>百度地图的坑</p>\n<ul>\n<li>设置经纬度缓慢</li>\n<li>刷新缓慢</li>\n</ul>\n</li>\n<li><p>选择图片时候默认方法选择不到系统的云端图片，但是默认单张选择器却可以！</p>\n<ul>\n<li>16G手机存储空间不够，图片转到了云端，会出现相册中的照片无法选择的情况</li>\n</ul>\n</li>\n<li><p>无埋点技术的讨论</p>\n</li>\n<li><p>多个window的显示、删除、操作问题</p>\n</li>\n<li><p>使用HTTP架设日志实时显示系统</p>\n</li>\n</ul>\n","excerpt":"<p>开发中的小笔记。记录开发中的点滴滴点。</p>","more":"<ul>\n<li>NAN<ul>\n<li>当<code>NSUInteger 0 - 1</code>时，运算结果为 NAN，iOS中有一个宏<code>isnan(x)</code>返回是否为nan。另外这里有一篇文章<a href=\"http://blog.csdn.net/toss156/article/details/7101885\">Objective-C 中 判断 NaN</a>大致记录了一下<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//  math.h  #56</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#if defined(__GNUC__)</span></div><div class=\"line\"><span class=\"meta\">#   define    HUGE_VAL     __builtin_huge_val()</span></div><div class=\"line\"><span class=\"meta\">#   define    HUGE_VALF    __builtin_huge_valf()</span></div><div class=\"line\"><span class=\"meta\">#   define    HUGE_VALL    __builtin_huge_vall()</span></div><div class=\"line\"><span class=\"meta\">#   define    NAN          __builtin_nanf(<span class=\"meta-string\">\"0x7fc00000\"</span>)</span></div><div class=\"line\"><span class=\"meta\">#else</span></div><div class=\"line\"><span class=\"meta\">#   define    HUGE_VAL     1e500</span></div><div class=\"line\"><span class=\"meta\">#   define    HUGE_VALF    1e50f</span></div><div class=\"line\"><span class=\"meta\">#   define    HUGE_VALL    1e5000L</span></div><div class=\"line\"><span class=\"meta\">#   define    NAN          __nan()</span></div><div class=\"line\"><span class=\"meta\">#endif</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>另外，NAN不能直接判断 == 需要调用下面的宏。否则会发生莫名其妙的问题<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">  <span class=\"comment\">//  math.h  #178</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#define isnan(x)                                                         \\</span></div><div class=\"line\">    ( <span class=\"keyword\">sizeof</span>(x) == <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">float</span>)  ? __inline_isnanf((<span class=\"keyword\">float</span>)(x))          \\</div><div class=\"line\">    : <span class=\"keyword\">sizeof</span>(x) == <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">double</span>) ? __inline_isnand((<span class=\"keyword\">double</span>)(x))         \\</div><div class=\"line\">                                  : __inline_isnanl((<span class=\"keyword\">long</span> <span class=\"keyword\">double</span>)(x)))</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>论项目架构设计的重要性 </p>\n<ul>\n<li>规范化</li>\n<li>筛选的坑 </li>\n<li>常见布局BUG </li>\n<li>线程安全</li>\n</ul>\n</li>\n<li><p>百度地图的坑</p>\n<ul>\n<li>设置经纬度缓慢</li>\n<li>刷新缓慢</li>\n</ul>\n</li>\n<li><p>选择图片时候默认方法选择不到系统的云端图片，但是默认单张选择器却可以！</p>\n<ul>\n<li>16G手机存储空间不够，图片转到了云端，会出现相册中的照片无法选择的情况</li>\n</ul>\n</li>\n<li><p>无埋点技术的讨论</p>\n</li>\n<li><p>多个window的显示、删除、操作问题</p>\n</li>\n<li><p>使用HTTP架设日志实时显示系统</p>\n</li>\n</ul>"},{"title":"UI素材与代码解耦的讨论与思考","date":"2016-08-28T04:16:02.000Z","_content":"\n个人对UI素材和代码的解耦的一些粗浅的看法。比如：解耦方案、是否该解耦。\n\n<!--more-->\n\n## 起因\n  \n  群里听到有人讨论这个话题，当时觉得比较新鲜，就十分好奇的请教了两位经验丰富的@kkk、@AK，虽然未得其中真髓，但是也得到一些自己的思考。总结一下两人的方案，以及自己的思考，\n  \n  \n## 问题\n  \n  代码内部引入的素材属于设计管理，代码则是码农管理，从这个角度来说两个工做都有码农管理则是一种耦合，为了减轻设计师频繁更换素材而带来的码农的无休止的协作，所以可以进行着方面的解藕。\n  \n  \n## 解决方案\n\n  哪坏哪补。有问题就会有解决方案。群中说的[方案一](#方案一)由于当时不方便，所以并没有弄明白。[方案二](#方案二)、[方案三](#方案三)是自己的一些解决方案。\n  \n  \n### <a name=\"方案一\">方案一</a>\n\n  群中讨论的是素材、代码放在一个仓库，分支不同，使用脚本进行整合(其实并没有想明白怎么弄。。下周请教一下)。另外，@夏汁泡泡 还有一个简化就是这个处理的脚本可以放在[Add Run Script Build Phase](https://developer.apple.com/library/ios/recipes/xcode_help-project_editor/Articles/AddingaRunScriptBuildPhase.html)，暴露出来已知的问题：\n  \n  - 操作麻烦\n  - 图片可能重复\n  - 命名规范\n\n\n### <a name=\"方案二\">方案二</a>\n\n  按照Pods的集成方式，可以将素材看作一个第三方库，直接将素材做成一个bundle，采用Pods私有库或者其他方式放入工程。暴露出来已知的问题：\n \n  - 什么时候更新这个bundle\n  - 多人合作时这个bundle冲突问题\n  - 命名规范\n\n\n### <a name=\"方案三\">方案三</a>\n\n  工程使用`xcassets`进行素材打包，然后使用子库进行持续集成。这样，设计师的素材可以放在另一个独立素材仓库，内含更新脚本，直接将素材生成对应的`xcassets`结构，并上传至子库。这样设计师做完素材直接扔在文件夹中，自动或手动跑一下脚本即可更新到素材仓库。暴露出来已知的问题：\n  \n  - 由于没有测试过，不知道如果素材比较多的话会不会发生冲突。因该不会吧，都是加文件或者修改😂 (有时间去研究一下之后更新)\n  - 命名规范的问题依旧存在\n  \n### <a name=\"方案四\">方案四</a>\n\n  __ 字体库 __。最近同事提出关于用字体库去存储素材图片的方案。感觉非常的赞，虽然并未实践，但是这种方案就像emoji一样，不但减少了相同图片内容之间存在多个不同尺寸版本的问题，也能够比较好的进行压缩管理。设计师需要做的就是做出一套字体库，然后将所有的素材图全部按照设计字体的方案进行设计和制作，这样在使用的时候只需要导入一个字体文件就好了。对于这个字体文件如何管理都好说，毕竟只有一个字体文件。字体库的制作方面还不是很了解，所以只提着么一下吧嘿嘿。。\n  \n  \n  \n## 思考\n\n  好了，重要的问题来了，上面的问题都是存在命名规范的问题。此问题如何化解呢？\n  \n  素材的引入需根据素材名写入代码中，那么如何才能不用素材名呢？那时不可能的😝，毕竟你要有一个唯一标识符去标志着一个素材。可能有的人说可以做一个json用来保存代码的命名和素材的命名呀，我只想说MDZZ，那不是有两套需要维护的命名规则么。。得不偿失。\n  \n  这个命名的问题其实不能复杂化。参看iOS的项目国际化操作，使用一个key作为文案的唯一标识符，需要显示该文案，通过这个唯一标识符就能直接取到。回头看下素材，是不是也能炮制一个呢？\n  \n  如果素材名字有统一的规则，就不需要这样的key作为统一标识符，直接使用素材名字即可，这样维护一套素材命名规则总比两套更容易维护。所以，直接使用素材名即可。\n  \n  如果素材不能统一命名规则，那么这样的对照文件存在也是很不错的。话又说回来，要进行UI素材和代码的解耦，素材名都不能统一，还如何解耦，此问题也不存在了。。\n  \n  退一步，我们的目的是让素材让设计师自己维护，代码不去维护素材。设计师和码农的耦合在于图片本身的交换比较烦。不论采用哪种解耦方案，都是把图片的耦合转换为图片名字的耦合(也可以理解为素材对应的KEY的耦合)。结果是 __ 为了解除一个耦合,而引入了一个新的耦合 __ 。个人认为这样是不靠谱的。。除非有强力的人去推动设计师走标准的命名。\n  \n  \n## 结论\n\n  其实这个问题大可不必纠结，如果有强力的人去推动这个标准持续走下去那么这个问题才有价值。如果真的要进行题中说的代码解耦的话，我认为第三种是比较靠谱的。 __ 命名标准、命名标准、命名标准... __。\n  \n  \n## 说明\n\n  经验有限，如果有更好的方案，望告知。拜谢！","source":"_posts/ui-source-and-code-decoupling.md","raw":"---\ntitle: UI素材与代码解耦的讨论与思考\ndate: 2016-08-28 12:16:02\ntags:\n  - iOS\n---\n\n个人对UI素材和代码的解耦的一些粗浅的看法。比如：解耦方案、是否该解耦。\n\n<!--more-->\n\n## 起因\n  \n  群里听到有人讨论这个话题，当时觉得比较新鲜，就十分好奇的请教了两位经验丰富的@kkk、@AK，虽然未得其中真髓，但是也得到一些自己的思考。总结一下两人的方案，以及自己的思考，\n  \n  \n## 问题\n  \n  代码内部引入的素材属于设计管理，代码则是码农管理，从这个角度来说两个工做都有码农管理则是一种耦合，为了减轻设计师频繁更换素材而带来的码农的无休止的协作，所以可以进行着方面的解藕。\n  \n  \n## 解决方案\n\n  哪坏哪补。有问题就会有解决方案。群中说的[方案一](#方案一)由于当时不方便，所以并没有弄明白。[方案二](#方案二)、[方案三](#方案三)是自己的一些解决方案。\n  \n  \n### <a name=\"方案一\">方案一</a>\n\n  群中讨论的是素材、代码放在一个仓库，分支不同，使用脚本进行整合(其实并没有想明白怎么弄。。下周请教一下)。另外，@夏汁泡泡 还有一个简化就是这个处理的脚本可以放在[Add Run Script Build Phase](https://developer.apple.com/library/ios/recipes/xcode_help-project_editor/Articles/AddingaRunScriptBuildPhase.html)，暴露出来已知的问题：\n  \n  - 操作麻烦\n  - 图片可能重复\n  - 命名规范\n\n\n### <a name=\"方案二\">方案二</a>\n\n  按照Pods的集成方式，可以将素材看作一个第三方库，直接将素材做成一个bundle，采用Pods私有库或者其他方式放入工程。暴露出来已知的问题：\n \n  - 什么时候更新这个bundle\n  - 多人合作时这个bundle冲突问题\n  - 命名规范\n\n\n### <a name=\"方案三\">方案三</a>\n\n  工程使用`xcassets`进行素材打包，然后使用子库进行持续集成。这样，设计师的素材可以放在另一个独立素材仓库，内含更新脚本，直接将素材生成对应的`xcassets`结构，并上传至子库。这样设计师做完素材直接扔在文件夹中，自动或手动跑一下脚本即可更新到素材仓库。暴露出来已知的问题：\n  \n  - 由于没有测试过，不知道如果素材比较多的话会不会发生冲突。因该不会吧，都是加文件或者修改😂 (有时间去研究一下之后更新)\n  - 命名规范的问题依旧存在\n  \n### <a name=\"方案四\">方案四</a>\n\n  __ 字体库 __。最近同事提出关于用字体库去存储素材图片的方案。感觉非常的赞，虽然并未实践，但是这种方案就像emoji一样，不但减少了相同图片内容之间存在多个不同尺寸版本的问题，也能够比较好的进行压缩管理。设计师需要做的就是做出一套字体库，然后将所有的素材图全部按照设计字体的方案进行设计和制作，这样在使用的时候只需要导入一个字体文件就好了。对于这个字体文件如何管理都好说，毕竟只有一个字体文件。字体库的制作方面还不是很了解，所以只提着么一下吧嘿嘿。。\n  \n  \n  \n## 思考\n\n  好了，重要的问题来了，上面的问题都是存在命名规范的问题。此问题如何化解呢？\n  \n  素材的引入需根据素材名写入代码中，那么如何才能不用素材名呢？那时不可能的😝，毕竟你要有一个唯一标识符去标志着一个素材。可能有的人说可以做一个json用来保存代码的命名和素材的命名呀，我只想说MDZZ，那不是有两套需要维护的命名规则么。。得不偿失。\n  \n  这个命名的问题其实不能复杂化。参看iOS的项目国际化操作，使用一个key作为文案的唯一标识符，需要显示该文案，通过这个唯一标识符就能直接取到。回头看下素材，是不是也能炮制一个呢？\n  \n  如果素材名字有统一的规则，就不需要这样的key作为统一标识符，直接使用素材名字即可，这样维护一套素材命名规则总比两套更容易维护。所以，直接使用素材名即可。\n  \n  如果素材不能统一命名规则，那么这样的对照文件存在也是很不错的。话又说回来，要进行UI素材和代码的解耦，素材名都不能统一，还如何解耦，此问题也不存在了。。\n  \n  退一步，我们的目的是让素材让设计师自己维护，代码不去维护素材。设计师和码农的耦合在于图片本身的交换比较烦。不论采用哪种解耦方案，都是把图片的耦合转换为图片名字的耦合(也可以理解为素材对应的KEY的耦合)。结果是 __ 为了解除一个耦合,而引入了一个新的耦合 __ 。个人认为这样是不靠谱的。。除非有强力的人去推动设计师走标准的命名。\n  \n  \n## 结论\n\n  其实这个问题大可不必纠结，如果有强力的人去推动这个标准持续走下去那么这个问题才有价值。如果真的要进行题中说的代码解耦的话，我认为第三种是比较靠谱的。 __ 命名标准、命名标准、命名标准... __。\n  \n  \n## 说明\n\n  经验有限，如果有更好的方案，望告知。拜谢！","slug":"ui-source-and-code-decoupling","published":1,"updated":"2016-10-22T14:00:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixbaqyn2000kcb6a1zeloihp","content":"<p>个人对UI素材和代码的解耦的一些粗浅的看法。比如：解耦方案、是否该解耦。</p>\n<a id=\"more\"></a>\n<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>  群里听到有人讨论这个话题，当时觉得比较新鲜，就十分好奇的请教了两位经验丰富的@kkk、@AK，虽然未得其中真髓，但是也得到一些自己的思考。总结一下两人的方案，以及自己的思考，</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>  代码内部引入的素材属于设计管理，代码则是码农管理，从这个角度来说两个工做都有码农管理则是一种耦合，为了减轻设计师频繁更换素材而带来的码农的无休止的协作，所以可以进行着方面的解藕。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>  哪坏哪补。有问题就会有解决方案。群中说的<a href=\"#方案一\">方案一</a>由于当时不方便，所以并没有弄明白。<a href=\"#方案二\">方案二</a>、<a href=\"#方案三\">方案三</a>是自己的一些解决方案。</p>\n<h3 id=\"方案一\"><a href=\"#方案一\" class=\"headerlink\" title=\"方案一\"></a><a name=\"方案一\">方案一</a></h3><p>  群中讨论的是素材、代码放在一个仓库，分支不同，使用脚本进行整合(其实并没有想明白怎么弄。。下周请教一下)。另外，@夏汁泡泡 还有一个简化就是这个处理的脚本可以放在<a href=\"https://developer.apple.com/library/ios/recipes/xcode_help-project_editor/Articles/AddingaRunScriptBuildPhase.html\" target=\"_blank\" rel=\"external\">Add Run Script Build Phase</a>，暴露出来已知的问题：</p>\n<ul>\n<li>操作麻烦</li>\n<li>图片可能重复</li>\n<li>命名规范</li>\n</ul>\n<h3 id=\"方案二\"><a href=\"#方案二\" class=\"headerlink\" title=\"方案二\"></a><a name=\"方案二\">方案二</a></h3><p>  按照Pods的集成方式，可以将素材看作一个第三方库，直接将素材做成一个bundle，采用Pods私有库或者其他方式放入工程。暴露出来已知的问题：</p>\n<ul>\n<li>什么时候更新这个bundle</li>\n<li>多人合作时这个bundle冲突问题</li>\n<li>命名规范</li>\n</ul>\n<h3 id=\"方案三\"><a href=\"#方案三\" class=\"headerlink\" title=\"方案三\"></a><a name=\"方案三\">方案三</a></h3><p>  工程使用<code>xcassets</code>进行素材打包，然后使用子库进行持续集成。这样，设计师的素材可以放在另一个独立素材仓库，内含更新脚本，直接将素材生成对应的<code>xcassets</code>结构，并上传至子库。这样设计师做完素材直接扔在文件夹中，自动或手动跑一下脚本即可更新到素材仓库。暴露出来已知的问题：</p>\n<ul>\n<li>由于没有测试过，不知道如果素材比较多的话会不会发生冲突。因该不会吧，都是加文件或者修改😂 (有时间去研究一下之后更新)</li>\n<li>命名规范的问题依旧存在</li>\n</ul>\n<h3 id=\"方案四\"><a href=\"#方案四\" class=\"headerlink\" title=\"方案四\"></a><a name=\"方案四\">方案四</a></h3><p>  <strong> 字体库 </strong>。最近同事提出关于用字体库去存储素材图片的方案。感觉非常的赞，虽然并未实践，但是这种方案就像emoji一样，不但减少了相同图片内容之间存在多个不同尺寸版本的问题，也能够比较好的进行压缩管理。设计师需要做的就是做出一套字体库，然后将所有的素材图全部按照设计字体的方案进行设计和制作，这样在使用的时候只需要导入一个字体文件就好了。对于这个字体文件如何管理都好说，毕竟只有一个字体文件。字体库的制作方面还不是很了解，所以只提着么一下吧嘿嘿。。</p>\n<h2 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h2><p>  好了，重要的问题来了，上面的问题都是存在命名规范的问题。此问题如何化解呢？</p>\n<p>  素材的引入需根据素材名写入代码中，那么如何才能不用素材名呢？那时不可能的😝，毕竟你要有一个唯一标识符去标志着一个素材。可能有的人说可以做一个json用来保存代码的命名和素材的命名呀，我只想说MDZZ，那不是有两套需要维护的命名规则么。。得不偿失。</p>\n<p>  这个命名的问题其实不能复杂化。参看iOS的项目国际化操作，使用一个key作为文案的唯一标识符，需要显示该文案，通过这个唯一标识符就能直接取到。回头看下素材，是不是也能炮制一个呢？</p>\n<p>  如果素材名字有统一的规则，就不需要这样的key作为统一标识符，直接使用素材名字即可，这样维护一套素材命名规则总比两套更容易维护。所以，直接使用素材名即可。</p>\n<p>  如果素材不能统一命名规则，那么这样的对照文件存在也是很不错的。话又说回来，要进行UI素材和代码的解耦，素材名都不能统一，还如何解耦，此问题也不存在了。。</p>\n<p>  退一步，我们的目的是让素材让设计师自己维护，代码不去维护素材。设计师和码农的耦合在于图片本身的交换比较烦。不论采用哪种解耦方案，都是把图片的耦合转换为图片名字的耦合(也可以理解为素材对应的KEY的耦合)。结果是 <strong> 为了解除一个耦合,而引入了一个新的耦合 </strong> 。个人认为这样是不靠谱的。。除非有强力的人去推动设计师走标准的命名。</p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>  其实这个问题大可不必纠结，如果有强力的人去推动这个标准持续走下去那么这个问题才有价值。如果真的要进行题中说的代码解耦的话，我认为第三种是比较靠谱的。 <strong> 命名标准、命名标准、命名标准… </strong>。</p>\n<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><p>  经验有限，如果有更好的方案，望告知。拜谢！</p>\n","excerpt":"<p>个人对UI素材和代码的解耦的一些粗浅的看法。比如：解耦方案、是否该解耦。</p>","more":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>  群里听到有人讨论这个话题，当时觉得比较新鲜，就十分好奇的请教了两位经验丰富的@kkk、@AK，虽然未得其中真髓，但是也得到一些自己的思考。总结一下两人的方案，以及自己的思考，</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>  代码内部引入的素材属于设计管理，代码则是码农管理，从这个角度来说两个工做都有码农管理则是一种耦合，为了减轻设计师频繁更换素材而带来的码农的无休止的协作，所以可以进行着方面的解藕。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>  哪坏哪补。有问题就会有解决方案。群中说的<a href=\"#方案一\">方案一</a>由于当时不方便，所以并没有弄明白。<a href=\"#方案二\">方案二</a>、<a href=\"#方案三\">方案三</a>是自己的一些解决方案。</p>\n<h3 id=\"方案一\"><a href=\"#方案一\" class=\"headerlink\" title=\"方案一\"></a><a name=\"方案一\">方案一</a></h3><p>  群中讨论的是素材、代码放在一个仓库，分支不同，使用脚本进行整合(其实并没有想明白怎么弄。。下周请教一下)。另外，@夏汁泡泡 还有一个简化就是这个处理的脚本可以放在<a href=\"https://developer.apple.com/library/ios/recipes/xcode_help-project_editor/Articles/AddingaRunScriptBuildPhase.html\">Add Run Script Build Phase</a>，暴露出来已知的问题：</p>\n<ul>\n<li>操作麻烦</li>\n<li>图片可能重复</li>\n<li>命名规范</li>\n</ul>\n<h3 id=\"方案二\"><a href=\"#方案二\" class=\"headerlink\" title=\"方案二\"></a><a name=\"方案二\">方案二</a></h3><p>  按照Pods的集成方式，可以将素材看作一个第三方库，直接将素材做成一个bundle，采用Pods私有库或者其他方式放入工程。暴露出来已知的问题：</p>\n<ul>\n<li>什么时候更新这个bundle</li>\n<li>多人合作时这个bundle冲突问题</li>\n<li>命名规范</li>\n</ul>\n<h3 id=\"方案三\"><a href=\"#方案三\" class=\"headerlink\" title=\"方案三\"></a><a name=\"方案三\">方案三</a></h3><p>  工程使用<code>xcassets</code>进行素材打包，然后使用子库进行持续集成。这样，设计师的素材可以放在另一个独立素材仓库，内含更新脚本，直接将素材生成对应的<code>xcassets</code>结构，并上传至子库。这样设计师做完素材直接扔在文件夹中，自动或手动跑一下脚本即可更新到素材仓库。暴露出来已知的问题：</p>\n<ul>\n<li>由于没有测试过，不知道如果素材比较多的话会不会发生冲突。因该不会吧，都是加文件或者修改😂 (有时间去研究一下之后更新)</li>\n<li>命名规范的问题依旧存在</li>\n</ul>\n<h3 id=\"方案四\"><a href=\"#方案四\" class=\"headerlink\" title=\"方案四\"></a><a name=\"方案四\">方案四</a></h3><p>  <strong> 字体库 </strong>。最近同事提出关于用字体库去存储素材图片的方案。感觉非常的赞，虽然并未实践，但是这种方案就像emoji一样，不但减少了相同图片内容之间存在多个不同尺寸版本的问题，也能够比较好的进行压缩管理。设计师需要做的就是做出一套字体库，然后将所有的素材图全部按照设计字体的方案进行设计和制作，这样在使用的时候只需要导入一个字体文件就好了。对于这个字体文件如何管理都好说，毕竟只有一个字体文件。字体库的制作方面还不是很了解，所以只提着么一下吧嘿嘿。。</p>\n<h2 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h2><p>  好了，重要的问题来了，上面的问题都是存在命名规范的问题。此问题如何化解呢？</p>\n<p>  素材的引入需根据素材名写入代码中，那么如何才能不用素材名呢？那时不可能的😝，毕竟你要有一个唯一标识符去标志着一个素材。可能有的人说可以做一个json用来保存代码的命名和素材的命名呀，我只想说MDZZ，那不是有两套需要维护的命名规则么。。得不偿失。</p>\n<p>  这个命名的问题其实不能复杂化。参看iOS的项目国际化操作，使用一个key作为文案的唯一标识符，需要显示该文案，通过这个唯一标识符就能直接取到。回头看下素材，是不是也能炮制一个呢？</p>\n<p>  如果素材名字有统一的规则，就不需要这样的key作为统一标识符，直接使用素材名字即可，这样维护一套素材命名规则总比两套更容易维护。所以，直接使用素材名即可。</p>\n<p>  如果素材不能统一命名规则，那么这样的对照文件存在也是很不错的。话又说回来，要进行UI素材和代码的解耦，素材名都不能统一，还如何解耦，此问题也不存在了。。</p>\n<p>  退一步，我们的目的是让素材让设计师自己维护，代码不去维护素材。设计师和码农的耦合在于图片本身的交换比较烦。不论采用哪种解耦方案，都是把图片的耦合转换为图片名字的耦合(也可以理解为素材对应的KEY的耦合)。结果是 <strong> 为了解除一个耦合,而引入了一个新的耦合 </strong> 。个人认为这样是不靠谱的。。除非有强力的人去推动设计师走标准的命名。</p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>  其实这个问题大可不必纠结，如果有强力的人去推动这个标准持续走下去那么这个问题才有价值。如果真的要进行题中说的代码解耦的话，我认为第三种是比较靠谱的。 <strong> 命名标准、命名标准、命名标准… </strong>。</p>\n<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><p>  经验有限，如果有更好的方案，望告知。拜谢！</p>"},{"title":"如何实现AppStore查看更多的方法","date":"2016-12-23T08:37:37.000Z","_content":"\n看到AppStore的`更多`效果，做的不错哎，本文尝试采用`exclusionPaths`进行实现。不过有瑕疵。。来年用追加的方式在实现一下。感觉追加的方式比较简单。，\n\n<!--more-->\n\n# 效果\n<img src=\"http://7xvzwi.com1.z0.glb.clouddn.com/UITextKit-AppStore-more-scene.gif://7xvzwi.com1.z0.glb.clouddn.com/leanote_new_logo.png\" alt=\"效果图\">\n\n# 简要说明\n  App Store中的查看更多动画是不是很给力？可是做起来确不知道如何下手？这里我提供一种UITextKit的方法来简单的实现一下。\n  \n  为了让例子简单，我就直接写了个more，那个view是自定义的，随便添加的，和本身的文本展示的并没有什么关系。\n  \n  为了让最后的那个moreView更加好用，增加了已经展开显示全部是否隐藏的控制。\n  \n  \n# 代码\n\n  先看下Demo中调用吧：\n  ```swift\n  let info = KTJExclusionLabel()\n  info.exclusionView = more\n  info.isAutoHidenExclusionView = isAutoHiden.isOn\n  info.numberOfLines = Int.init(line.text ?? \"\") ?? 0\n  info.sizeToFit()\n  ```\n\n  然后KTJExclusionLabel的实现：\n  ```swift\n  //\n  //  KTJExclusionLabel.swift\n  //  UITextKit-AppStore-more\n  //\n  //  Created by 孙继刚 on 2016/12/24.\n  //  Copyright © 2016年 madordie. All rights reserved.\n  //\n\n  import UIKit\n\n  class KTJExclusionLabel: UITextView {\n\n      /// 行数\n      public var numberOfLines: Int {\n          set {\n              textContainer.maximumNumberOfLines = newValue\n          }\n          get {\n              return textContainer.maximumNumberOfLines\n          }\n      }\n\n      public var isAutoHidenExclusionView: Bool = false\n\n      /// 避让的view\n      public weak var exclusionView: UIView? {\n          didSet {\n              setNeedsLayout()\n          }\n      }\n\n      override init(frame: CGRect, textContainer: NSTextContainer?) {\n          super.init(frame: frame, textContainer: textContainer)\n          setup()\n      }\n\n      required init?(coder aDecoder: NSCoder) {\n          super.init(coder: aDecoder)\n          setup()\n      }\n\n      func setup() {\n          isEditable = true\n          textContainer.lineBreakMode = .byTruncatingTail\n      }\n\n      override func sizeToFit() {\n          //  对其API还不熟悉，还没有找到如何一次判断出是否已经展示完全。。找到后再更\n\n          let originLines = numberOfLines\n          numberOfLines = 0\n          let maxHeight = resizeThatFits(frame.size).height\n          numberOfLines = originLines\n          frame.size = resizeThatFits(frame.size)\n\n          exclusionView?.isHidden = false\n          if frame.height == maxHeight {\n              frame.size = resizeThatFits(frame.size, isOver: true)\n              if isAutoHidenExclusionView {\n                  exclusionView?.isHidden = true\n              }\n          }\n      }\n\n      func resizeThatFits(_ size: CGSize, isOver: Bool = false) -> CGSize {\n          var frame = CGRect.zero\n          frame.size = size\n\n          textContainer.exclusionPaths.removeAll()\n\n          var ovalPaths = [UIBezierPath]()\n          if let exclusionView = exclusionView {\n              var lastLineFrame = CGRect.zero\n              var lineIdx = 0\n              var lastFrame = CGRect.zero\n              layoutManager.enumerateLineFragments(forGlyphRange: NSMakeRange(0, text.characters.count)) { (rect1, rect2, textContainer, range, pointer) in\n                  if lineIdx < textContainer.maximumNumberOfLines {\n                      lastLineFrame = rect2\n                  }\n                  lineIdx += 1\n                  lastFrame = rect2\n              }\n\n              if lastLineFrame == CGRect.zero {\n                  lastLineFrame = lastFrame\n              }\n              //  矫正\n              lastLineFrame.origin.x += textContainerInset.left\n              lastLineFrame.origin.y += textContainerInset.top\n\n              //  为末尾算出最大的frame\n              lastLineFrame.origin.x = lastLineFrame.maxX\n              lastLineFrame.origin.y = lastLineFrame.minY\n              lastLineFrame.size.width = frame.width - lastLineFrame.minX\n              lastLineFrame.size = exclusionView.sizeThatFits(lastLineFrame.size)\n              if lastLineFrame.maxX >= frame.width {\n\n                  if isOver == false {\n                      lastLineFrame.origin.x -= lastLineFrame.maxX - frame.width + max(textContainerInset.bottom, textContainerInset.right)\n                  } else {\n                      lastLineFrame.origin.x = lastFrame.minX + textContainerInset.left + 5\n                      lastLineFrame.origin.y += lastFrame.height\n                  }\n              }\n              exclusionView.frame = convert(lastLineFrame, to: exclusionView.superview)\n\n              var ovalFrame = convert(exclusionView.bounds, from: exclusionView)\n              ovalFrame.origin.x += 5 + textContainerInset.left\n              ovalPaths.append(UIBezierPath(rect: ovalFrame))\n\n              if isOver, isAutoHidenExclusionView {\n                  frame.size.height = lastFrame.maxY + textContainerInset.bottom\n              } else {\n                  frame.size.height = ovalFrame.maxY + textContainerInset.bottom\n              }\n          } else {\n              frame.size = super.sizeThatFits(size)\n          }\n          textContainer.exclusionPaths = ovalPaths\n\n          return CGSize(width: frame.maxX, height: frame.maxY)\n      }\n  }\n\n  ```\n  代码只是简单的做了一个DEMO，并没有仔细的调试，如果使用的话可能看需要根据自己的需求进行简单的调试吧。比如说偏移量、布局之类的。\n  ","source":"_posts/uitextkit-ellipsis-sth-at-the-end.md","raw":"---\ntitle: 如何实现AppStore查看更多的方法\ndate: 2016-12-23 16:37:37\ntags:\n  - iOS\n---\n\n看到AppStore的`更多`效果，做的不错哎，本文尝试采用`exclusionPaths`进行实现。不过有瑕疵。。来年用追加的方式在实现一下。感觉追加的方式比较简单。，\n\n<!--more-->\n\n# 效果\n<img src=\"http://7xvzwi.com1.z0.glb.clouddn.com/UITextKit-AppStore-more-scene.gif://7xvzwi.com1.z0.glb.clouddn.com/leanote_new_logo.png\" alt=\"效果图\">\n\n# 简要说明\n  App Store中的查看更多动画是不是很给力？可是做起来确不知道如何下手？这里我提供一种UITextKit的方法来简单的实现一下。\n  \n  为了让例子简单，我就直接写了个more，那个view是自定义的，随便添加的，和本身的文本展示的并没有什么关系。\n  \n  为了让最后的那个moreView更加好用，增加了已经展开显示全部是否隐藏的控制。\n  \n  \n# 代码\n\n  先看下Demo中调用吧：\n  ```swift\n  let info = KTJExclusionLabel()\n  info.exclusionView = more\n  info.isAutoHidenExclusionView = isAutoHiden.isOn\n  info.numberOfLines = Int.init(line.text ?? \"\") ?? 0\n  info.sizeToFit()\n  ```\n\n  然后KTJExclusionLabel的实现：\n  ```swift\n  //\n  //  KTJExclusionLabel.swift\n  //  UITextKit-AppStore-more\n  //\n  //  Created by 孙继刚 on 2016/12/24.\n  //  Copyright © 2016年 madordie. All rights reserved.\n  //\n\n  import UIKit\n\n  class KTJExclusionLabel: UITextView {\n\n      /// 行数\n      public var numberOfLines: Int {\n          set {\n              textContainer.maximumNumberOfLines = newValue\n          }\n          get {\n              return textContainer.maximumNumberOfLines\n          }\n      }\n\n      public var isAutoHidenExclusionView: Bool = false\n\n      /// 避让的view\n      public weak var exclusionView: UIView? {\n          didSet {\n              setNeedsLayout()\n          }\n      }\n\n      override init(frame: CGRect, textContainer: NSTextContainer?) {\n          super.init(frame: frame, textContainer: textContainer)\n          setup()\n      }\n\n      required init?(coder aDecoder: NSCoder) {\n          super.init(coder: aDecoder)\n          setup()\n      }\n\n      func setup() {\n          isEditable = true\n          textContainer.lineBreakMode = .byTruncatingTail\n      }\n\n      override func sizeToFit() {\n          //  对其API还不熟悉，还没有找到如何一次判断出是否已经展示完全。。找到后再更\n\n          let originLines = numberOfLines\n          numberOfLines = 0\n          let maxHeight = resizeThatFits(frame.size).height\n          numberOfLines = originLines\n          frame.size = resizeThatFits(frame.size)\n\n          exclusionView?.isHidden = false\n          if frame.height == maxHeight {\n              frame.size = resizeThatFits(frame.size, isOver: true)\n              if isAutoHidenExclusionView {\n                  exclusionView?.isHidden = true\n              }\n          }\n      }\n\n      func resizeThatFits(_ size: CGSize, isOver: Bool = false) -> CGSize {\n          var frame = CGRect.zero\n          frame.size = size\n\n          textContainer.exclusionPaths.removeAll()\n\n          var ovalPaths = [UIBezierPath]()\n          if let exclusionView = exclusionView {\n              var lastLineFrame = CGRect.zero\n              var lineIdx = 0\n              var lastFrame = CGRect.zero\n              layoutManager.enumerateLineFragments(forGlyphRange: NSMakeRange(0, text.characters.count)) { (rect1, rect2, textContainer, range, pointer) in\n                  if lineIdx < textContainer.maximumNumberOfLines {\n                      lastLineFrame = rect2\n                  }\n                  lineIdx += 1\n                  lastFrame = rect2\n              }\n\n              if lastLineFrame == CGRect.zero {\n                  lastLineFrame = lastFrame\n              }\n              //  矫正\n              lastLineFrame.origin.x += textContainerInset.left\n              lastLineFrame.origin.y += textContainerInset.top\n\n              //  为末尾算出最大的frame\n              lastLineFrame.origin.x = lastLineFrame.maxX\n              lastLineFrame.origin.y = lastLineFrame.minY\n              lastLineFrame.size.width = frame.width - lastLineFrame.minX\n              lastLineFrame.size = exclusionView.sizeThatFits(lastLineFrame.size)\n              if lastLineFrame.maxX >= frame.width {\n\n                  if isOver == false {\n                      lastLineFrame.origin.x -= lastLineFrame.maxX - frame.width + max(textContainerInset.bottom, textContainerInset.right)\n                  } else {\n                      lastLineFrame.origin.x = lastFrame.minX + textContainerInset.left + 5\n                      lastLineFrame.origin.y += lastFrame.height\n                  }\n              }\n              exclusionView.frame = convert(lastLineFrame, to: exclusionView.superview)\n\n              var ovalFrame = convert(exclusionView.bounds, from: exclusionView)\n              ovalFrame.origin.x += 5 + textContainerInset.left\n              ovalPaths.append(UIBezierPath(rect: ovalFrame))\n\n              if isOver, isAutoHidenExclusionView {\n                  frame.size.height = lastFrame.maxY + textContainerInset.bottom\n              } else {\n                  frame.size.height = ovalFrame.maxY + textContainerInset.bottom\n              }\n          } else {\n              frame.size = super.sizeThatFits(size)\n          }\n          textContainer.exclusionPaths = ovalPaths\n\n          return CGSize(width: frame.maxX, height: frame.maxY)\n      }\n  }\n\n  ```\n  代码只是简单的做了一个DEMO，并没有仔细的调试，如果使用的话可能看需要根据自己的需求进行简单的调试吧。比如说偏移量、布局之类的。\n  ","slug":"uitextkit-ellipsis-sth-at-the-end","published":1,"updated":"2016-12-30T11:15:40.000Z","_id":"cixbaqyn3000mcb6awxylj1tc","comments":1,"layout":"post","photos":[],"link":"","content":"<p>看到AppStore的<code>更多</code>效果，做的不错哎，本文尝试采用<code>exclusionPaths</code>进行实现。不过有瑕疵。。来年用追加的方式在实现一下。感觉追加的方式比较简单。，</p>\n<a id=\"more\"></a>\n<h1 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h1><p><img src=\"http://7xvzwi.com1.z0.glb.clouddn.com/UITextKit-AppStore-more-scene.gif://7xvzwi.com1.z0.glb.clouddn.com/leanote_new_logo.png\" alt=\"效果图\"></p>\n<h1 id=\"简要说明\"><a href=\"#简要说明\" class=\"headerlink\" title=\"简要说明\"></a>简要说明</h1><p>  App Store中的查看更多动画是不是很给力？可是做起来确不知道如何下手？这里我提供一种UITextKit的方法来简单的实现一下。</p>\n<p>  为了让例子简单，我就直接写了个more，那个view是自定义的，随便添加的，和本身的文本展示的并没有什么关系。</p>\n<p>  为了让最后的那个moreView更加好用，增加了已经展开显示全部是否隐藏的控制。</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><p>  先看下Demo中调用吧：<br>  <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> info = <span class=\"type\">KTJExclusionLabel</span>()</div><div class=\"line\">info.exclusionView = more</div><div class=\"line\">info.isAutoHidenExclusionView = isAutoHiden.isOn</div><div class=\"line\">info.numberOfLines = <span class=\"type\">Int</span>.<span class=\"keyword\">init</span>(line.text ?? <span class=\"string\">\"\"</span>) ?? <span class=\"number\">0</span></div><div class=\"line\">info.sizeToFit()</div></pre></td></tr></table></figure></p>\n<p>  然后KTJExclusionLabel的实现：<br>  <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//</span></div><div class=\"line\"><span class=\"comment\">//  KTJExclusionLabel.swift</span></div><div class=\"line\"><span class=\"comment\">//  UITextKit-AppStore-more</span></div><div class=\"line\"><span class=\"comment\">//</span></div><div class=\"line\"><span class=\"comment\">//  Created by 孙继刚 on 2016/12/24.</span></div><div class=\"line\"><span class=\"comment\">//  Copyright © 2016年 madordie. All rights reserved.</span></div><div class=\"line\"><span class=\"comment\">//</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> UIKit</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">KTJExclusionLabel</span>: <span class=\"title\">UITextView</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/// 行数</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">var</span> numberOfLines: <span class=\"type\">Int</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123;</div><div class=\"line\">            textContainer.maximumNumberOfLines = newValue</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> textContainer.maximumNumberOfLines</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">var</span> isAutoHidenExclusionView: <span class=\"type\">Bool</span> = <span class=\"literal\">false</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/// 避让的view</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">weak</span> <span class=\"keyword\">var</span> exclusionView: <span class=\"type\">UIView</span>? &#123;</div><div class=\"line\">        <span class=\"keyword\">didSet</span> &#123;</div><div class=\"line\">            setNeedsLayout()</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"keyword\">init</span>(frame: <span class=\"type\">CGRect</span>, textContainer: <span class=\"type\">NSTextContainer</span>?) &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.<span class=\"keyword\">init</span>(frame: frame, textContainer: textContainer)</div><div class=\"line\">        setup()</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">required</span> <span class=\"keyword\">init</span>?(coder aDecoder: <span class=\"type\">NSCoder</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.<span class=\"keyword\">init</span>(coder: aDecoder)</div><div class=\"line\">        setup()</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">setup</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        isEditable = <span class=\"literal\">true</span></div><div class=\"line\">        textContainer.lineBreakMode = .byTruncatingTail</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sizeToFit</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        <span class=\"comment\">//  对其API还不熟悉，还没有找到如何一次判断出是否已经展示完全。。找到后再更</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">let</span> originLines = numberOfLines</div><div class=\"line\">        numberOfLines = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">let</span> maxHeight = resizeThatFits(frame.size).height</div><div class=\"line\">        numberOfLines = originLines</div><div class=\"line\">        frame.size = resizeThatFits(frame.size)</div><div class=\"line\"></div><div class=\"line\">        exclusionView?.isHidden = <span class=\"literal\">false</span></div><div class=\"line\">        <span class=\"keyword\">if</span> frame.height == maxHeight &#123;</div><div class=\"line\">            frame.size = resizeThatFits(frame.size, isOver: <span class=\"literal\">true</span>)</div><div class=\"line\">            <span class=\"keyword\">if</span> isAutoHidenExclusionView &#123;</div><div class=\"line\">                exclusionView?.isHidden = <span class=\"literal\">true</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">resizeThatFits</span><span class=\"params\">(<span class=\"number\">_</span> size: CGSize, isOver: Bool = <span class=\"literal\">false</span>)</span></span> -&gt; <span class=\"type\">CGSize</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> frame = <span class=\"type\">CGRect</span>.zero</div><div class=\"line\">        frame.size = size</div><div class=\"line\"></div><div class=\"line\">        textContainer.exclusionPaths.removeAll()</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">var</span> ovalPaths = [<span class=\"type\">UIBezierPath</span>]()</div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> exclusionView = exclusionView &#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> lastLineFrame = <span class=\"type\">CGRect</span>.zero</div><div class=\"line\">            <span class=\"keyword\">var</span> lineIdx = <span class=\"number\">0</span></div><div class=\"line\">            <span class=\"keyword\">var</span> lastFrame = <span class=\"type\">CGRect</span>.zero</div><div class=\"line\">            layoutManager.enumerateLineFragments(forGlyphRange: <span class=\"type\">NSMakeRange</span>(<span class=\"number\">0</span>, text.characters.<span class=\"built_in\">count</span>)) &#123; (rect1, rect2, textContainer, range, pointer) <span class=\"keyword\">in</span></div><div class=\"line\">                <span class=\"keyword\">if</span> lineIdx &lt; textContainer.maximumNumberOfLines &#123;</div><div class=\"line\">                    lastLineFrame = rect2</div><div class=\"line\">                &#125;</div><div class=\"line\">                lineIdx += <span class=\"number\">1</span></div><div class=\"line\">                lastFrame = rect2</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> lastLineFrame == <span class=\"type\">CGRect</span>.zero &#123;</div><div class=\"line\">                lastLineFrame = lastFrame</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"comment\">//  矫正</span></div><div class=\"line\">            lastLineFrame.origin.x += textContainerInset.<span class=\"keyword\">left</span></div><div class=\"line\">            lastLineFrame.origin.y += textContainerInset.top</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//  为末尾算出最大的frame</span></div><div class=\"line\">            lastLineFrame.origin.x = lastLineFrame.maxX</div><div class=\"line\">            lastLineFrame.origin.y = lastLineFrame.minY</div><div class=\"line\">            lastLineFrame.size.width = frame.width - lastLineFrame.minX</div><div class=\"line\">            lastLineFrame.size = exclusionView.sizeThatFits(lastLineFrame.size)</div><div class=\"line\">            <span class=\"keyword\">if</span> lastLineFrame.maxX &gt;= frame.width &#123;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> isOver == <span class=\"literal\">false</span> &#123;</div><div class=\"line\">                    lastLineFrame.origin.x -= lastLineFrame.maxX - frame.width + <span class=\"built_in\">max</span>(textContainerInset.bottom, textContainerInset.<span class=\"keyword\">right</span>)</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    lastLineFrame.origin.x = lastFrame.minX + textContainerInset.<span class=\"keyword\">left</span> + <span class=\"number\">5</span></div><div class=\"line\">                    lastLineFrame.origin.y += lastFrame.height</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            exclusionView.frame = convert(lastLineFrame, to: exclusionView.superview)</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">var</span> ovalFrame = convert(exclusionView.bounds, from: exclusionView)</div><div class=\"line\">            ovalFrame.origin.x += <span class=\"number\">5</span> + textContainerInset.<span class=\"keyword\">left</span></div><div class=\"line\">            ovalPaths.append(<span class=\"type\">UIBezierPath</span>(rect: ovalFrame))</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> isOver, isAutoHidenExclusionView &#123;</div><div class=\"line\">                frame.size.height = lastFrame.maxY + textContainerInset.bottom</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                frame.size.height = ovalFrame.maxY + textContainerInset.bottom</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            frame.size = <span class=\"keyword\">super</span>.sizeThatFits(size)</div><div class=\"line\">        &#125;</div><div class=\"line\">        textContainer.exclusionPaths = ovalPaths</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">CGSize</span>(width: frame.maxX, height: frame.maxY)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>  代码只是简单的做了一个DEMO，并没有仔细的调试，如果使用的话可能看需要根据自己的需求进行简单的调试吧。比如说偏移量、布局之类的。</p>\n","excerpt":"<p>看到AppStore的<code>更多</code>效果，做的不错哎，本文尝试采用<code>exclusionPaths</code>进行实现。不过有瑕疵。。来年用追加的方式在实现一下。感觉追加的方式比较简单。，</p>","more":"<h1 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h1><p><img src=\"http://7xvzwi.com1.z0.glb.clouddn.com/UITextKit-AppStore-more-scene.gif://7xvzwi.com1.z0.glb.clouddn.com/leanote_new_logo.png\" alt=\"效果图\"></p>\n<h1 id=\"简要说明\"><a href=\"#简要说明\" class=\"headerlink\" title=\"简要说明\"></a>简要说明</h1><p>  App Store中的查看更多动画是不是很给力？可是做起来确不知道如何下手？这里我提供一种UITextKit的方法来简单的实现一下。</p>\n<p>  为了让例子简单，我就直接写了个more，那个view是自定义的，随便添加的，和本身的文本展示的并没有什么关系。</p>\n<p>  为了让最后的那个moreView更加好用，增加了已经展开显示全部是否隐藏的控制。</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><p>  先看下Demo中调用吧：<br>  <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> info = <span class=\"type\">KTJExclusionLabel</span>()</div><div class=\"line\">info.exclusionView = more</div><div class=\"line\">info.isAutoHidenExclusionView = isAutoHiden.isOn</div><div class=\"line\">info.numberOfLines = <span class=\"type\">Int</span>.<span class=\"keyword\">init</span>(line.text ?? <span class=\"string\">\"\"</span>) ?? <span class=\"number\">0</span></div><div class=\"line\">info.sizeToFit()</div></pre></td></tr></table></figure></p>\n<p>  然后KTJExclusionLabel的实现：<br>  <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//</span></div><div class=\"line\"><span class=\"comment\">//  KTJExclusionLabel.swift</span></div><div class=\"line\"><span class=\"comment\">//  UITextKit-AppStore-more</span></div><div class=\"line\"><span class=\"comment\">//</span></div><div class=\"line\"><span class=\"comment\">//  Created by 孙继刚 on 2016/12/24.</span></div><div class=\"line\"><span class=\"comment\">//  Copyright © 2016年 madordie. All rights reserved.</span></div><div class=\"line\"><span class=\"comment\">//</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> UIKit</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">KTJExclusionLabel</span>: <span class=\"title\">UITextView</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/// 行数</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">var</span> numberOfLines: <span class=\"type\">Int</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123;</div><div class=\"line\">            textContainer.maximumNumberOfLines = newValue</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> textContainer.maximumNumberOfLines</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">var</span> isAutoHidenExclusionView: <span class=\"type\">Bool</span> = <span class=\"literal\">false</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/// 避让的view</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">weak</span> <span class=\"keyword\">var</span> exclusionView: <span class=\"type\">UIView</span>? &#123;</div><div class=\"line\">        <span class=\"keyword\">didSet</span> &#123;</div><div class=\"line\">            setNeedsLayout()</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"keyword\">init</span>(frame: <span class=\"type\">CGRect</span>, textContainer: <span class=\"type\">NSTextContainer</span>?) &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.<span class=\"keyword\">init</span>(frame: frame, textContainer: textContainer)</div><div class=\"line\">        setup()</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">required</span> <span class=\"keyword\">init</span>?(coder aDecoder: <span class=\"type\">NSCoder</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.<span class=\"keyword\">init</span>(coder: aDecoder)</div><div class=\"line\">        setup()</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">setup</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        isEditable = <span class=\"literal\">true</span></div><div class=\"line\">        textContainer.lineBreakMode = .byTruncatingTail</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sizeToFit</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        <span class=\"comment\">//  对其API还不熟悉，还没有找到如何一次判断出是否已经展示完全。。找到后再更</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">let</span> originLines = numberOfLines</div><div class=\"line\">        numberOfLines = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">let</span> maxHeight = resizeThatFits(frame.size).height</div><div class=\"line\">        numberOfLines = originLines</div><div class=\"line\">        frame.size = resizeThatFits(frame.size)</div><div class=\"line\"></div><div class=\"line\">        exclusionView?.isHidden = <span class=\"literal\">false</span></div><div class=\"line\">        <span class=\"keyword\">if</span> frame.height == maxHeight &#123;</div><div class=\"line\">            frame.size = resizeThatFits(frame.size, isOver: <span class=\"literal\">true</span>)</div><div class=\"line\">            <span class=\"keyword\">if</span> isAutoHidenExclusionView &#123;</div><div class=\"line\">                exclusionView?.isHidden = <span class=\"literal\">true</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">resizeThatFits</span><span class=\"params\">(<span class=\"number\">_</span> size: CGSize, isOver: Bool = <span class=\"literal\">false</span>)</span></span> -&gt; <span class=\"type\">CGSize</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> frame = <span class=\"type\">CGRect</span>.zero</div><div class=\"line\">        frame.size = size</div><div class=\"line\"></div><div class=\"line\">        textContainer.exclusionPaths.removeAll()</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">var</span> ovalPaths = [<span class=\"type\">UIBezierPath</span>]()</div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> exclusionView = exclusionView &#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> lastLineFrame = <span class=\"type\">CGRect</span>.zero</div><div class=\"line\">            <span class=\"keyword\">var</span> lineIdx = <span class=\"number\">0</span></div><div class=\"line\">            <span class=\"keyword\">var</span> lastFrame = <span class=\"type\">CGRect</span>.zero</div><div class=\"line\">            layoutManager.enumerateLineFragments(forGlyphRange: <span class=\"type\">NSMakeRange</span>(<span class=\"number\">0</span>, text.characters.<span class=\"built_in\">count</span>)) &#123; (rect1, rect2, textContainer, range, pointer) <span class=\"keyword\">in</span></div><div class=\"line\">                <span class=\"keyword\">if</span> lineIdx &lt; textContainer.maximumNumberOfLines &#123;</div><div class=\"line\">                    lastLineFrame = rect2</div><div class=\"line\">                &#125;</div><div class=\"line\">                lineIdx += <span class=\"number\">1</span></div><div class=\"line\">                lastFrame = rect2</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> lastLineFrame == <span class=\"type\">CGRect</span>.zero &#123;</div><div class=\"line\">                lastLineFrame = lastFrame</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"comment\">//  矫正</span></div><div class=\"line\">            lastLineFrame.origin.x += textContainerInset.<span class=\"keyword\">left</span></div><div class=\"line\">            lastLineFrame.origin.y += textContainerInset.top</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//  为末尾算出最大的frame</span></div><div class=\"line\">            lastLineFrame.origin.x = lastLineFrame.maxX</div><div class=\"line\">            lastLineFrame.origin.y = lastLineFrame.minY</div><div class=\"line\">            lastLineFrame.size.width = frame.width - lastLineFrame.minX</div><div class=\"line\">            lastLineFrame.size = exclusionView.sizeThatFits(lastLineFrame.size)</div><div class=\"line\">            <span class=\"keyword\">if</span> lastLineFrame.maxX &gt;= frame.width &#123;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> isOver == <span class=\"literal\">false</span> &#123;</div><div class=\"line\">                    lastLineFrame.origin.x -= lastLineFrame.maxX - frame.width + <span class=\"built_in\">max</span>(textContainerInset.bottom, textContainerInset.<span class=\"keyword\">right</span>)</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    lastLineFrame.origin.x = lastFrame.minX + textContainerInset.<span class=\"keyword\">left</span> + <span class=\"number\">5</span></div><div class=\"line\">                    lastLineFrame.origin.y += lastFrame.height</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            exclusionView.frame = convert(lastLineFrame, to: exclusionView.superview)</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">var</span> ovalFrame = convert(exclusionView.bounds, from: exclusionView)</div><div class=\"line\">            ovalFrame.origin.x += <span class=\"number\">5</span> + textContainerInset.<span class=\"keyword\">left</span></div><div class=\"line\">            ovalPaths.append(<span class=\"type\">UIBezierPath</span>(rect: ovalFrame))</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> isOver, isAutoHidenExclusionView &#123;</div><div class=\"line\">                frame.size.height = lastFrame.maxY + textContainerInset.bottom</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                frame.size.height = ovalFrame.maxY + textContainerInset.bottom</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            frame.size = <span class=\"keyword\">super</span>.sizeThatFits(size)</div><div class=\"line\">        &#125;</div><div class=\"line\">        textContainer.exclusionPaths = ovalPaths</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">CGSize</span>(width: frame.maxX, height: frame.maxY)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>  代码只是简单的做了一个DEMO，并没有仔细的调试，如果使用的话可能看需要根据自己的需求进行简单的调试吧。比如说偏移量、布局之类的。</p>"},{"title":"使用hexo搭建博客","date":"2016-07-05T10:03:31.000Z","_content":"\n这个github.io搭建的过程参考，以及向百度推送的python、js脚本。\n\n<!--more-->\n\n# 参考博客\n    \n感谢 [岁月如歌](http://lovenight.github.io) 的这个[《Hexo 3.1.1 静态博客搭建指南》](http://lovenight.github.io/2015/11/10/Hexo-3-1-1-静态博客搭建指南/)同时感谢这个[《向百度推送hexo博客所有链接的Python脚本》](http://lovenight.github.io/2015/11/18/向百度推送hexo博客所有链接的Python脚本/)(别问我为啥点不开，这个要问博主，不过要看这个文章也不是没办法的😂，因为这个博客也用git管理的。。。你懂)\n\n另外还有一个[soul](http://emufan.com)的[百度主动推送hexo生成的文章](http://emufan.com/2016/02/18/百度主动推送hexo生成的文章/)\n\n# python自动推送脚本修改\n\n上面说的博主大约用的是windows，所以脚本并不能立马的运行在Mac上，需要做些修改：故修改为：\n\n```python\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Author: LoveNight\n# @Date:   2015-11-16 20:45:59\n# @Last Modified by:   LoveNight\n# @Last Modified time: 2015-11-18 18:07:19\n\n# @Last Modified by:   Keith\n# @Last Modified time: 2016-07-06 16:22:45\nimport os\nimport sys\nimport json\nfrom bs4 import BeautifulSoup as BS\nimport requests\n#import msvcrt\n\n\"\"\"\nhexo 博客专用，向百度站长平台提交所有网址\n\n本脚本必须放在hexo博客的根目录下执行！需要已安装生成百度站点地图的插件。\n百度站长平台提交链接：http://zhanzhang.baidu.com/linksubmit/index\n主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。\n从中找到自己的接口调用地址\n\npython环境：\npip install beautifulsoup4\npip install requests\nxcode-select --install\t\npip install lxml \n\n\"\"\"\n\n# ❌❌❌ 抄的需要更改这个URL！！这是我的！！❌❌❌\nurl = 'http://data.zz.baidu.com/urls?site=https://madordie.github.io&token=j33t0VEPFl24tJ8N'\nbaidu_sitemap = os.path.join(sys.path[0], 'public', 'baidusitemap.xml')\ngoogle_sitemap = os.path.join(sys.path[0], 'public', 'sitemap.xml')\nsitemap = [baidu_sitemap, google_sitemap]\n\nassert (os.path.exists(baidu_sitemap) or os.path.exists(\n    google_sitemap)), \"没找到任何网站地图，请检查！\"\n\n\n# 从站点地图中读取网址列表\ndef getUrls():\n    urls = []\n    for _ in sitemap:\n        if os.path.exists(_):\n            with open(_, \"r\") as f:\n                xml = f.read()\n        soup = BS(xml, \"xml\")\n        tags = soup.find_all(\"loc\")\n        urls += [x.string for x in tags]\n        if _ == baidu_sitemap:\n            tags = soup.find_all(\"breadCrumb\", url=True)\n            urls += [x[\"url\"] for x in tags]\n    return urls\n\n\n# POST提交网址列表\ndef postUrls(urls):\n    urls = set(urls)  # 先去重\n    print(\"一共提取出 %s 个网址\" % len(urls))\n    print(urls)\n    data = \"\\n\".join(urls)\n    return requests.post(url, data=data).text\n\n\nif __name__ == '__main__':\n\n    urls = getUrls()\n    result = postUrls(urls)\n    print(\"提交结果：\")\n    print(result)\n#    msvcrt.getch()\n```\n\n# js脚本\n\n这个脚本是我在[soul](http://emufan.com)的[百度主动推送hexo生成的文章](http://emufan.com/2016/02/18/百度主动推送hexo生成的文章/)发现的，感觉也很赞。\n\n\n>  ## github\n  [脚本地址](https://github.com/Relsoul/bdwork/tree/master/soul/hexo百度主动上传)\n  ## 推送\n  今天发现百度没收录我的站..主要是我的站点换来换去的..估计被ban了..然后想用sitemap来推送一下..结果发现github禁用了百度爬虫..没办法只能主动推送了.\n  ## 利用插件\n  这里利用到了一款插件\n  [hexo-generator-baidu-sitemap](https://github.com/coneycode/hexo-generator-baidu-sitemap)\n  设置很简单 只需要在.config.yml添加一些数据即可, 下面附上我的添加数据 theme这个可以随意更改 下面的copy即可\n  ```\n  # Extensions\n  ## Plugins: http://hexo.io/plugins/\n  ## Themes: http://hexo.io/themes/\n  theme: yilia\n  baidusitemap:\n  path: baidusitemap.xml\n  ```\n>  ## 运行\n  然后hexo g 生成一下数据 会在public下面发现一个文件名为baidusitemap.xml\n  ## 脚本\n  这里用nodejs写了一款脚本 大概流程是 获取baidusitemap.xml里面的内容 然后读取本地的一个site_file.json这个文件 这个文件存储的是上一次数据 与上一次数据进行对比 如果对比发现新数据那么就上传新数据 否则全部上传.\n  ## 运行脚本\n  把ActivePush.js脚本放在hexo文件夹主目录 然后用nodejs ActivePush.js一下即可 这里还支持一个参数nodejs ActivePush.js all 则是不对比直接上传数据\n","source":"_posts/use-hexo-setup-blog.md","raw":"---\ntitle: 使用hexo搭建博客\ndate: 2016-07-05 18:03:31\ntags: hexo\ncategories: \n    - 教程\n---\n\n这个github.io搭建的过程参考，以及向百度推送的python、js脚本。\n\n<!--more-->\n\n# 参考博客\n    \n感谢 [岁月如歌](http://lovenight.github.io) 的这个[《Hexo 3.1.1 静态博客搭建指南》](http://lovenight.github.io/2015/11/10/Hexo-3-1-1-静态博客搭建指南/)同时感谢这个[《向百度推送hexo博客所有链接的Python脚本》](http://lovenight.github.io/2015/11/18/向百度推送hexo博客所有链接的Python脚本/)(别问我为啥点不开，这个要问博主，不过要看这个文章也不是没办法的😂，因为这个博客也用git管理的。。。你懂)\n\n另外还有一个[soul](http://emufan.com)的[百度主动推送hexo生成的文章](http://emufan.com/2016/02/18/百度主动推送hexo生成的文章/)\n\n# python自动推送脚本修改\n\n上面说的博主大约用的是windows，所以脚本并不能立马的运行在Mac上，需要做些修改：故修改为：\n\n```python\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Author: LoveNight\n# @Date:   2015-11-16 20:45:59\n# @Last Modified by:   LoveNight\n# @Last Modified time: 2015-11-18 18:07:19\n\n# @Last Modified by:   Keith\n# @Last Modified time: 2016-07-06 16:22:45\nimport os\nimport sys\nimport json\nfrom bs4 import BeautifulSoup as BS\nimport requests\n#import msvcrt\n\n\"\"\"\nhexo 博客专用，向百度站长平台提交所有网址\n\n本脚本必须放在hexo博客的根目录下执行！需要已安装生成百度站点地图的插件。\n百度站长平台提交链接：http://zhanzhang.baidu.com/linksubmit/index\n主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。\n从中找到自己的接口调用地址\n\npython环境：\npip install beautifulsoup4\npip install requests\nxcode-select --install\t\npip install lxml \n\n\"\"\"\n\n# ❌❌❌ 抄的需要更改这个URL！！这是我的！！❌❌❌\nurl = 'http://data.zz.baidu.com/urls?site=https://madordie.github.io&token=j33t0VEPFl24tJ8N'\nbaidu_sitemap = os.path.join(sys.path[0], 'public', 'baidusitemap.xml')\ngoogle_sitemap = os.path.join(sys.path[0], 'public', 'sitemap.xml')\nsitemap = [baidu_sitemap, google_sitemap]\n\nassert (os.path.exists(baidu_sitemap) or os.path.exists(\n    google_sitemap)), \"没找到任何网站地图，请检查！\"\n\n\n# 从站点地图中读取网址列表\ndef getUrls():\n    urls = []\n    for _ in sitemap:\n        if os.path.exists(_):\n            with open(_, \"r\") as f:\n                xml = f.read()\n        soup = BS(xml, \"xml\")\n        tags = soup.find_all(\"loc\")\n        urls += [x.string for x in tags]\n        if _ == baidu_sitemap:\n            tags = soup.find_all(\"breadCrumb\", url=True)\n            urls += [x[\"url\"] for x in tags]\n    return urls\n\n\n# POST提交网址列表\ndef postUrls(urls):\n    urls = set(urls)  # 先去重\n    print(\"一共提取出 %s 个网址\" % len(urls))\n    print(urls)\n    data = \"\\n\".join(urls)\n    return requests.post(url, data=data).text\n\n\nif __name__ == '__main__':\n\n    urls = getUrls()\n    result = postUrls(urls)\n    print(\"提交结果：\")\n    print(result)\n#    msvcrt.getch()\n```\n\n# js脚本\n\n这个脚本是我在[soul](http://emufan.com)的[百度主动推送hexo生成的文章](http://emufan.com/2016/02/18/百度主动推送hexo生成的文章/)发现的，感觉也很赞。\n\n\n>  ## github\n  [脚本地址](https://github.com/Relsoul/bdwork/tree/master/soul/hexo百度主动上传)\n  ## 推送\n  今天发现百度没收录我的站..主要是我的站点换来换去的..估计被ban了..然后想用sitemap来推送一下..结果发现github禁用了百度爬虫..没办法只能主动推送了.\n  ## 利用插件\n  这里利用到了一款插件\n  [hexo-generator-baidu-sitemap](https://github.com/coneycode/hexo-generator-baidu-sitemap)\n  设置很简单 只需要在.config.yml添加一些数据即可, 下面附上我的添加数据 theme这个可以随意更改 下面的copy即可\n  ```\n  # Extensions\n  ## Plugins: http://hexo.io/plugins/\n  ## Themes: http://hexo.io/themes/\n  theme: yilia\n  baidusitemap:\n  path: baidusitemap.xml\n  ```\n>  ## 运行\n  然后hexo g 生成一下数据 会在public下面发现一个文件名为baidusitemap.xml\n  ## 脚本\n  这里用nodejs写了一款脚本 大概流程是 获取baidusitemap.xml里面的内容 然后读取本地的一个site_file.json这个文件 这个文件存储的是上一次数据 与上一次数据进行对比 如果对比发现新数据那么就上传新数据 否则全部上传.\n  ## 运行脚本\n  把ActivePush.js脚本放在hexo文件夹主目录 然后用nodejs ActivePush.js一下即可 这里还支持一个参数nodejs ActivePush.js all 则是不对比直接上传数据\n","slug":"use-hexo-setup-blog","published":1,"updated":"2016-10-22T13:56:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixbaqyn4000pcb6abklgczps","content":"<p>这个github.io搭建的过程参考，以及向百度推送的python、js脚本。</p>\n<a id=\"more\"></a>\n<h1 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客\"></a>参考博客</h1><p>感谢 <a href=\"http://lovenight.github.io\" target=\"_blank\" rel=\"external\">岁月如歌</a> 的这个<a href=\"http://lovenight.github.io/2015/11/10/Hexo-3-1-1-静态博客搭建指南/\" target=\"_blank\" rel=\"external\">《Hexo 3.1.1 静态博客搭建指南》</a>同时感谢这个<a href=\"http://lovenight.github.io/2015/11/18/向百度推送hexo博客所有链接的Python脚本/\" target=\"_blank\" rel=\"external\">《向百度推送hexo博客所有链接的Python脚本》</a>(别问我为啥点不开，这个要问博主，不过要看这个文章也不是没办法的😂，因为这个博客也用git管理的。。。你懂)</p>\n<p>另外还有一个<a href=\"http://emufan.com\" target=\"_blank\" rel=\"external\">soul</a>的<a href=\"http://emufan.com/2016/02/18/百度主动推送hexo生成的文章/\" target=\"_blank\" rel=\"external\">百度主动推送hexo生成的文章</a></p>\n<h1 id=\"python自动推送脚本修改\"><a href=\"#python自动推送脚本修改\" class=\"headerlink\" title=\"python自动推送脚本修改\"></a>python自动推送脚本修改</h1><p>上面说的博主大约用的是windows，所以脚本并不能立马的运行在Mac上，需要做些修改：故修改为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></div><div class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></div><div class=\"line\"><span class=\"comment\"># @Author: LoveNight</span></div><div class=\"line\"><span class=\"comment\"># @Date:   2015-11-16 20:45:59</span></div><div class=\"line\"><span class=\"comment\"># @Last Modified by:   LoveNight</span></div><div class=\"line\"><span class=\"comment\"># @Last Modified time: 2015-11-18 18:07:19</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># @Last Modified by:   Keith</span></div><div class=\"line\"><span class=\"comment\"># @Last Modified time: 2016-07-06 16:22:45</span></div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> sys</div><div class=\"line\"><span class=\"keyword\">import</span> json</div><div class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup <span class=\"keyword\">as</span> BS</div><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"comment\">#import msvcrt</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"\"</span></div><div class=\"line\">hexo 博客专用，向百度站长平台提交所有网址</div><div class=\"line\"></div><div class=\"line\">本脚本必须放在hexo博客的根目录下执行！需要已安装生成百度站点地图的插件。</div><div class=\"line\">百度站长平台提交链接：http://zhanzhang.baidu.com/linksubmit/index</div><div class=\"line\">主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。</div><div class=\"line\">从中找到自己的接口调用地址</div><div class=\"line\"></div><div class=\"line\">python环境：</div><div class=\"line\">pip install beautifulsoup4</div><div class=\"line\">pip install requests</div><div class=\"line\">xcode-select --install\t</div><div class=\"line\">pip install lxml </div><div class=\"line\"></div><div class=\"line\">\"\"\"</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ❌❌❌ 抄的需要更改这个URL！！这是我的！！❌❌❌</span></div><div class=\"line\">url = <span class=\"string\">'http://data.zz.baidu.com/urls?site=https://madordie.github.io&amp;token=j33t0VEPFl24tJ8N'</span></div><div class=\"line\">baidu_sitemap = os.path.join(sys.path[<span class=\"number\">0</span>], <span class=\"string\">'public'</span>, <span class=\"string\">'baidusitemap.xml'</span>)</div><div class=\"line\">google_sitemap = os.path.join(sys.path[<span class=\"number\">0</span>], <span class=\"string\">'public'</span>, <span class=\"string\">'sitemap.xml'</span>)</div><div class=\"line\">sitemap = [baidu_sitemap, google_sitemap]</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">assert</span> (os.path.exists(baidu_sitemap) <span class=\"keyword\">or</span> os.path.exists(</div><div class=\"line\">    google_sitemap)), <span class=\"string\">\"没找到任何网站地图，请检查！\"</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 从站点地图中读取网址列表</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getUrls</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    urls = []</div><div class=\"line\">    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> sitemap:</div><div class=\"line\">        <span class=\"keyword\">if</span> os.path.exists(_):</div><div class=\"line\">            <span class=\"keyword\">with</span> open(_, <span class=\"string\">\"r\"</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">                xml = f.read()</div><div class=\"line\">        soup = BS(xml, <span class=\"string\">\"xml\"</span>)</div><div class=\"line\">        tags = soup.find_all(<span class=\"string\">\"loc\"</span>)</div><div class=\"line\">        urls += [x.string <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> tags]</div><div class=\"line\">        <span class=\"keyword\">if</span> _ == baidu_sitemap:</div><div class=\"line\">            tags = soup.find_all(<span class=\"string\">\"breadCrumb\"</span>, url=<span class=\"keyword\">True</span>)</div><div class=\"line\">            urls += [x[<span class=\"string\">\"url\"</span>] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> tags]</div><div class=\"line\">    <span class=\"keyword\">return</span> urls</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># POST提交网址列表</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">postUrls</span><span class=\"params\">(urls)</span>:</span></div><div class=\"line\">    urls = set(urls)  <span class=\"comment\"># 先去重</span></div><div class=\"line\">    print(<span class=\"string\">\"一共提取出 %s 个网址\"</span> % len(urls))</div><div class=\"line\">    print(urls)</div><div class=\"line\">    data = <span class=\"string\">\"\\n\"</span>.join(urls)</div><div class=\"line\">    <span class=\"keyword\">return</span> requests.post(url, data=data).text</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\"></div><div class=\"line\">    urls = getUrls()</div><div class=\"line\">    result = postUrls(urls)</div><div class=\"line\">    print(<span class=\"string\">\"提交结果：\"</span>)</div><div class=\"line\">    print(result)</div><div class=\"line\"><span class=\"comment\">#    msvcrt.getch()</span></div></pre></td></tr></table></figure>\n<h1 id=\"js脚本\"><a href=\"#js脚本\" class=\"headerlink\" title=\"js脚本\"></a>js脚本</h1><p>这个脚本是我在<a href=\"http://emufan.com\" target=\"_blank\" rel=\"external\">soul</a>的<a href=\"http://emufan.com/2016/02/18/百度主动推送hexo生成的文章/\" target=\"_blank\" rel=\"external\">百度主动推送hexo生成的文章</a>发现的，感觉也很赞。</p>\n<blockquote>\n<h2 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h2><p>  <a href=\"https://github.com/Relsoul/bdwork/tree/master/soul/hexo百度主动上传\" target=\"_blank\" rel=\"external\">脚本地址</a></p>\n<h2 id=\"推送\"><a href=\"#推送\" class=\"headerlink\" title=\"推送\"></a>推送</h2><p>  今天发现百度没收录我的站..主要是我的站点换来换去的..估计被ban了..然后想用sitemap来推送一下..结果发现github禁用了百度爬虫..没办法只能主动推送了.</p>\n<h2 id=\"利用插件\"><a href=\"#利用插件\" class=\"headerlink\" title=\"利用插件\"></a>利用插件</h2><p>  这里利用到了一款插件<br>  <a href=\"https://github.com/coneycode/hexo-generator-baidu-sitemap\" target=\"_blank\" rel=\"external\">hexo-generator-baidu-sitemap</a><br>  设置很简单 只需要在.config.yml添加一些数据即可, 下面附上我的添加数据 theme这个可以随意更改 下面的copy即可<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: http://hexo.io/plugins/</div><div class=\"line\">## Themes: http://hexo.io/themes/</div><div class=\"line\">theme: yilia</div><div class=\"line\">baidusitemap:</div><div class=\"line\">path: baidusitemap.xml</div></pre></td></tr></table></figure></p>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>  然后hexo g 生成一下数据 会在public下面发现一个文件名为baidusitemap.xml</p>\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><p>  这里用nodejs写了一款脚本 大概流程是 获取baidusitemap.xml里面的内容 然后读取本地的一个site_file.json这个文件 这个文件存储的是上一次数据 与上一次数据进行对比 如果对比发现新数据那么就上传新数据 否则全部上传.</p>\n<h2 id=\"运行脚本\"><a href=\"#运行脚本\" class=\"headerlink\" title=\"运行脚本\"></a>运行脚本</h2><p>  把ActivePush.js脚本放在hexo文件夹主目录 然后用nodejs ActivePush.js一下即可 这里还支持一个参数nodejs ActivePush.js all 则是不对比直接上传数据</p>\n</blockquote>\n","excerpt":"<p>这个github.io搭建的过程参考，以及向百度推送的python、js脚本。</p>","more":"<h1 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客\"></a>参考博客</h1><p>感谢 <a href=\"http://lovenight.github.io\">岁月如歌</a> 的这个<a href=\"http://lovenight.github.io/2015/11/10/Hexo-3-1-1-静态博客搭建指南/\">《Hexo 3.1.1 静态博客搭建指南》</a>同时感谢这个<a href=\"http://lovenight.github.io/2015/11/18/向百度推送hexo博客所有链接的Python脚本/\">《向百度推送hexo博客所有链接的Python脚本》</a>(别问我为啥点不开，这个要问博主，不过要看这个文章也不是没办法的😂，因为这个博客也用git管理的。。。你懂)</p>\n<p>另外还有一个<a href=\"http://emufan.com\">soul</a>的<a href=\"http://emufan.com/2016/02/18/百度主动推送hexo生成的文章/\">百度主动推送hexo生成的文章</a></p>\n<h1 id=\"python自动推送脚本修改\"><a href=\"#python自动推送脚本修改\" class=\"headerlink\" title=\"python自动推送脚本修改\"></a>python自动推送脚本修改</h1><p>上面说的博主大约用的是windows，所以脚本并不能立马的运行在Mac上，需要做些修改：故修改为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></div><div class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></div><div class=\"line\"><span class=\"comment\"># @Author: LoveNight</span></div><div class=\"line\"><span class=\"comment\"># @Date:   2015-11-16 20:45:59</span></div><div class=\"line\"><span class=\"comment\"># @Last Modified by:   LoveNight</span></div><div class=\"line\"><span class=\"comment\"># @Last Modified time: 2015-11-18 18:07:19</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># @Last Modified by:   Keith</span></div><div class=\"line\"><span class=\"comment\"># @Last Modified time: 2016-07-06 16:22:45</span></div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> sys</div><div class=\"line\"><span class=\"keyword\">import</span> json</div><div class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup <span class=\"keyword\">as</span> BS</div><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"comment\">#import msvcrt</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"\"</div><div class=\"line\">hexo 博客专用，向百度站长平台提交所有网址</div><div class=\"line\"></div><div class=\"line\">本脚本必须放在hexo博客的根目录下执行！需要已安装生成百度站点地图的插件。</div><div class=\"line\">百度站长平台提交链接：http://zhanzhang.baidu.com/linksubmit/index</div><div class=\"line\">主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。</div><div class=\"line\">从中找到自己的接口调用地址</div><div class=\"line\"></div><div class=\"line\">python环境：</div><div class=\"line\">pip install beautifulsoup4</div><div class=\"line\">pip install requests</div><div class=\"line\">xcode-select --install\t</div><div class=\"line\">pip install lxml </div><div class=\"line\"></div><div class=\"line\">\"\"\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ❌❌❌ 抄的需要更改这个URL！！这是我的！！❌❌❌</span></div><div class=\"line\">url = <span class=\"string\">'http://data.zz.baidu.com/urls?site=https://madordie.github.io&amp;token=j33t0VEPFl24tJ8N'</span></div><div class=\"line\">baidu_sitemap = os.path.join(sys.path[<span class=\"number\">0</span>], <span class=\"string\">'public'</span>, <span class=\"string\">'baidusitemap.xml'</span>)</div><div class=\"line\">google_sitemap = os.path.join(sys.path[<span class=\"number\">0</span>], <span class=\"string\">'public'</span>, <span class=\"string\">'sitemap.xml'</span>)</div><div class=\"line\">sitemap = [baidu_sitemap, google_sitemap]</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">assert</span> (os.path.exists(baidu_sitemap) <span class=\"keyword\">or</span> os.path.exists(</div><div class=\"line\">    google_sitemap)), <span class=\"string\">\"没找到任何网站地图，请检查！\"</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 从站点地图中读取网址列表</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getUrls</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    urls = []</div><div class=\"line\">    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> sitemap:</div><div class=\"line\">        <span class=\"keyword\">if</span> os.path.exists(_):</div><div class=\"line\">            <span class=\"keyword\">with</span> open(_, <span class=\"string\">\"r\"</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">                xml = f.read()</div><div class=\"line\">        soup = BS(xml, <span class=\"string\">\"xml\"</span>)</div><div class=\"line\">        tags = soup.find_all(<span class=\"string\">\"loc\"</span>)</div><div class=\"line\">        urls += [x.string <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> tags]</div><div class=\"line\">        <span class=\"keyword\">if</span> _ == baidu_sitemap:</div><div class=\"line\">            tags = soup.find_all(<span class=\"string\">\"breadCrumb\"</span>, url=<span class=\"keyword\">True</span>)</div><div class=\"line\">            urls += [x[<span class=\"string\">\"url\"</span>] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> tags]</div><div class=\"line\">    <span class=\"keyword\">return</span> urls</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># POST提交网址列表</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">postUrls</span><span class=\"params\">(urls)</span>:</span></div><div class=\"line\">    urls = set(urls)  <span class=\"comment\"># 先去重</span></div><div class=\"line\">    print(<span class=\"string\">\"一共提取出 %s 个网址\"</span> % len(urls))</div><div class=\"line\">    print(urls)</div><div class=\"line\">    data = <span class=\"string\">\"\\n\"</span>.join(urls)</div><div class=\"line\">    <span class=\"keyword\">return</span> requests.post(url, data=data).text</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\"></div><div class=\"line\">    urls = getUrls()</div><div class=\"line\">    result = postUrls(urls)</div><div class=\"line\">    print(<span class=\"string\">\"提交结果：\"</span>)</div><div class=\"line\">    print(result)</div><div class=\"line\"><span class=\"comment\">#    msvcrt.getch()</span></div></pre></td></tr></table></figure>\n<h1 id=\"js脚本\"><a href=\"#js脚本\" class=\"headerlink\" title=\"js脚本\"></a>js脚本</h1><p>这个脚本是我在<a href=\"http://emufan.com\">soul</a>的<a href=\"http://emufan.com/2016/02/18/百度主动推送hexo生成的文章/\">百度主动推送hexo生成的文章</a>发现的，感觉也很赞。</p>\n<blockquote>\n<h2 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h2><p>  <a href=\"https://github.com/Relsoul/bdwork/tree/master/soul/hexo百度主动上传\">脚本地址</a></p>\n<h2 id=\"推送\"><a href=\"#推送\" class=\"headerlink\" title=\"推送\"></a>推送</h2><p>  今天发现百度没收录我的站..主要是我的站点换来换去的..估计被ban了..然后想用sitemap来推送一下..结果发现github禁用了百度爬虫..没办法只能主动推送了.</p>\n<h2 id=\"利用插件\"><a href=\"#利用插件\" class=\"headerlink\" title=\"利用插件\"></a>利用插件</h2><p>  这里利用到了一款插件<br>  <a href=\"https://github.com/coneycode/hexo-generator-baidu-sitemap\">hexo-generator-baidu-sitemap</a><br>  设置很简单 只需要在.config.yml添加一些数据即可, 下面附上我的添加数据 theme这个可以随意更改 下面的copy即可<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: http://hexo.io/plugins/</div><div class=\"line\">## Themes: http://hexo.io/themes/</div><div class=\"line\">theme: yilia</div><div class=\"line\">baidusitemap:</div><div class=\"line\">path: baidusitemap.xml</div></pre></td></tr></table></figure></p>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>  然后hexo g 生成一下数据 会在public下面发现一个文件名为baidusitemap.xml</p>\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><p>  这里用nodejs写了一款脚本 大概流程是 获取baidusitemap.xml里面的内容 然后读取本地的一个site_file.json这个文件 这个文件存储的是上一次数据 与上一次数据进行对比 如果对比发现新数据那么就上传新数据 否则全部上传.</p>\n<h2 id=\"运行脚本\"><a href=\"#运行脚本\" class=\"headerlink\" title=\"运行脚本\"></a>运行脚本</h2><p>  把ActivePush.js脚本放在hexo文件夹主目录 然后用nodejs ActivePush.js一下即可 这里还支持一个参数nodejs ActivePush.js all 则是不对比直接上传数据</p>\n</blockquote>"},{"title":"正则表达式学习笔记","date":"2016-12-19T07:03:09.000Z","_content":"\n正则表达式基础学习笔记。\n\n<!--more-->\n\n# 前面\n  上次找了个很好的文章，可是手残没保存。。找不到了😭，现在重新找了一个文章：[正则表达式30分钟入门教程](https://luke0922.gitbooks.io/learnregularexpressionin30minutes/content/index.html)\n  正如作者说的：\n  > # 声明\n  > 本文非原创，是改编自[《正则表达式30分钟入门教程》](http://deerchao.net/tutorials/regex/regex.htm#mission)，因为原作者的排版个人不是很喜欢，而且内容上个人觉得有些地方需要改进，所以在 gitbook 上开了一本书。\n  \n  OSC的[在线正则表达式测试](http://tool.oschina.net/regex)\n  \n# 开搞\n\n## 元字符\n  - `\\` : 转义\n  - `\\b` : 单词开始或结束\n  - `^` : 字符串开始\n  - `$` : 字符串结束\n  - `\\d` : 一个数字\n  - `\\s` : 任意空白字符：空格、制表符、换行符、中文全角空格、等\n  - `\\w` : 字母/数字/下划线/汉字 可见字符\n  - `.` : 除换行符以外的任意字符\n\n## 重复\n  - `{n}` : 前置位重复匹配 [n] 次\n  - `{n,m}` : 前置位重复匹配 [n-m] 次\n  - `{n,}` : 前置位重复匹配 [n-∞] 次\n  - `*` : 数量区间：[0-N]\n  - `+` : 数量区间：[1-N]\n  - `?` : 数量区间：[0-1]\n  \n## 字符类\n  - `[nml]` : 可以匹配到 n/m/l\n  \n## 条件\n  - `|` : __或__语句。存在逻辑短路\n  - `(m)` : __分组__语句。子式，可以指定重复什么的\n  \n## 反义\n  - `\\W` : 任意__不是__（字符、数字、下划线、汉字）\n  - `\\S` : 任意__不是__ 空白符\n  - `\\D` : 任意__不是__ 数字\n  - `\\B` : 任意__不是__ 单词开头或结尾\n  - `\\^x` : 除x以外的任意字符\n  - `[\\^abc]` : 除abc这几个字母以外的任意字符\n  \n## 后向引用\n  `(\\w+)`这样用`()`的部分称为一个分组，其匹配到的内容可以使用`\\n`来表示，`n`代表该分组为第n个分组。分组下标从`1`开始。\n  也可以自定义子表达式组名: `(?<Word>M) \\k<Word>` : 或 `(?'Word'M) \\k'Word'`，其中M为子式。\n  \n## 常用分组语法\n\n### 捕获\n  - `(exp)` : 匹配exp,并捕获文本到自动命名的组里\n  - `(?exp)` : 匹配exp,并捕获文本到名称为name的组里，也可以写成(?'name'exp)\n  - `(?:exp)` : 匹配exp,不捕获匹配的文本，也不给此分组分配组号\n\n### 零宽断言\n  - `(?=exp)` : 匹配exp前面的位置\n  - `(?<=exp)` : 匹配exp后面的位置\n  - `(?!exp)` : 匹配后面跟的不是exp的位置\n  - `(?<!exp)` : 匹配前面不是exp的位置\n\n### 注释\n  - `(?#comment)` : 这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读\n  \n## 贪婪与懒惰\n  贪婪：匹配的尽可能长\n  懒惰：匹配的尽可能短\n  \n  - `*?` : 重复任意次，但尽可能少重复\n  - `+?` : 重复1次或更多次，但尽可能少重复\n  - `??` : 重复0次或1次，但尽可能少重复\n  - `{n,m}?` : 重复n到m次，但尽可能少重复\n  - `{n,}?` : 重复n次以上，但尽可能少重复\n  \n## 平衡组/递归匹配\n  \\# 我开始看不懂了😂\n  \n## 其他\n  - `\\a` : 报警字符(打印它的效果是电脑嘀一声)\n  - `\\b` : 通常是单词分界位置，但如果在字符类里使用代表退格\n  - `\\t` : 制表符，Tab\n  - `\\r` : 回车\n  - `\\v` : 竖向制表符\n  - `\\f` : 换页符\n  - `\\n` : 换行符\n  - `\\e` : Escape\n  - `\\0nn` : ASCII代码中八进制代码为nn的字符\n  - `\\xnn` : ASCII代码中十六进制代码为nn的字符\n  - `\\unnnn` : Unicode代码中十六进制代码为nnnn的字符\n  - `\\cN` : ASCII控制字符。比如\\cC代表Ctrl+C\n  - `\\A` : 字符串开头(类似^，但不受处理多行选项的影响)\n  - `\\Z` : 字符串结尾或行尾(不受处理多行选项的影响)\n  - `\\z` : 字符串结尾(类似$，但不受处理多行选项的影响)\n  - `\\G` : 当前搜索的开头\n  - `\\p{name}` : Unicode中命名为name的字符类，例如\\p{IsGreek}\n  - `(?>exp)` : 贪婪子表达式\n  - `(?<x>-<y>exp)` : 平衡组\n  - `(?im-nsx:exp)` : 在子表达式exp中改变处理选项\n  - `(?im-nsx)` : 为表达式后面的部分改变处理选项\n  - `(?(exp)yes|no)` : 把exp当作零宽正向先行断言，如果在这个位置能匹配，使用yes作为此组的表达式；否则使用no\n  - `(?(exp)yes)` : 同上，只是使用空表达式作为no\n  - `(?(name)yes|no)` : 如果命名为name的组捕获到了内容，使用yes作为表达式；否则使用no\n  - `(?(name)yes)` : 同上，只是使用空表达式作为no\n  \n  \n## 栗子\n  - 5-12位QQ：`^\\d{5,12}$`\n  - IPv4地址：`((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)`\n  - `go go`、`kitty kitty`这样的叠词：`\\b(\\w+)\\b\\s+\\1\\b`\n  - 后向引用：`\\b(\\w+)\\b\\s+\\1\\b` == `\\b(?<Word>\\w+)\\b\\s+\\k<Word>\\b` == `\\b(?'Word'\\w+)\\b\\s+\\k'Word'\\b`\n  \n# 最后\n  知识研究了一下语法，还未详细测试。思考：这玩意真心厉害😂。","source":"_posts/bruch-up-regular-expressions.md","raw":"---\ntitle: 正则表达式学习笔记\ndate: 2016-12-19 15:03:09\ntags:\ncategories:\n    - 正则表达式\n---\n\n正则表达式基础学习笔记。\n\n<!--more-->\n\n# 前面\n  上次找了个很好的文章，可是手残没保存。。找不到了😭，现在重新找了一个文章：[正则表达式30分钟入门教程](https://luke0922.gitbooks.io/learnregularexpressionin30minutes/content/index.html)\n  正如作者说的：\n  > # 声明\n  > 本文非原创，是改编自[《正则表达式30分钟入门教程》](http://deerchao.net/tutorials/regex/regex.htm#mission)，因为原作者的排版个人不是很喜欢，而且内容上个人觉得有些地方需要改进，所以在 gitbook 上开了一本书。\n  \n  OSC的[在线正则表达式测试](http://tool.oschina.net/regex)\n  \n# 开搞\n\n## 元字符\n  - `\\` : 转义\n  - `\\b` : 单词开始或结束\n  - `^` : 字符串开始\n  - `$` : 字符串结束\n  - `\\d` : 一个数字\n  - `\\s` : 任意空白字符：空格、制表符、换行符、中文全角空格、等\n  - `\\w` : 字母/数字/下划线/汉字 可见字符\n  - `.` : 除换行符以外的任意字符\n\n## 重复\n  - `{n}` : 前置位重复匹配 [n] 次\n  - `{n,m}` : 前置位重复匹配 [n-m] 次\n  - `{n,}` : 前置位重复匹配 [n-∞] 次\n  - `*` : 数量区间：[0-N]\n  - `+` : 数量区间：[1-N]\n  - `?` : 数量区间：[0-1]\n  \n## 字符类\n  - `[nml]` : 可以匹配到 n/m/l\n  \n## 条件\n  - `|` : __或__语句。存在逻辑短路\n  - `(m)` : __分组__语句。子式，可以指定重复什么的\n  \n## 反义\n  - `\\W` : 任意__不是__（字符、数字、下划线、汉字）\n  - `\\S` : 任意__不是__ 空白符\n  - `\\D` : 任意__不是__ 数字\n  - `\\B` : 任意__不是__ 单词开头或结尾\n  - `\\^x` : 除x以外的任意字符\n  - `[\\^abc]` : 除abc这几个字母以外的任意字符\n  \n## 后向引用\n  `(\\w+)`这样用`()`的部分称为一个分组，其匹配到的内容可以使用`\\n`来表示，`n`代表该分组为第n个分组。分组下标从`1`开始。\n  也可以自定义子表达式组名: `(?<Word>M) \\k<Word>` : 或 `(?'Word'M) \\k'Word'`，其中M为子式。\n  \n## 常用分组语法\n\n### 捕获\n  - `(exp)` : 匹配exp,并捕获文本到自动命名的组里\n  - `(?exp)` : 匹配exp,并捕获文本到名称为name的组里，也可以写成(?'name'exp)\n  - `(?:exp)` : 匹配exp,不捕获匹配的文本，也不给此分组分配组号\n\n### 零宽断言\n  - `(?=exp)` : 匹配exp前面的位置\n  - `(?<=exp)` : 匹配exp后面的位置\n  - `(?!exp)` : 匹配后面跟的不是exp的位置\n  - `(?<!exp)` : 匹配前面不是exp的位置\n\n### 注释\n  - `(?#comment)` : 这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读\n  \n## 贪婪与懒惰\n  贪婪：匹配的尽可能长\n  懒惰：匹配的尽可能短\n  \n  - `*?` : 重复任意次，但尽可能少重复\n  - `+?` : 重复1次或更多次，但尽可能少重复\n  - `??` : 重复0次或1次，但尽可能少重复\n  - `{n,m}?` : 重复n到m次，但尽可能少重复\n  - `{n,}?` : 重复n次以上，但尽可能少重复\n  \n## 平衡组/递归匹配\n  \\# 我开始看不懂了😂\n  \n## 其他\n  - `\\a` : 报警字符(打印它的效果是电脑嘀一声)\n  - `\\b` : 通常是单词分界位置，但如果在字符类里使用代表退格\n  - `\\t` : 制表符，Tab\n  - `\\r` : 回车\n  - `\\v` : 竖向制表符\n  - `\\f` : 换页符\n  - `\\n` : 换行符\n  - `\\e` : Escape\n  - `\\0nn` : ASCII代码中八进制代码为nn的字符\n  - `\\xnn` : ASCII代码中十六进制代码为nn的字符\n  - `\\unnnn` : Unicode代码中十六进制代码为nnnn的字符\n  - `\\cN` : ASCII控制字符。比如\\cC代表Ctrl+C\n  - `\\A` : 字符串开头(类似^，但不受处理多行选项的影响)\n  - `\\Z` : 字符串结尾或行尾(不受处理多行选项的影响)\n  - `\\z` : 字符串结尾(类似$，但不受处理多行选项的影响)\n  - `\\G` : 当前搜索的开头\n  - `\\p{name}` : Unicode中命名为name的字符类，例如\\p{IsGreek}\n  - `(?>exp)` : 贪婪子表达式\n  - `(?<x>-<y>exp)` : 平衡组\n  - `(?im-nsx:exp)` : 在子表达式exp中改变处理选项\n  - `(?im-nsx)` : 为表达式后面的部分改变处理选项\n  - `(?(exp)yes|no)` : 把exp当作零宽正向先行断言，如果在这个位置能匹配，使用yes作为此组的表达式；否则使用no\n  - `(?(exp)yes)` : 同上，只是使用空表达式作为no\n  - `(?(name)yes|no)` : 如果命名为name的组捕获到了内容，使用yes作为表达式；否则使用no\n  - `(?(name)yes)` : 同上，只是使用空表达式作为no\n  \n  \n## 栗子\n  - 5-12位QQ：`^\\d{5,12}$`\n  - IPv4地址：`((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)`\n  - `go go`、`kitty kitty`这样的叠词：`\\b(\\w+)\\b\\s+\\1\\b`\n  - 后向引用：`\\b(\\w+)\\b\\s+\\1\\b` == `\\b(?<Word>\\w+)\\b\\s+\\k<Word>\\b` == `\\b(?'Word'\\w+)\\b\\s+\\k'Word'\\b`\n  \n# 最后\n  知识研究了一下语法，还未详细测试。思考：这玩意真心厉害😂。","slug":"bruch-up-regular-expressions","published":1,"updated":"2016-12-30T11:12:05.000Z","_id":"cixbaqyn5000rcb6avrvjlv2x","comments":1,"layout":"post","photos":[],"link":"","content":"<p>正则表达式基础学习笔记。</p>\n<a id=\"more\"></a>\n<h1 id=\"前面\"><a href=\"#前面\" class=\"headerlink\" title=\"前面\"></a>前面</h1><p>  上次找了个很好的文章，可是手残没保存。。找不到了😭，现在重新找了一个文章：<a href=\"https://luke0922.gitbooks.io/learnregularexpressionin30minutes/content/index.html\" target=\"_blank\" rel=\"external\">正则表达式30分钟入门教程</a><br>  正如作者说的：</p>\n<blockquote>\n<h1 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h1><p>本文非原创，是改编自<a href=\"http://deerchao.net/tutorials/regex/regex.htm#mission\" target=\"_blank\" rel=\"external\">《正则表达式30分钟入门教程》</a>，因为原作者的排版个人不是很喜欢，而且内容上个人觉得有些地方需要改进，所以在 gitbook 上开了一本书。</p>\n</blockquote>\n<p>  OSC的<a href=\"http://tool.oschina.net/regex\" target=\"_blank\" rel=\"external\">在线正则表达式测试</a></p>\n<h1 id=\"开搞\"><a href=\"#开搞\" class=\"headerlink\" title=\"开搞\"></a>开搞</h1><h2 id=\"元字符\"><a href=\"#元字符\" class=\"headerlink\" title=\"元字符\"></a>元字符</h2><ul>\n<li><code>\\</code> : 转义</li>\n<li><code>\\b</code> : 单词开始或结束</li>\n<li><code>^</code> : 字符串开始</li>\n<li><code>$</code> : 字符串结束</li>\n<li><code>\\d</code> : 一个数字</li>\n<li><code>\\s</code> : 任意空白字符：空格、制表符、换行符、中文全角空格、等</li>\n<li><code>\\w</code> : 字母/数字/下划线/汉字 可见字符</li>\n<li><code>.</code> : 除换行符以外的任意字符</li>\n</ul>\n<h2 id=\"重复\"><a href=\"#重复\" class=\"headerlink\" title=\"重复\"></a>重复</h2><ul>\n<li><code>{n}</code> : 前置位重复匹配 [n] 次</li>\n<li><code>{n,m}</code> : 前置位重复匹配 [n-m] 次</li>\n<li><code>{n,}</code> : 前置位重复匹配 [n-∞] 次</li>\n<li><code>*</code> : 数量区间：[0-N]</li>\n<li><code>+</code> : 数量区间：[1-N]</li>\n<li><code>?</code> : 数量区间：[0-1]</li>\n</ul>\n<h2 id=\"字符类\"><a href=\"#字符类\" class=\"headerlink\" title=\"字符类\"></a>字符类</h2><ul>\n<li><code>[nml]</code> : 可以匹配到 n/m/l</li>\n</ul>\n<h2 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h2><ul>\n<li><code>|</code> : <strong>或</strong>语句。存在逻辑短路</li>\n<li><code>(m)</code> : <strong>分组</strong>语句。子式，可以指定重复什么的</li>\n</ul>\n<h2 id=\"反义\"><a href=\"#反义\" class=\"headerlink\" title=\"反义\"></a>反义</h2><ul>\n<li><code>\\W</code> : 任意<strong>不是</strong>（字符、数字、下划线、汉字）</li>\n<li><code>\\S</code> : 任意<strong>不是</strong> 空白符</li>\n<li><code>\\D</code> : 任意<strong>不是</strong> 数字</li>\n<li><code>\\B</code> : 任意<strong>不是</strong> 单词开头或结尾</li>\n<li><code>\\^x</code> : 除x以外的任意字符</li>\n<li><code>[\\^abc]</code> : 除abc这几个字母以外的任意字符</li>\n</ul>\n<h2 id=\"后向引用\"><a href=\"#后向引用\" class=\"headerlink\" title=\"后向引用\"></a>后向引用</h2><p>  <code>(\\w+)</code>这样用<code>()</code>的部分称为一个分组，其匹配到的内容可以使用<code>\\n</code>来表示，<code>n</code>代表该分组为第n个分组。分组下标从<code>1</code>开始。<br>  也可以自定义子表达式组名: <code>(?&lt;Word&gt;M) \\k&lt;Word&gt;</code> : 或 <code>(?&#39;Word&#39;M) \\k&#39;Word&#39;</code>，其中M为子式。</p>\n<h2 id=\"常用分组语法\"><a href=\"#常用分组语法\" class=\"headerlink\" title=\"常用分组语法\"></a>常用分组语法</h2><h3 id=\"捕获\"><a href=\"#捕获\" class=\"headerlink\" title=\"捕获\"></a>捕获</h3><ul>\n<li><code>(exp)</code> : 匹配exp,并捕获文本到自动命名的组里</li>\n<li><code>(?exp)</code> : 匹配exp,并捕获文本到名称为name的组里，也可以写成(?’name’exp)</li>\n<li><code>(?:exp)</code> : 匹配exp,不捕获匹配的文本，也不给此分组分配组号</li>\n</ul>\n<h3 id=\"零宽断言\"><a href=\"#零宽断言\" class=\"headerlink\" title=\"零宽断言\"></a>零宽断言</h3><ul>\n<li><code>(?=exp)</code> : 匹配exp前面的位置</li>\n<li><code>(?&lt;=exp)</code> : 匹配exp后面的位置</li>\n<li><code>(?!exp)</code> : 匹配后面跟的不是exp的位置</li>\n<li><code>(?&lt;!exp)</code> : 匹配前面不是exp的位置</li>\n</ul>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><ul>\n<li><code>(?#comment)</code> : 这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读</li>\n</ul>\n<h2 id=\"贪婪与懒惰\"><a href=\"#贪婪与懒惰\" class=\"headerlink\" title=\"贪婪与懒惰\"></a>贪婪与懒惰</h2><p>  贪婪：匹配的尽可能长<br>  懒惰：匹配的尽可能短</p>\n<ul>\n<li><code>*?</code> : 重复任意次，但尽可能少重复</li>\n<li><code>+?</code> : 重复1次或更多次，但尽可能少重复</li>\n<li><code>??</code> : 重复0次或1次，但尽可能少重复</li>\n<li><code>{n,m}?</code> : 重复n到m次，但尽可能少重复</li>\n<li><code>{n,}?</code> : 重复n次以上，但尽可能少重复</li>\n</ul>\n<h2 id=\"平衡组-递归匹配\"><a href=\"#平衡组-递归匹配\" class=\"headerlink\" title=\"平衡组/递归匹配\"></a>平衡组/递归匹配</h2><p>  # 我开始看不懂了😂</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li><code>\\a</code> : 报警字符(打印它的效果是电脑嘀一声)</li>\n<li><code>\\b</code> : 通常是单词分界位置，但如果在字符类里使用代表退格</li>\n<li><code>\\t</code> : 制表符，Tab</li>\n<li><code>\\r</code> : 回车</li>\n<li><code>\\v</code> : 竖向制表符</li>\n<li><code>\\f</code> : 换页符</li>\n<li><code>\\n</code> : 换行符</li>\n<li><code>\\e</code> : Escape</li>\n<li><code>\\0nn</code> : ASCII代码中八进制代码为nn的字符</li>\n<li><code>\\xnn</code> : ASCII代码中十六进制代码为nn的字符</li>\n<li><code>\\unnnn</code> : Unicode代码中十六进制代码为nnnn的字符</li>\n<li><code>\\cN</code> : ASCII控制字符。比如\\cC代表Ctrl+C</li>\n<li><code>\\A</code> : 字符串开头(类似^，但不受处理多行选项的影响)</li>\n<li><code>\\Z</code> : 字符串结尾或行尾(不受处理多行选项的影响)</li>\n<li><code>\\z</code> : 字符串结尾(类似$，但不受处理多行选项的影响)</li>\n<li><code>\\G</code> : 当前搜索的开头</li>\n<li><code>\\p{name}</code> : Unicode中命名为name的字符类，例如\\p{IsGreek}</li>\n<li><code>(?&gt;exp)</code> : 贪婪子表达式</li>\n<li><code>(?&lt;x&gt;-&lt;y&gt;exp)</code> : 平衡组</li>\n<li><code>(?im-nsx:exp)</code> : 在子表达式exp中改变处理选项</li>\n<li><code>(?im-nsx)</code> : 为表达式后面的部分改变处理选项</li>\n<li><code>(?(exp)yes|no)</code> : 把exp当作零宽正向先行断言，如果在这个位置能匹配，使用yes作为此组的表达式；否则使用no</li>\n<li><code>(?(exp)yes)</code> : 同上，只是使用空表达式作为no</li>\n<li><code>(?(name)yes|no)</code> : 如果命名为name的组捕获到了内容，使用yes作为表达式；否则使用no</li>\n<li><code>(?(name)yes)</code> : 同上，只是使用空表达式作为no</li>\n</ul>\n<h2 id=\"栗子\"><a href=\"#栗子\" class=\"headerlink\" title=\"栗子\"></a>栗子</h2><ul>\n<li>5-12位QQ：<code>^\\d{5,12}$</code></li>\n<li>IPv4地址：<code>((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)</code></li>\n<li><code>go go</code>、<code>kitty kitty</code>这样的叠词：<code>\\b(\\w+)\\b\\s+\\1\\b</code></li>\n<li>后向引用：<code>\\b(\\w+)\\b\\s+\\1\\b</code> == <code>\\b(?&lt;Word&gt;\\w+)\\b\\s+\\k&lt;Word&gt;\\b</code> == <code>\\b(?&#39;Word&#39;\\w+)\\b\\s+\\k&#39;Word&#39;\\b</code></li>\n</ul>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>  知识研究了一下语法，还未详细测试。思考：这玩意真心厉害😂。</p>\n","excerpt":"<p>正则表达式基础学习笔记。</p>","more":"<h1 id=\"前面\"><a href=\"#前面\" class=\"headerlink\" title=\"前面\"></a>前面</h1><p>  上次找了个很好的文章，可是手残没保存。。找不到了😭，现在重新找了一个文章：<a href=\"https://luke0922.gitbooks.io/learnregularexpressionin30minutes/content/index.html\">正则表达式30分钟入门教程</a><br>  正如作者说的：</p>\n<blockquote>\n<h1 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h1><p>本文非原创，是改编自<a href=\"http://deerchao.net/tutorials/regex/regex.htm#mission\">《正则表达式30分钟入门教程》</a>，因为原作者的排版个人不是很喜欢，而且内容上个人觉得有些地方需要改进，所以在 gitbook 上开了一本书。</p>\n</blockquote>\n<p>  OSC的<a href=\"http://tool.oschina.net/regex\">在线正则表达式测试</a></p>\n<h1 id=\"开搞\"><a href=\"#开搞\" class=\"headerlink\" title=\"开搞\"></a>开搞</h1><h2 id=\"元字符\"><a href=\"#元字符\" class=\"headerlink\" title=\"元字符\"></a>元字符</h2><ul>\n<li><code>\\</code> : 转义</li>\n<li><code>\\b</code> : 单词开始或结束</li>\n<li><code>^</code> : 字符串开始</li>\n<li><code>$</code> : 字符串结束</li>\n<li><code>\\d</code> : 一个数字</li>\n<li><code>\\s</code> : 任意空白字符：空格、制表符、换行符、中文全角空格、等</li>\n<li><code>\\w</code> : 字母/数字/下划线/汉字 可见字符</li>\n<li><code>.</code> : 除换行符以外的任意字符</li>\n</ul>\n<h2 id=\"重复\"><a href=\"#重复\" class=\"headerlink\" title=\"重复\"></a>重复</h2><ul>\n<li><code>{n}</code> : 前置位重复匹配 [n] 次</li>\n<li><code>{n,m}</code> : 前置位重复匹配 [n-m] 次</li>\n<li><code>{n,}</code> : 前置位重复匹配 [n-∞] 次</li>\n<li><code>*</code> : 数量区间：[0-N]</li>\n<li><code>+</code> : 数量区间：[1-N]</li>\n<li><code>?</code> : 数量区间：[0-1]</li>\n</ul>\n<h2 id=\"字符类\"><a href=\"#字符类\" class=\"headerlink\" title=\"字符类\"></a>字符类</h2><ul>\n<li><code>[nml]</code> : 可以匹配到 n/m/l</li>\n</ul>\n<h2 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h2><ul>\n<li><code>|</code> : <strong>或</strong>语句。存在逻辑短路</li>\n<li><code>(m)</code> : <strong>分组</strong>语句。子式，可以指定重复什么的</li>\n</ul>\n<h2 id=\"反义\"><a href=\"#反义\" class=\"headerlink\" title=\"反义\"></a>反义</h2><ul>\n<li><code>\\W</code> : 任意<strong>不是</strong>（字符、数字、下划线、汉字）</li>\n<li><code>\\S</code> : 任意<strong>不是</strong> 空白符</li>\n<li><code>\\D</code> : 任意<strong>不是</strong> 数字</li>\n<li><code>\\B</code> : 任意<strong>不是</strong> 单词开头或结尾</li>\n<li><code>\\^x</code> : 除x以外的任意字符</li>\n<li><code>[\\^abc]</code> : 除abc这几个字母以外的任意字符</li>\n</ul>\n<h2 id=\"后向引用\"><a href=\"#后向引用\" class=\"headerlink\" title=\"后向引用\"></a>后向引用</h2><p>  <code>(\\w+)</code>这样用<code>()</code>的部分称为一个分组，其匹配到的内容可以使用<code>\\n</code>来表示，<code>n</code>代表该分组为第n个分组。分组下标从<code>1</code>开始。<br>  也可以自定义子表达式组名: <code>(?&lt;Word&gt;M) \\k&lt;Word&gt;</code> : 或 <code>(?&#39;Word&#39;M) \\k&#39;Word&#39;</code>，其中M为子式。</p>\n<h2 id=\"常用分组语法\"><a href=\"#常用分组语法\" class=\"headerlink\" title=\"常用分组语法\"></a>常用分组语法</h2><h3 id=\"捕获\"><a href=\"#捕获\" class=\"headerlink\" title=\"捕获\"></a>捕获</h3><ul>\n<li><code>(exp)</code> : 匹配exp,并捕获文本到自动命名的组里</li>\n<li><code>(?exp)</code> : 匹配exp,并捕获文本到名称为name的组里，也可以写成(?’name’exp)</li>\n<li><code>(?:exp)</code> : 匹配exp,不捕获匹配的文本，也不给此分组分配组号</li>\n</ul>\n<h3 id=\"零宽断言\"><a href=\"#零宽断言\" class=\"headerlink\" title=\"零宽断言\"></a>零宽断言</h3><ul>\n<li><code>(?=exp)</code> : 匹配exp前面的位置</li>\n<li><code>(?&lt;=exp)</code> : 匹配exp后面的位置</li>\n<li><code>(?!exp)</code> : 匹配后面跟的不是exp的位置</li>\n<li><code>(?&lt;!exp)</code> : 匹配前面不是exp的位置</li>\n</ul>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><ul>\n<li><code>(?#comment)</code> : 这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读</li>\n</ul>\n<h2 id=\"贪婪与懒惰\"><a href=\"#贪婪与懒惰\" class=\"headerlink\" title=\"贪婪与懒惰\"></a>贪婪与懒惰</h2><p>  贪婪：匹配的尽可能长<br>  懒惰：匹配的尽可能短</p>\n<ul>\n<li><code>*?</code> : 重复任意次，但尽可能少重复</li>\n<li><code>+?</code> : 重复1次或更多次，但尽可能少重复</li>\n<li><code>??</code> : 重复0次或1次，但尽可能少重复</li>\n<li><code>{n,m}?</code> : 重复n到m次，但尽可能少重复</li>\n<li><code>{n,}?</code> : 重复n次以上，但尽可能少重复</li>\n</ul>\n<h2 id=\"平衡组-递归匹配\"><a href=\"#平衡组-递归匹配\" class=\"headerlink\" title=\"平衡组/递归匹配\"></a>平衡组/递归匹配</h2><p>  # 我开始看不懂了😂</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li><code>\\a</code> : 报警字符(打印它的效果是电脑嘀一声)</li>\n<li><code>\\b</code> : 通常是单词分界位置，但如果在字符类里使用代表退格</li>\n<li><code>\\t</code> : 制表符，Tab</li>\n<li><code>\\r</code> : 回车</li>\n<li><code>\\v</code> : 竖向制表符</li>\n<li><code>\\f</code> : 换页符</li>\n<li><code>\\n</code> : 换行符</li>\n<li><code>\\e</code> : Escape</li>\n<li><code>\\0nn</code> : ASCII代码中八进制代码为nn的字符</li>\n<li><code>\\xnn</code> : ASCII代码中十六进制代码为nn的字符</li>\n<li><code>\\unnnn</code> : Unicode代码中十六进制代码为nnnn的字符</li>\n<li><code>\\cN</code> : ASCII控制字符。比如\\cC代表Ctrl+C</li>\n<li><code>\\A</code> : 字符串开头(类似^，但不受处理多行选项的影响)</li>\n<li><code>\\Z</code> : 字符串结尾或行尾(不受处理多行选项的影响)</li>\n<li><code>\\z</code> : 字符串结尾(类似$，但不受处理多行选项的影响)</li>\n<li><code>\\G</code> : 当前搜索的开头</li>\n<li><code>\\p{name}</code> : Unicode中命名为name的字符类，例如\\p{IsGreek}</li>\n<li><code>(?&gt;exp)</code> : 贪婪子表达式</li>\n<li><code>(?&lt;x&gt;-&lt;y&gt;exp)</code> : 平衡组</li>\n<li><code>(?im-nsx:exp)</code> : 在子表达式exp中改变处理选项</li>\n<li><code>(?im-nsx)</code> : 为表达式后面的部分改变处理选项</li>\n<li><code>(?(exp)yes|no)</code> : 把exp当作零宽正向先行断言，如果在这个位置能匹配，使用yes作为此组的表达式；否则使用no</li>\n<li><code>(?(exp)yes)</code> : 同上，只是使用空表达式作为no</li>\n<li><code>(?(name)yes|no)</code> : 如果命名为name的组捕获到了内容，使用yes作为表达式；否则使用no</li>\n<li><code>(?(name)yes)</code> : 同上，只是使用空表达式作为no</li>\n</ul>\n<h2 id=\"栗子\"><a href=\"#栗子\" class=\"headerlink\" title=\"栗子\"></a>栗子</h2><ul>\n<li>5-12位QQ：<code>^\\d{5,12}$</code></li>\n<li>IPv4地址：<code>((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)</code></li>\n<li><code>go go</code>、<code>kitty kitty</code>这样的叠词：<code>\\b(\\w+)\\b\\s+\\1\\b</code></li>\n<li>后向引用：<code>\\b(\\w+)\\b\\s+\\1\\b</code> == <code>\\b(?&lt;Word&gt;\\w+)\\b\\s+\\k&lt;Word&gt;\\b</code> == <code>\\b(?&#39;Word&#39;\\w+)\\b\\s+\\k&#39;Word&#39;\\b</code></li>\n</ul>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>  知识研究了一下语法，还未详细测试。思考：这玩意真心厉害😂。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cixbaqym50000cb6an38fe818","category_id":"cix9qivk3000cny6ac6u2qo09","_id":"cixbaqyme0003cb6agph2obh1"},{"post_id":"cixbaqym90001cb6abz3lrsn0","category_id":"cix9qivjt0007ny6ag5hhfg8c","_id":"cixbaqymg0005cb6as4lq9m9q"},{"post_id":"cixbaqyml0007cb6ab5i3pjsp","category_id":"cix9qivkc000mny6a49wh0ud7","_id":"cixbaqymv000bcb6avc9iqoee"},{"post_id":"cixbaqymp0009cb6adqrtawap","category_id":"cix9qivkc000mny6a49wh0ud7","_id":"cixbaqymy000ecb6a4w3q16ju"},{"post_id":"cixbaqymr000acb6akcflul48","category_id":"cix9qivkc000mny6a49wh0ud7","_id":"cixbaqyn0000gcb6aws35sumb"},{"post_id":"cixbaqyn0000hcb6ar10202wt","category_id":"cix9qivkz0012ny6as013e2ic","_id":"cixbaqyn4000ncb6aos0hms41"},{"post_id":"cixbaqyn4000pcb6abklgczps","category_id":"cix9qivkz0015ny6a6dwqsnda","_id":"cixbaqyn8000ucb6a9ozlrqr2"},{"post_id":"cixbaqyn5000rcb6avrvjlv2x","category_id":"cix9qivk6000hny6anxlhi1jf","_id":"cixbaqyn8000wcb6ansxjrn8v"}],"PostTag":[{"post_id":"cixbaqymh0006cb6acwyghvc8","tag_id":"cixbaqymm0008cb6atb0zymmy","_id":"cixbaqyn1000jcb6a3k0bp5u3"},{"post_id":"cixbaqymh0006cb6acwyghvc8","tag_id":"cixbaqymv000ccb6ah2y4myht","_id":"cixbaqyn2000lcb6a8ragcvgm"},{"post_id":"cixbaqyn2000kcb6a1zeloihp","tag_id":"cixbaqymm0008cb6atb0zymmy","_id":"cixbaqyn4000ocb6a6s5fxrtr"},{"post_id":"cixbaqyn3000mcb6awxylj1tc","tag_id":"cixbaqymm0008cb6atb0zymmy","_id":"cixbaqyn5000qcb6aobm1yymh"},{"post_id":"cixbaqymy000fcb6afcwizlws","tag_id":"cixbaqymm0008cb6atb0zymmy","_id":"cixbaqyn8000tcb6a51ef7aol"},{"post_id":"cixbaqymy000fcb6afcwizlws","tag_id":"cixbaqyn1000icb6at8k352m6","_id":"cixbaqyn8000vcb6a3sogalm7"},{"post_id":"cixbaqyn4000pcb6abklgczps","tag_id":"cixbaqyn8000scb6atbrd5yza","_id":"cixbaqyn9000xcb6aj35fexba"}],"Tag":[{"name":"iOS","_id":"cixbaqymm0008cb6atb0zymmy"},{"name":"架构","_id":"cixbaqymv000ccb6ah2y4myht"},{"name":"ReactiveCocoa","_id":"cixbaqyn1000icb6at8k352m6"},{"name":"hexo","_id":"cixbaqyn8000scb6atbrd5yza"}]}}