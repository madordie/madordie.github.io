<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Fastlane自动化笔记]]></title>
      <url>https://madordie.github.io/2017/01/04/fastlane-note/</url>
      <content type="html"><![CDATA[<p>之前在搭建Jenkins的时候，由于看到Fastlane的配置好复杂，那么多，而当时的需求就是自动打包。。所以没有用，现在想来好气！今天翻到InfoQ的一个文章，又详细的了解了Fastlane之后，觉得此大法甚好，解决很多痛点！决定搞通这一切！</p>
<a id="more"></a>
<h1 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h1><ul>
<li>Fastlane只是一个 <strong>控制整体流程和实现的框架容器</strong>(<a href="http://icyleaf.com" target="_blank" rel="external">@icyleaf</a>)。其下有很多使用ruby开发的小工具，比如：测试、打包、发布、等功能，也可自己开发某功能，或者相互调用、传参更改等自定义。这个对理解和使用很重要！</li>
</ul>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>  Fastlane已被Fabric收购，所以按照其安装也很随意(<a href="https://fabric.io/features/distribution" target="_blank" rel="external">戳我配置</a>)。</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">default_platform :ios</div><div class="line"></div><div class="line">platform :ios do</div><div class="line"></div><div class="line">  lane :ent do</div><div class="line">    gym(</div><div class="line">        clean: true,</div><div class="line">        workspace: &quot;./xx/xx.xcworkspace&quot;,</div><div class="line">        scheme: &quot;Fangduoduo_ent&quot;,</div><div class="line">        include_bitcode: false,</div><div class="line">        export_method: &quot;enterprise&quot;,</div><div class="line">        )</div><div class="line">  end</div><div class="line"></div><div class="line">end</div></pre></td></tr></table></figure>
<h1 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h1><ul>
<li><a href="http://icyleaf.com/2016/07/fastlane-in-action/" target="_blank" rel="external">深入浅出 Fastlane 一看你就懂</a></li>
<li><a href="http://blog.fir.im/fir_im_weekly160505" target="_blank" rel="external">fir.im weekly - 「 持续集成 」实践教程合集</a></li>
<li><a href="https://everettjf.github.io/2015/09/08/ios-ci-with-fastlane" target="_blank" rel="external">使用fastlane实现iOS持续集成</a></li>
<li><a href="https://docs.fastlane.tools" target="_blank" rel="external">fastlane docs</a></li>
<li><a href="https://github.com/fastlane/fastlane" target="_blank" rel="external">fastlane GitHub</a></li>
<li><a href="http://www.infoq.com/cn/articles/actual-combat-of-fastlane-part01" target="_blank" rel="external">Fastlane实战（一）：移动开发自动化之道</a></li>
<li><a href="http://www.infoq.com/cn/articles/actual-combat-of-fastlane-part02" target="_blank" rel="external">Fastlane实战（二）：Action和Plugin机制</a></li>
<li><a href="http://www.infoq.com/cn/articles/actual-combat-of-fastlane-part03" target="_blank" rel="external">Fastlane实战（三）：Fastlane在Android平台的应用</a></li>
<li><a href="http://www.infoq.com/cn/articles/fastlane-automatic-testing" target="_blank" rel="external">Fastlane实战（四）：自动化测试篇</a></li>
<li><a href="http://www.infoq.com/cn/articles/fastlane-pro-tips" target="_blank" rel="external">Fastlane实战（五）：高级用法</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何实现AppStore查看更多的方法]]></title>
      <url>https://madordie.github.io/2016/12/23/uitextkit-ellipsis-sth-at-the-end/</url>
      <content type="html"><![CDATA[<p>看到AppStore的<code>更多</code>效果，做的不错哎，本文尝试采用<code>exclusionPaths</code>进行实现。不过有瑕疵。。来年用追加的方式在实现一下。感觉追加的方式比较简单。，</p>
<a id="more"></a>
<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="http://7xvzwi.com1.z0.glb.clouddn.com/UITextKit-AppStore-more-scene.gif://7xvzwi.com1.z0.glb.clouddn.com/leanote_new_logo.png" alt="效果图"></p>
<h1 id="简要说明"><a href="#简要说明" class="headerlink" title="简要说明"></a>简要说明</h1><p>  App Store中的查看更多动画是不是很给力？可是做起来确不知道如何下手？这里我提供一种UITextKit的方法来简单的实现一下。</p>
<p>  为了让例子简单，我就直接写了个more，那个view是自定义的，随便添加的，和本身的文本展示的并没有什么关系。</p>
<p>  为了让最后的那个moreView更加好用，增加了已经展开显示全部是否隐藏的控制。</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>  先看下Demo中调用吧：<br>  <figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> info = <span class="type">KTJExclusionLabel</span>()</div><div class="line">info.exclusionView = more</div><div class="line">info.isAutoHidenExclusionView = isAutoHiden.isOn</div><div class="line">info.numberOfLines = <span class="type">Int</span>.<span class="keyword">init</span>(line.text ?? <span class="string">""</span>) ?? <span class="number">0</span></div><div class="line">info.sizeToFit()</div></pre></td></tr></table></figure></p>
<p>  然后KTJExclusionLabel的实现：<br>  <figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">//  KTJExclusionLabel.swift</span></div><div class="line"><span class="comment">//  UITextKit-AppStore-more</span></div><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">//  Created by 孙继刚 on 2016/12/24.</span></div><div class="line"><span class="comment">//  Copyright © 2016年 madordie. All rights reserved.</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> UIKit</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">KTJExclusionLabel</span>: <span class="title">UITextView</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/// 行数</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">var</span> numberOfLines: <span class="type">Int</span> &#123;</div><div class="line">        <span class="keyword">set</span> &#123;</div><div class="line">            textContainer.maximumNumberOfLines = newValue</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">get</span> &#123;</div><div class="line">            <span class="keyword">return</span> textContainer.maximumNumberOfLines</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">var</span> isAutoHidenExclusionView: <span class="type">Bool</span> = <span class="literal">false</span></div><div class="line"></div><div class="line">    <span class="comment">/// 避让的view</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">weak</span> <span class="keyword">var</span> exclusionView: <span class="type">UIView</span>? &#123;</div><div class="line">        <span class="keyword">didSet</span> &#123;</div><div class="line">            setNeedsLayout()</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">override</span> <span class="keyword">init</span>(frame: <span class="type">CGRect</span>, textContainer: <span class="type">NSTextContainer</span>?) &#123;</div><div class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame, textContainer: textContainer)</div><div class="line">        setup()</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">required</span> <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</div><div class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(coder: aDecoder)</div><div class="line">        setup()</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">setup</span><span class="params">()</span></span> &#123;</div><div class="line">        isEditable = <span class="literal">true</span></div><div class="line">        textContainer.lineBreakMode = .byTruncatingTail</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">sizeToFit</span><span class="params">()</span></span> &#123;</div><div class="line">        <span class="comment">//  对其API还不熟悉，还没有找到如何一次判断出是否已经展示完全。。找到后再更</span></div><div class="line"></div><div class="line">        <span class="keyword">let</span> originLines = numberOfLines</div><div class="line">        numberOfLines = <span class="number">0</span></div><div class="line">        <span class="keyword">let</span> maxHeight = resizeThatFits(frame.size).height</div><div class="line">        numberOfLines = originLines</div><div class="line">        frame.size = resizeThatFits(frame.size)</div><div class="line"></div><div class="line">        exclusionView?.isHidden = <span class="literal">false</span></div><div class="line">        <span class="keyword">if</span> frame.height == maxHeight &#123;</div><div class="line">            frame.size = resizeThatFits(frame.size, isOver: <span class="literal">true</span>)</div><div class="line">            <span class="keyword">if</span> isAutoHidenExclusionView &#123;</div><div class="line">                exclusionView?.isHidden = <span class="literal">true</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">resizeThatFits</span><span class="params">(<span class="number">_</span> size: CGSize, isOver: Bool = <span class="literal">false</span>)</span></span> -&gt; <span class="type">CGSize</span> &#123;</div><div class="line">        <span class="keyword">var</span> frame = <span class="type">CGRect</span>.zero</div><div class="line">        frame.size = size</div><div class="line"></div><div class="line">        textContainer.exclusionPaths.removeAll()</div><div class="line"></div><div class="line">        <span class="keyword">var</span> ovalPaths = [<span class="type">UIBezierPath</span>]()</div><div class="line">        <span class="keyword">if</span> <span class="keyword">let</span> exclusionView = exclusionView &#123;</div><div class="line">            <span class="keyword">var</span> lastLineFrame = <span class="type">CGRect</span>.zero</div><div class="line">            <span class="keyword">var</span> lineIdx = <span class="number">0</span></div><div class="line">            <span class="keyword">var</span> lastFrame = <span class="type">CGRect</span>.zero</div><div class="line">            layoutManager.enumerateLineFragments(forGlyphRange: <span class="type">NSMakeRange</span>(<span class="number">0</span>, text.characters.<span class="built_in">count</span>)) &#123; (rect1, rect2, textContainer, range, pointer) <span class="keyword">in</span></div><div class="line">                <span class="keyword">if</span> lineIdx &lt; textContainer.maximumNumberOfLines &#123;</div><div class="line">                    lastLineFrame = rect2</div><div class="line">                &#125;</div><div class="line">                lineIdx += <span class="number">1</span></div><div class="line">                lastFrame = rect2</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> lastLineFrame == <span class="type">CGRect</span>.zero &#123;</div><div class="line">                lastLineFrame = lastFrame</div><div class="line">            &#125;</div><div class="line">            <span class="comment">//  矫正</span></div><div class="line">            lastLineFrame.origin.x += textContainerInset.<span class="keyword">left</span></div><div class="line">            lastLineFrame.origin.y += textContainerInset.top</div><div class="line"></div><div class="line">            <span class="comment">//  为末尾算出最大的frame</span></div><div class="line">            lastLineFrame.origin.x = lastLineFrame.maxX</div><div class="line">            lastLineFrame.origin.y = lastLineFrame.minY</div><div class="line">            lastLineFrame.size.width = frame.width - lastLineFrame.minX</div><div class="line">            lastLineFrame.size = exclusionView.sizeThatFits(lastLineFrame.size)</div><div class="line">            <span class="keyword">if</span> lastLineFrame.maxX &gt;= frame.width &#123;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> isOver == <span class="literal">false</span> &#123;</div><div class="line">                    lastLineFrame.origin.x -= lastLineFrame.maxX - frame.width + <span class="built_in">max</span>(textContainerInset.bottom, textContainerInset.<span class="keyword">right</span>)</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    lastLineFrame.origin.x = lastFrame.minX + textContainerInset.<span class="keyword">left</span> + <span class="number">5</span></div><div class="line">                    lastLineFrame.origin.y += lastFrame.height</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            exclusionView.frame = convert(lastLineFrame, to: exclusionView.superview)</div><div class="line"></div><div class="line">            <span class="keyword">var</span> ovalFrame = convert(exclusionView.bounds, from: exclusionView)</div><div class="line">            ovalFrame.origin.x += <span class="number">5</span> + textContainerInset.<span class="keyword">left</span></div><div class="line">            ovalPaths.append(<span class="type">UIBezierPath</span>(rect: ovalFrame))</div><div class="line"></div><div class="line">            <span class="keyword">if</span> isOver, isAutoHidenExclusionView &#123;</div><div class="line">                frame.size.height = lastFrame.maxY + textContainerInset.bottom</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                frame.size.height = ovalFrame.maxY + textContainerInset.bottom</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            frame.size = <span class="keyword">super</span>.sizeThatFits(size)</div><div class="line">        &#125;</div><div class="line">        textContainer.exclusionPaths = ovalPaths</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="type">CGSize</span>(width: frame.maxX, height: frame.maxY)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>  代码只是简单的做了一个DEMO，并没有仔细的调试，如果使用的话可能看需要根据自己的需求进行简单的调试吧。比如说偏移量、布局之类的。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[优雅的使用SwiftLint]]></title>
      <url>https://madordie.github.io/2016/12/23/elegant-to-use-swiftlint/</url>
      <content type="html"><![CDATA[<p>接入了SwiftLine，修改2000+的warning、300+error的一点笔记心得。</p>
<a id="more"></a>
<h1 id="SwiftLint"><a href="#SwiftLint" class="headerlink" title="SwiftLint"></a>SwiftLint</h1><blockquote>
<h2 id="SwiftLint-1"><a href="#SwiftLint-1" class="headerlink" title="SwiftLint"></a><a href="https://github.com/realm/SwiftLint" target="_blank" rel="external">SwiftLint</a></h2><p>A tool to enforce Swift style and conventions, loosely based on GitHub’s Swift Style Guide.<br>  SwiftLint hooks into Clang and SourceKit to use the AST representation of your source files for more accurate results.<br>  SwiftLint 是一个用于强制检查 Swift 代码风格和规定的一个工具，基本上以 GitHub’s Swift 代码风格指南为基础。<br>  SwiftLint Hook 了 Clang 和 SourceKit 从而能够使用 AST 来表示源代码文件的更多精确结果。</p>
</blockquote>
<h2 id="对原有代码格式化"><a href="#对原有代码格式化" class="headerlink" title="对原有代码格式化"></a>对原有代码格式化</h2><h3 id="TrailingWhitespaceRule"><a href="#TrailingWhitespaceRule" class="headerlink" title="TrailingWhitespaceRule"></a>TrailingWhitespaceRule</h3><h4 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h4><blockquote>
<p>xxx.swift:34: warning: Trailing Whitespace Violation: Lines should not have trailing whitespace. (trailing_whitespace)</p>
</blockquote>
<p>  规则实现：<a href="https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/TrailingWhitespaceRule.swift" target="_blank" rel="external">TrailingWhitespaceRule.swift</a></p>
<h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>  Xcode中的”空白行”。其实并不空白，含有空的字符。最明显的表现为git提交的时候会有明显的黄色警告。</p>
<h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><p>  Xcode中有选项可以直接控制，具体路径为<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Xcode </div><div class="line">-&gt; Preferences</div><div class="line">-&gt; Text Editing</div><div class="line">-&gt; While editing</div><div class="line">-&gt; [V] Including whitespace-only lines</div></pre></td></tr></table></figure></p>
<h3 id="ColonRule"><a href="#ColonRule" class="headerlink" title="ColonRule"></a>ColonRule</h3><h4 id="现象-1"><a href="#现象-1" class="headerlink" title="现象"></a>现象</h4><blockquote>
<p>xxx.swift:13:71: warning: Colon Violation: Colons should be next to the identifier when specifying a type. (colon)</p>
</blockquote>
<h4 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h4><p>  变量方法的 <code>:</code> 的右边应该有一个空格才能识别出来，且左侧不能留空格。所以写代码的时候随手写上还是比较好的。。<br>  栗子：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//  OK:</div><div class="line">var responseData: [String : Any]? = nil // 返回结果，请求之前为nil</div><div class="line"></div><div class="line">//  warning: 第一个&apos;:&apos;处左侧有空格</div><div class="line">var responseData : [String : Any]? = nil // 返回结果，请求之前为nil</div><div class="line"></div><div class="line">//  warning: 第一个&apos;:&apos;处右侧无空格</div><div class="line">var responseData:[String : Any]? = nil // 返回结果，请求之前为nil</div></pre></td></tr></table></figure></p>
<h4 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h4><p>  规范书写</p>
<h3 id="LineLengthRule"><a href="#LineLengthRule" class="headerlink" title="LineLengthRule"></a>LineLengthRule</h3><h4 id="现象-2"><a href="#现象-2" class="headerlink" title="现象"></a>现象</h4><blockquote>
<p>xxx.swift:90: warning: Line Length Violation: Line should be 100 characters or less: currently 101 characters (line_length)</p>
</blockquote>
<h4 id="原因-2"><a href="#原因-2" class="headerlink" title="原因"></a>原因</h4><p>  行数超了呗。。</p>
<h4 id="解决办法-2"><a href="#解决办法-2" class="headerlink" title="解决办法"></a>解决办法</h4><ul>
<li>方法名字写的简单易懂</li>
</ul>
<h3 id="ControlStatementRule"><a href="#ControlStatementRule" class="headerlink" title="ControlStatementRule"></a>ControlStatementRule</h3><h4 id="现象-3"><a href="#现象-3" class="headerlink" title="现象"></a>现象</h4><blockquote>
<p>xxx.swift:169:21: warning: Control Statement Violation: if,for,while,do statements shouldn’t wrap their conditionals in parentheses. (control_statement)</p>
</blockquote>
<p>  规则实现<a href="https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/ControlStatementRule.swift" target="_blank" rel="external">ControlStatementRule</a></p>
<h4 id="原因-3"><a href="#原因-3" class="headerlink" title="原因"></a>原因</h4><p>  swift中<code>if,for,while,do</code> 语句不应该用<code>()</code></p>
<h3 id="UnusedClosureParameterRule"><a href="#UnusedClosureParameterRule" class="headerlink" title="UnusedClosureParameterRule"></a>UnusedClosureParameterRule</h3><h4 id="现象-4"><a href="#现象-4" class="headerlink" title="现象"></a>现象</h4><blockquote>
<p>xxx.swift:103:62: warning: Unused Closure Parameter Violation: Unused parameter “response” in a closure should be replaced with _. (unused_closure_parameter)</p>
</blockquote>
<p>  规则实现<a href="https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/UnusedClosureParameterRule.swift" target="_blank" rel="external">UnusedClosureParameterRule</a></p>
<h4 id="原因-4"><a href="#原因-4" class="headerlink" title="原因"></a>原因</h4><p>  <code>response</code> 没有使用，建议替换为 <code>_</code>。</p>
<h3 id="CyclomaticComplexityRule"><a href="#CyclomaticComplexityRule" class="headerlink" title="CyclomaticComplexityRule"></a>CyclomaticComplexityRule</h3><h4 id="现象-5"><a href="#现象-5" class="headerlink" title="现象"></a>现象</h4><blockquote>
<p>xxx.swift:69:5: warning: Cyclomatic Complexity Violation: Function should have complexity 10 or less: currently complexity equals 14 (cyclomatic_complexity)</p>
</blockquote>
<p>  规则实现<a href="https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/CyclomaticComplexityRule.swift" target="_blank" rel="external">CyclomaticComplexityRule</a></p>
<h4 id="原因-5"><a href="#原因-5" class="headerlink" title="原因"></a>原因</h4><p>  😂，他说你这函数写的太复杂了。看实现是说不能有过多的<code>if {}</code></p>
<h3 id="OpeningBraceRule"><a href="#OpeningBraceRule" class="headerlink" title="OpeningBraceRule"></a>OpeningBraceRule</h3><h4 id="现象-6"><a href="#现象-6" class="headerlink" title="现象"></a>现象</h4><blockquote>
<p>xxx.swift:221:34: warning: Opening Brace Spacing Violation: Opening braces should be preceded by a single space and on the same line as the declaration. (opening_brace)</p>
</blockquote>
<p>  规则实现<a href="https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/OpeningBraceRule.swift" target="_blank" rel="external">OpeningBraceRule</a></p>
<h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>  <code>{}</code>的前面要有空格隔开</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[科学上网之搬瓦工ss搭建笔记]]></title>
      <url>https://madordie.github.io/2016/12/19/bandwagonhost-note/</url>
      <content type="html"><![CDATA[<p>原来吧，用用goagent、Lantern、XX-Net，确实，这玩意只能Google出来结果，但是有的站点打不开才是最骚的。。<br>同事搞了个搬瓦工挺便宜，于是乎就也搞了一个。不过强迫症犯了，尝试了各种SS版本以及各种优化，目的是找个流畅点的版本进行<strong>科学上网</strong>。</p>
<a id="more"></a>
<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><ul>
<li>红线越不得！红线越不得！红线越不得！重要的事情说3遍。</li>
<li>参看第一条</li>
<li>参看第一条</li>
<li>参看第一条</li>
</ul>
<h1 id="目前安装的-rss"><a href="#目前安装的-rss" class="headerlink" title="目前安装的 rss"></a>目前安装的 rss</h1><p>  尝试了各种版本的系统，各种ss分支，最后用了rss，然后又花了一下，觉得速度可以了，延迟的问题无解。ping过去就是那么慢。。<br>  注意：为了重启不配置，要把里面没有自启动的添加到启动项。具体方法 Google一下。我加在了 <code>/etc/rc.local</code></p>
<h2 id="shadowsocks-rss"><a href="#shadowsocks-rss" class="headerlink" title="shadowsocks-rss"></a>shadowsocks-rss</h2><ul>
<li><a href="https://github.com/breakwa11/shadowsocks-rss/wiki" target="_blank" rel="external">wiki</a></li>
<li><a href="https://github.com/breakwa11/shadowsocks-rss/wiki/Server-Setup" target="_blank" rel="external">ShadowsocksR 服务端安装教程</a></li>
<li><a href="https://github.com/shadowsocksr/ShadowsocksX-NG/releases" target="_blank" rel="external">macOS</a></li>
<li><a href="https://itunes.apple.com/cn/app/id1178584911" target="_blank" rel="external">iOS</a></li>
</ul>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><ul>
<li><a href="http://shadowsocks.org/en/config/advanced.html" target="_blank" rel="external">官方优化方案</a></li>
<li><a href="https://www.dou-bi.co/netspeeder-jc1/" target="_blank" rel="external">Net Speeder</a> <code>wget http://linux.linzhihao.cn/shell/netspeeder.sh &amp; bash netspeeder.sh</code></li>
</ul>
<h2 id="本地访问VPS脚本"><a href="#本地访问VPS脚本" class="headerlink" title="本地访问VPS脚本"></a>本地访问VPS脚本</h2><p>  我比较懒，密码都是随机的也不想改，所以做了一个脚本用来直接ssh登陆。<br>  后来我发现我需要下载一些文件，于是乎我增加了两个参数。。<br>  安装系统的时候修改一下，将<code>password</code>修改为随机生成的密码，这样也不用记录，直接复制粘贴。。<br>  同时将<code>12345</code>替换为端口号。<br>  将<code>1.2.3.4</code>替换为服务器IP，这个只需要写一次就好，基本上也不会改。。<br>  这样搞完之后在<code>~/.profile</code>中增加<code>alias vps=&quot;/Users/Madordie/shell/Mac_shell/ss.sh&quot;</code>，然后执行<code>source ~/.profile</code>即可。</p>
<p>  这样就可以使用下面的简写：</p>
<pre><code>- SSH登陆`vps`
- 下载文件`vps /server_path /local_path`，自行修改后面俩参数
</code></pre>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ cat ~/shell/Mac_shell/ss.sh </div><div class="line"></div><div class="line">#!/bin/bash</div><div class="line"></div><div class="line">echo &apos;password&apos;</div><div class="line">port=12345</div><div class="line">ip=1.2.3.4</div><div class="line">usr=root</div><div class="line"></div><div class="line">if [ $# -eq 0 ]; then</div><div class="line">    ssh $usr@$ip -p $port</div><div class="line">elif [ $# -eq 2 ]; then </div><div class="line">    scp -P $port $usr@$ip:$1 $2</div><div class="line">else</div><div class="line">    echo &quot;($*)你要干嘛。。&quot;</div><div class="line">fi</div></pre></td></tr></table></figure>
<h1 id="尝试的时候各种用的环境搭建"><a href="#尝试的时候各种用的环境搭建" class="headerlink" title="尝试的时候各种用的环境搭建"></a>尝试的时候各种用的环境搭建</h1><p>  很显然上面的已经足够了，这个只是留个笔记，用来快速搭建某个环境啥的。。</p>
<h2 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h2><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><ol>
<li>直接安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install git</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="go"><a href="#go" class="headerlink" title="go"></a>go</h3><ol>
<li><p>下载二进制文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://storage.googleapis.com/golang/go1.7.3.linux-amd64.tar.gz</div></pre></td></tr></table></figure>
</li>
<li><p>解压并创建工作目录：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxf go1.7.3.linux-amd64.tar.gz -C /usr/local/</div></pre></td></tr></table></figure>
</li>
<li><p>设置环境变量：<br>在 /etc/profile 添加：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">export GOROOT=/usr/local/go </div><div class="line">export GOBIN=$GOROOT/bin</div><div class="line">export GOPKG=$GOROOT/pkg/tool/linux_amd64 </div><div class="line">export GOARCH=amd64</div><div class="line">export GOOS=linux</div><div class="line">export GOPATH=/Golang</div><div class="line">export PATH=$PATH:$GOBIN:$GOPKG:$GOPATH/bin</div></pre></td></tr></table></figure>
<ol>
<li>使之生效或者重新登录Linux也可<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/profile</div></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ol>
<h2 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h2><p>  <code>scp -P 8888 root@127.0.0.10:/root/my_key/ca.cert.pem .</code></p>
<h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div></pre></td></tr></table></figure>
<h3 id="git-1"><a href="#git-1" class="headerlink" title="git"></a>git</h3>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install git</div></pre></td></tr></table></figure>
<h3 id="go-1"><a href="#go-1" class="headerlink" title="go"></a>go</h3>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install golang</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[正则表达式学习笔记]]></title>
      <url>https://madordie.github.io/2016/12/19/bruch-up-regular-expressions/</url>
      <content type="html"><![CDATA[<p>正则表达式基础学习笔记。</p>
<a id="more"></a>
<h1 id="前面"><a href="#前面" class="headerlink" title="前面"></a>前面</h1><p>  上次找了个很好的文章，可是手残没保存。。找不到了😭，现在重新找了一个文章：<a href="https://luke0922.gitbooks.io/learnregularexpressionin30minutes/content/index.html" target="_blank" rel="external">正则表达式30分钟入门教程</a><br>  正如作者说的：</p>
<blockquote>
<h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p>本文非原创，是改编自<a href="http://deerchao.net/tutorials/regex/regex.htm#mission" target="_blank" rel="external">《正则表达式30分钟入门教程》</a>，因为原作者的排版个人不是很喜欢，而且内容上个人觉得有些地方需要改进，所以在 gitbook 上开了一本书。</p>
</blockquote>
<p>  OSC的<a href="http://tool.oschina.net/regex" target="_blank" rel="external">在线正则表达式测试</a></p>
<h1 id="开搞"><a href="#开搞" class="headerlink" title="开搞"></a>开搞</h1><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><ul>
<li><code>\</code> : 转义</li>
<li><code>\b</code> : 单词开始或结束</li>
<li><code>^</code> : 字符串开始</li>
<li><code>$</code> : 字符串结束</li>
<li><code>\d</code> : 一个数字</li>
<li><code>\s</code> : 任意空白字符：空格、制表符、换行符、中文全角空格、等</li>
<li><code>\w</code> : 字母/数字/下划线/汉字 可见字符</li>
<li><code>.</code> : 除换行符以外的任意字符</li>
</ul>
<h2 id="重复"><a href="#重复" class="headerlink" title="重复"></a>重复</h2><ul>
<li><code>{n}</code> : 前置位重复匹配 [n] 次</li>
<li><code>{n,m}</code> : 前置位重复匹配 [n-m] 次</li>
<li><code>{n,}</code> : 前置位重复匹配 [n-∞] 次</li>
<li><code>*</code> : 数量区间：[0-N]</li>
<li><code>+</code> : 数量区间：[1-N]</li>
<li><code>?</code> : 数量区间：[0-1]</li>
</ul>
<h2 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h2><ul>
<li><code>[nml]</code> : 可以匹配到 n/m/l</li>
</ul>
<h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><ul>
<li><code>|</code> : <strong>或</strong>语句。存在逻辑短路</li>
<li><code>(m)</code> : <strong>分组</strong>语句。子式，可以指定重复什么的</li>
</ul>
<h2 id="反义"><a href="#反义" class="headerlink" title="反义"></a>反义</h2><ul>
<li><code>\W</code> : 任意<strong>不是</strong>（字符、数字、下划线、汉字）</li>
<li><code>\S</code> : 任意<strong>不是</strong> 空白符</li>
<li><code>\D</code> : 任意<strong>不是</strong> 数字</li>
<li><code>\B</code> : 任意<strong>不是</strong> 单词开头或结尾</li>
<li><code>\^x</code> : 除x以外的任意字符</li>
<li><code>[\^abc]</code> : 除abc这几个字母以外的任意字符</li>
</ul>
<h2 id="后向引用"><a href="#后向引用" class="headerlink" title="后向引用"></a>后向引用</h2><p>  <code>(\w+)</code>这样用<code>()</code>的部分称为一个分组，其匹配到的内容可以使用<code>\n</code>来表示，<code>n</code>代表该分组为第n个分组。分组下标从<code>1</code>开始。<br>  也可以自定义子表达式组名: <code>(?&lt;Word&gt;M) \k&lt;Word&gt;</code> : 或 <code>(?&#39;Word&#39;M) \k&#39;Word&#39;</code>，其中M为子式。</p>
<h2 id="常用分组语法"><a href="#常用分组语法" class="headerlink" title="常用分组语法"></a>常用分组语法</h2><h3 id="捕获"><a href="#捕获" class="headerlink" title="捕获"></a>捕获</h3><ul>
<li><code>(exp)</code> : 匹配exp,并捕获文本到自动命名的组里</li>
<li><code>(?exp)</code> : 匹配exp,并捕获文本到名称为name的组里，也可以写成(?’name’exp)</li>
<li><code>(?:exp)</code> : 匹配exp,不捕获匹配的文本，也不给此分组分配组号</li>
</ul>
<h3 id="零宽断言"><a href="#零宽断言" class="headerlink" title="零宽断言"></a>零宽断言</h3><ul>
<li><code>(?=exp)</code> : 匹配exp前面的位置</li>
<li><code>(?&lt;=exp)</code> : 匹配exp后面的位置</li>
<li><code>(?!exp)</code> : 匹配后面跟的不是exp的位置</li>
<li><code>(?&lt;!exp)</code> : 匹配前面不是exp的位置</li>
</ul>
<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul>
<li><code>(?#comment)</code> : 这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读</li>
</ul>
<h2 id="贪婪与懒惰"><a href="#贪婪与懒惰" class="headerlink" title="贪婪与懒惰"></a>贪婪与懒惰</h2><p>  贪婪：匹配的尽可能长<br>  懒惰：匹配的尽可能短</p>
<ul>
<li><code>*?</code> : 重复任意次，但尽可能少重复</li>
<li><code>+?</code> : 重复1次或更多次，但尽可能少重复</li>
<li><code>??</code> : 重复0次或1次，但尽可能少重复</li>
<li><code>{n,m}?</code> : 重复n到m次，但尽可能少重复</li>
<li><code>{n,}?</code> : 重复n次以上，但尽可能少重复</li>
</ul>
<h2 id="平衡组-递归匹配"><a href="#平衡组-递归匹配" class="headerlink" title="平衡组/递归匹配"></a>平衡组/递归匹配</h2><p>  # 我开始看不懂了😂</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><code>\a</code> : 报警字符(打印它的效果是电脑嘀一声)</li>
<li><code>\b</code> : 通常是单词分界位置，但如果在字符类里使用代表退格</li>
<li><code>\t</code> : 制表符，Tab</li>
<li><code>\r</code> : 回车</li>
<li><code>\v</code> : 竖向制表符</li>
<li><code>\f</code> : 换页符</li>
<li><code>\n</code> : 换行符</li>
<li><code>\e</code> : Escape</li>
<li><code>\0nn</code> : ASCII代码中八进制代码为nn的字符</li>
<li><code>\xnn</code> : ASCII代码中十六进制代码为nn的字符</li>
<li><code>\unnnn</code> : Unicode代码中十六进制代码为nnnn的字符</li>
<li><code>\cN</code> : ASCII控制字符。比如\cC代表Ctrl+C</li>
<li><code>\A</code> : 字符串开头(类似^，但不受处理多行选项的影响)</li>
<li><code>\Z</code> : 字符串结尾或行尾(不受处理多行选项的影响)</li>
<li><code>\z</code> : 字符串结尾(类似$，但不受处理多行选项的影响)</li>
<li><code>\G</code> : 当前搜索的开头</li>
<li><code>\p{name}</code> : Unicode中命名为name的字符类，例如\p{IsGreek}</li>
<li><code>(?&gt;exp)</code> : 贪婪子表达式</li>
<li><code>(?&lt;x&gt;-&lt;y&gt;exp)</code> : 平衡组</li>
<li><code>(?im-nsx:exp)</code> : 在子表达式exp中改变处理选项</li>
<li><code>(?im-nsx)</code> : 为表达式后面的部分改变处理选项</li>
<li><code>(?(exp)yes|no)</code> : 把exp当作零宽正向先行断言，如果在这个位置能匹配，使用yes作为此组的表达式；否则使用no</li>
<li><code>(?(exp)yes)</code> : 同上，只是使用空表达式作为no</li>
<li><code>(?(name)yes|no)</code> : 如果命名为name的组捕获到了内容，使用yes作为表达式；否则使用no</li>
<li><code>(?(name)yes)</code> : 同上，只是使用空表达式作为no</li>
</ul>
<h2 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h2><ul>
<li>5-12位QQ：<code>^\d{5,12}$</code></li>
<li>IPv4地址：<code>((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)</code></li>
<li><code>go go</code>、<code>kitty kitty</code>这样的叠词：<code>\b(\w+)\b\s+\1\b</code></li>
<li>后向引用：<code>\b(\w+)\b\s+\1\b</code> == <code>\b(?&lt;Word&gt;\w+)\b\s+\k&lt;Word&gt;\b</code> == <code>\b(?&#39;Word&#39;\w+)\b\s+\k&#39;Word&#39;\b</code></li>
</ul>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>  知识研究了一下语法，还未详细测试。思考：这玩意真心厉害😂。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DEBUG - swift中取出通知中的frame]]></title>
      <url>https://madordie.github.io/2016/12/01/debug-swift-notifa-frame/</url>
      <content type="html"><![CDATA[<p>swift中获取OC存储的Frame两种获取方案。</p>
<a id="more"></a>
<h1 id="Swift下在Notification-userInfo取Frame，Debug和Release情况下还不一样。。"><a href="#Swift下在Notification-userInfo取Frame，Debug和Release情况下还不一样。。" class="headerlink" title="Swift下在Notification.userInfo取Frame，Debug和Release情况下还不一样。。"></a>Swift下在Notification.userInfo取Frame，Debug和Release情况下还不一样。。</h1><p>  –&gt;更新于2016.12.1</p>
<p>  <strong> Version 8.1 (8B62) </strong></p>
  <figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">keyboardShow</span><span class="params">(sender: Notification)</span></span> &#123;</div><div class="line">    <span class="keyword">var</span> endFrame = <span class="type">CGRect</span>.zero        </div><div class="line">    <span class="keyword">if</span> <span class="keyword">let</span> frame = sender.userInfo?[<span class="type">UIKeyboardFrameEndUserInfoKey</span>] <span class="keyword">as</span>? <span class="type">CGRect</span> &#123;</div><div class="line">        endFrame = frame</div><div class="line">        <span class="comment">//  *** Debug是可以通过的。但是Release无法通过。</span></div><div class="line">        <span class="type">NSLog</span>(<span class="string">"&lt;&lt;&lt;INFO&gt;&gt;&gt;: as CGRect"</span>)</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="keyword">let</span> value = sender.userInfo?[<span class="type">UIKeyboardFrameEndUserInfoKey</span>] <span class="keyword">as</span>? <span class="type">NSValue</span> &#123;</div><div class="line">        endFrame = value.cgRectValue</div><div class="line">        <span class="comment">//  *** Release会取出NSValue</span></div><div class="line">        <span class="type">NSLog</span>(<span class="string">"&lt;&lt;&lt;INFO&gt;&gt;&gt;: as NSValue"</span>)</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>  由于Release无法调试，所以费了不少劲。首先Swift中的字典已经可以存放值类型，其本身也是值类型。所以我首先选择了第一种写法<code>let frame = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? CGRect</code>, 但是Release情况下却发生解包失败的情况。所以采用OC的传统写法<code>let value = sender.userInfo?[UIKeyboardFrameEndUserInfoKey] as? NSValue</code>。就能解析出来。但是总感觉OC的方法不够swift😂。。。</p>
<p>  有同事直接强制转换为NSValue是没有问题的，于是乎试了一下，发现直接校验NSValue就可以。但是swift中感觉不应该有这个转换了，毕竟本身就可以存储CGRect..</p>
<p>  猜测原因：目前阶段Swift的字典和OC的字典数据结构还并未完全一致。。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DEBUG - Xcode8解析.crash]]></title>
      <url>https://madordie.github.io/2016/11/14/debug-xcode8-analysis-crash-file/</url>
      <content type="html"><![CDATA[<p>5步解析<code>.crash</code>文件</p>
<a id="more"></a>
<h1 id="Xcode8中解析-crash文件"><a href="#Xcode8中解析-crash文件" class="headerlink" title="Xcode8中解析.crash文件"></a>Xcode8中解析.crash文件</h1><ol>
<li>导出<code>x.crash</code>文件，放置在<code>目录A</code>下</li>
<li>复制<code>工程名.app.dSYM</code>到<code>目录A</code></li>
<li>配置环境变量，运行<code>export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer</code></li>
<li>拷贝脚本文件，运行<code>cp /Applications/Xcode.app/Contents/SharedFrameworks/DVTFoundation.framework/Versions/A/Resources/symbolicatecrash 目录A</code></li>
<li>到<code>目录A</code>解析，运行<code>./symbolicatecrash x.crash 工程名.app.dSYM &gt; 自定义输出结果文件名</code></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DEBUG - UIView.h#190]]></title>
      <url>https://madordie.github.io/2016/10/11/debug-uiview-m-190/</url>
      <content type="html"><![CDATA[<p>CRASH:<br><code>void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)()</code></p>
<a id="more"></a>
<h1 id="UIView-m-190-UIViewReportBrokenSuperviewChain"><a href="#UIView-m-190-UIViewReportBrokenSuperviewChain" class="headerlink" title="UIView.m:190 - UIViewReportBrokenSuperviewChain"></a>UIView.m:190 - UIViewReportBrokenSuperviewChain</h1><h2 id="异常信息："><a href="#异常信息：" class="headerlink" title="异常信息："></a>异常信息：</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">*** Assertion failure in void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)(), /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3599.6.1/UIView.m:190</div><div class="line">invalid mode &apos;kCFRunLoopCommonModes&apos; provided to CFRunLoopRunSpecific - break on _CFRunLoopError_RunCalledWithInvalidMode to debug. This message will only appear once per execution.</div><div class="line">libc++abi.dylib: terminate_handler unexpectedly threw an exception</div></pre></td></tr></table></figure>
<h2 id="异常分析"><a href="#异常分析" class="headerlink" title="异常分析"></a>异常分析</h2><p>  APP crash在<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[keyWindow addSubview:weakSelf];</div></pre></td></tr></table></figure></p>
<p>  <a href="#错误堆栈">错误堆栈信息</a>。</p>
<p>  但是真正造成crash的代码为：</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[self.layer insertSublayer:xxxView.layer atIndex:0];</div></pre></td></tr></table></figure>
<p>  解决方案：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[self layoutIfNeeded];</div><div class="line">[self.layer insertSublayer:xxxView.layer atIndex:0];</div></pre></td></tr></table></figure></p>
<p>  原因分析：<br>  下面这个说的很在理</p>
<blockquote>
<p><a href="http://stackoverflow.com/questions/39565424/swift-uiviewreportbrokensuperviewchain-cause-by-layer-manipulation" target="_blank" rel="external">http://stackoverflow.com/questions/39565424/swift-uiviewreportbrokensuperviewchain-cause-by-layer-manipulation</a></p>
<p>I had this issue with a library when moving over to Xcode 8 (Material-Controls-For-iOS - MDTextField). I found that the problem was coming from where the layer of one view (which had no superview) was being added to another.</p>
<p>It looks like this may be the case for yourself also - your toolbar being created has not been added to a superview first. The fix I used was to add the view as a subview of the view that the layer was being added to, so in your case adding the toolbar as a subview of myModelView should stop the error.</p>
</blockquote>
<h2 id="碰到该问题的还有"><a href="#碰到该问题的还有" class="headerlink" title="碰到该问题的还有"></a>碰到该问题的还有</h2><ul>
<li><a href="http://technology.ezeenow.com/Posts/119474/Unity_Prime31_prompt_for_photo_is_crashing_on_iOS_10_and_XCode_8" target="_blank" rel="external">Google出来的一个，但是并未看到相关回复。。。</a></li>
<li><a href="http://www.th7.cn/Program/IOS/201609/975582.shtml" target="_blank" rel="external">IOS10上崩溃错误“View has lost track of its superview, most (并未找到原贴)</a></li>
<li><a href="http://stackoverflow.com/questions/39565424/swift-uiviewreportbrokensuperviewchain-cause-by-layer-manipulation" target="_blank" rel="external">stackoverflow(这个分析的很到位)</a></li>
</ul>
<h2 id="错误堆栈-lt-脱敏-gt"><a href="#错误堆栈-lt-脱敏-gt" class="headerlink" title="错误堆栈 &lt;脱敏&gt;"></a><a name="错误堆栈">错误堆栈 &lt;脱敏&gt;</a></h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">*** Assertion failure in void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)(), /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3599.6.1/UIView.m:190</div><div class="line">invalid mode &apos;kCFRunLoopCommonModes&apos; provided to CFRunLoopRunSpecific - break on _CFRunLoopError_RunCalledWithInvalidMode to debug. This message will only appear once per execution.</div><div class="line">libc++abi.dylib: terminate_handler unexpectedly threw an exception</div><div class="line"></div><div class="line">(lldb) bt</div><div class="line">* thread #1: tid = 0x87c18, 0x000000018238c524 libobjc.A.dylib`objc_exception_throw, queue = &apos;com.apple.main-thread&apos;, stop reason = breakpoint 1.2</div><div class="line">    frame #0: 0x000000018238c524 libobjc.A.dylib`objc_exception_throw</div><div class="line">    frame #1: 0x0000000183954094 CoreFoundation`+[NSException raise:format:arguments:] + 104</div><div class="line">    frame #2: 0x00000001843de898 Foundation`-[NSAssertionHandler handleFailureInFunction:file:lineNumber:description:] + 88</div><div class="line">    frame #3: 0x0000000189a7cf9c UIKit`UIViewReportBrokenSuperviewChain + 472</div><div class="line">    frame #4: 0x0000000189a7d658 UIKit`_UIViewTopDownSubtreeTraversal + 1496</div><div class="line">    frame #5: 0x000000018a0f3390 UIKit`-[UIView(UIConstraintBasedLayout_EngineDelegate) _invalidateSystemLayoutSizeFittingSizeAtEngineDelegateLevel] + 232</div><div class="line">    frame #6: 0x00000001843832ac Foundation`-[NSISEngine tryToAddConstraintWithMarker:expression:integralizationAdjustment:mutuallyExclusiveConstraints:] + 920</div><div class="line">    frame #7: 0x0000000184382dcc Foundation`-[NSLayoutConstraint _addLoweredExpression:toEngine:integralizationAdjustment:lastLoweredConstantWasRounded:mutuallyExclusiveConstraints:] + 284</div><div class="line">    frame #8: 0x00000001843809e0 Foundation`-[NSLayoutConstraint _addToEngine:integralizationAdjustment:mutuallyExclusiveConstraints:] + 272</div><div class="line">    frame #9: 0x000000018989cfdc UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 396</div><div class="line">    frame #10: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168</div><div class="line">    frame #11: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564</div><div class="line">    frame #12: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224</div><div class="line">    frame #13: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196</div><div class="line">    frame #14: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168</div><div class="line">    frame #15: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564</div><div class="line">    frame #16: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224</div><div class="line">    frame #17: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196</div><div class="line">    frame #18: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168</div><div class="line">    frame #19: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564</div><div class="line">    frame #20: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224</div><div class="line">    frame #21: 0x000000018989cf14 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke_2 + 196</div><div class="line">    frame #22: 0x0000000184380510 Foundation`-[NSISEngine withBehaviors:performModifications:] + 168</div><div class="line">    frame #23: 0x000000018989cde8 UIKit`__57-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:]_block_invoke + 564</div><div class="line">    frame #24: 0x00000001897995e0 UIKit`-[UIView(AdditionalLayoutSupport) _switchToLayoutEngine:] + 224</div><div class="line">    frame #25: 0x00000001898a4bb0 UIKit`-[UIWindow(UIConstraintBasedLayout) _switchToLayoutEngine:] + 72</div><div class="line">    frame #26: 0x00000001898a4b04 UIKit`-[UIWindow(UIConstraintBasedLayout) _initializeLayoutEngine] + 256</div><div class="line">    frame #27: 0x00000001898a4910 UIKit`-[UIView(UIConstraintBasedLayout) _layoutEngine_windowDidChange] + 132</div><div class="line">    frame #28: 0x00000001897996dc UIKit`-[UIView(Internal) _didMoveFromWindow:toWindow:] + 200</div><div class="line">    frame #29: 0x0000000189798d90 UIKit`__45-[UIView(Hierarchy) _postMovedFromSuperview:]_block_invoke + 156</div><div class="line">    frame #30: 0x0000000189798be8 UIKit`-[UIView(Hierarchy) _postMovedFromSuperview:] + 792</div><div class="line">    frame #31: 0x00000001897a4ad0 UIKit`-[UIView(Internal) _addSubview:positioned:relativeTo:] + 1788</div><div class="line">    frame #32: 0x00000001897a43bc UIKit`-[UIView(Hierarchy) addSubview:] + 828</div><div class="line">  * frame #33: 0x00000001004f78ec Project_ent`__31-[EsfCommentReportView show]_block_invoke((null)=&lt;unavailable&gt;) + 228 at EsfCommentReportView.m:293</div><div class="line">    frame #34: 0x00000001897d2b88 UIKit`+[UIView(UIViewAnimationWithBlocks) _setupAnimationWithDuration:delay:view:options:factory:animations:start:animationStateGenerator:completion:] + 660</div><div class="line">    frame #35: 0x00000001897d28e8 UIKit`+[UIView(UIViewAnimationWithBlocks) animateWithDuration:animations:] + 56</div><div class="line">    frame #36: 0x00000001004f77a0 Project_ent`-[EsfCommentReportView show](self=0x000000015fe32020, _cmd=&quot;show&quot;) + 492 at EsfCommentReportView.m:291</div><div class="line">    frame #37: 0x0000000100858a04 Project_ent`__53-[BuyerAdviserProfileViewController reportAction:]_block_invoke((null)=&lt;unavailable&gt;) + 308 at BuyerAdviserProfileViewController.m:174</div><div class="line">    frame #38: 0x00000001003f93e4 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:sourceType:afterCheckOrLogin:cancelLogin:](self=MyLoginViewController, _cmd=&quot;ifShouldLoginFromViewController:sourceType:afterCheckOrLogin:cancelLogin:&quot;, viewController=0x000000015fd2e320, sourceType=2, afterCheckOrLogin=0x00000001008588d0, cancelLogin=(null)) + 236 at MyLoginViewController.m:123</div><div class="line">    frame #39: 0x00000001003f92b0 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:afterCheckOrLogin:cancelLogin:](self=MyLoginViewController, _cmd=&quot;ifShouldLoginFromViewController:afterCheckOrLogin:cancelLogin:&quot;, viewController=0x000000015fd2e320, afterCheckOrLogin=0x00000001008588d0, cancelLogin=(null)) + 156 at MyLoginViewController.m:114</div><div class="line">    frame #40: 0x00000001003f9124 Project_ent`+[MyLoginViewController ifShouldLoginFromViewController:afterCheckOrLogin:](self=MyLoginViewController, _cmd=&quot;ifShouldLoginFromViewController:afterCheckOrLogin:&quot;, viewController=0x000000015fd2e320, afterCheckOrLogin=0x00000001008588d0) + 120 at MyLoginViewController.m:104</div><div class="line">    frame #41: 0x0000000100858870 Project_ent`-[BuyerAdviserProfileViewController reportAction:](self=0x000000015fd2e320, _cmd=&quot;reportAction:&quot;, button=0x000000015fe26650) + 452 at BuyerAdviserProfileViewController.m:156</div><div class="line">    frame #42: 0x00000001897d27b0 UIKit`-[UIApplication sendAction:to:from:forEvent:] + 96</div><div class="line">    frame #43: 0x00000001897d2730 UIKit`-[UIControl sendAction:to:forEvent:] + 80</div><div class="line">    frame #44: 0x00000001897bcbe4 UIKit`-[UIControl _sendActionsForEvents:withEvent:] + 452</div><div class="line">    frame #45: 0x00000001897d201c UIKit`-[UIControl touchesEnded:withEvent:] + 584</div><div class="line">    frame #46: 0x00000001897d1b44 UIKit`-[UIWindow _sendTouchesForEvent:] + 2484</div><div class="line">    frame #47: 0x00000001897ccd8c UIKit`-[UIWindow sendEvent:] + 2988</div><div class="line">    frame #48: 0x000000018979d858 UIKit`-[UIApplication sendEvent:] + 340</div><div class="line">    frame #49: 0x0000000189f8acb8 UIKit`__dispatchPreprocessedEventFromEventQueue + 2736</div><div class="line">    frame #50: 0x0000000189f84720 UIKit`__handleEventQueue + 784</div><div class="line">    frame #51: 0x0000000183902278 CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 24</div><div class="line">    frame #52: 0x0000000183901bc0 CoreFoundation`__CFRunLoopDoSources0 + 524</div><div class="line">    frame #53: 0x00000001838ff7c0 CoreFoundation`__CFRunLoopRun + 804</div><div class="line">    frame #54: 0x000000018382e048 CoreFoundation`CFRunLoopRunSpecific + 444</div><div class="line">    frame #55: 0x00000001852b1198 GraphicsServices`GSEventRunModal + 180</div><div class="line">    frame #56: 0x0000000189808628 UIKit`-[UIApplication _run] + 684</div><div class="line">    frame #57: 0x0000000189803360 UIKit`UIApplicationMain + 208</div><div class="line">    frame #58: 0x0000000100a3db78 Project_ent`main + 460 at main.swift:24</div><div class="line">    frame #59: 0x00000001828105b8 libdyld.dylib`start + 4</div><div class="line">(lldb)</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Xcode8打包脚本]]></title>
      <url>https://madordie.github.io/2016/09/26/build-ipa-sh/</url>
      <content type="html"><![CDATA[<p>Xcode8下的打包脚本</p>
<a id="more"></a>
<h2 id="Xcode8"><a href="#Xcode8" class="headerlink" title="Xcode8"></a>Xcode8</h2><p>  好悲催，Xcode8更新之后Jenkins打包失败了。。由于代码库中使用了swift3语法，故必须使用Xcode8。。</p>
<p>  先来重点：可用脚本：</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment">#   追上fir API token 自动上传</span></div><div class="line"><span class="comment">#   基于当前代码进行打包打包目录：MyProject/build/MyProject_ent.ipa</span></div><div class="line"></div><div class="line"><span class="built_in">cd</span> MyProject</div><div class="line"></div><div class="line">rm -rf ./build/*</div><div class="line"></div><div class="line">xcodebuild -archivePath <span class="string">"./build/xxx.xcarchive"</span> -workspace MyProject.xcworkspace -sdk iphoneos -scheme <span class="string">"MyProject_ent"</span> -configuration <span class="string">"Release Inhouse"</span> archive</div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"&lt;?xml version="</span>1.0<span class="string">" encoding="</span>UTF-8<span class="string">"?&gt;&lt;!DOCTYPE plist PUBLIC "</span>-//Apple//DTD PLIST 1.0//EN<span class="string">" "</span>http://www.apple.com/DTDs/PropertyList-1.0.dtd<span class="string">"&gt;&lt;plist version="</span>1.0<span class="string">"&gt;&lt;dict&gt;&lt;key&gt;method&lt;/key&gt;&lt;string&gt;enterprise&lt;/string&gt;&lt;key&gt;compileBitcode&lt;/key&gt;&lt;string&gt;YES&lt;/string&gt;&lt;/dict&gt;&lt;/plist&gt;"</span> &gt; ./build/<span class="built_in">export</span>OptionsPlist.plist</div><div class="line"></div><div class="line">xcodebuild -exportArchive -archivePath <span class="string">"./build/xxx.xcarchive"</span> -exportPath <span class="string">"./build/"</span> -exportOptionsPlist ./build/<span class="built_in">export</span>OptionsPlist.plist</div><div class="line"></div><div class="line"></div><div class="line"><span class="built_in">cd</span> build/</div><div class="line"></div><div class="line">fir i ./MyProject_ent.ipa</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$1</span>"</span> ]; <span class="keyword">then</span></div><div class="line">    git <span class="built_in">log</span> -10 &gt; git.log</div><div class="line">    fir p ./MyProject_ent.ipa -T <span class="variable">$1</span> -c git.log</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<p>  之前漏掉了一个错误：<code>The flag -exportFormat cannot be specified along with -exportOptionsPlist</code> 导致了最终包签名错误，而无法安装。</p>
<p>  exportOptionsPlist参考的<a href="https://testerhome.com/topics/4619" target="_blank" rel="external">iOS 打包总结</a></p>
<h2 id="手动上传"><a href="#手动上传" class="headerlink" title="手动上传"></a>手动上传</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line">#   追上fir API token 自动上传</div><div class="line">#   基于当前代码进行打包打包目录：xxxx/build/xxxx_ent.ipa</div><div class="line"></div><div class="line">workspace_name=xxxx</div><div class="line">scheme_name=xxxx_ent</div><div class="line"></div><div class="line"></div><div class="line">cd $workspace_name</div><div class="line"></div><div class="line">rm -rf ./build/*</div><div class="line"></div><div class="line">xcodebuild -archivePath &quot;./build/xxx.xcarchive&quot; -workspace $workspace_name.xcworkspace -sdk iphoneos -scheme $scheme_name -configuration &quot;Release Inhouse&quot; archive</div><div class="line"></div><div class="line"></div><div class="line">cat &lt;&lt; EOF &gt; ./build/exportOptionsPlist.plist</div><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</div><div class="line">&lt;plist version=&quot;1.0&quot;&gt;</div><div class="line">    &lt;dict&gt;</div><div class="line">        &lt;key&gt;method&lt;/key&gt;</div><div class="line">        &lt;string&gt;enterprise&lt;/string&gt;</div><div class="line">        &lt;key&gt;compileBitcode&lt;/key&gt;</div><div class="line">            &lt;false/&gt;</div><div class="line">    &lt;/dict&gt;</div><div class="line">&lt;/plist&gt;</div><div class="line">EOF</div><div class="line"></div><div class="line">xcodebuild -exportArchive -archivePath &quot;./build/xxx.xcarchive&quot; -exportOptionsPlist &quot;./build/exportOptionsPlist.plist&quot; -exportPath &quot;./build/&quot;</div><div class="line"></div><div class="line">cd build/</div><div class="line"></div><div class="line"></div><div class="line">git log -10 &gt; git.log</div><div class="line"></div><div class="line">#拷贝ipa到临时文件夹中</div><div class="line">cp ./$scheme_name.ipa ./tmp.zip</div><div class="line">#将ipa解压</div><div class="line">unzip tmp.zip</div><div class="line"></div><div class="line">#app文件中Info.plist文件路径</div><div class="line">app_infoplist_path=$(pwd)/Payload/*.app/Info.plist</div><div class="line">#取bundleIdentifier</div><div class="line">bundleIdentifier=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleIdentifier&quot; $&#123;app_infoplist_path&#125;)</div><div class="line">#取build值</div><div class="line">bundleVersion=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleVersion&quot; $&#123;app_infoplist_path&#125;)</div><div class="line">#显示名称</div><div class="line">ipa_name=$workspace_name</div><div class="line"></div><div class="line">#ipa下载url</div><div class="line">ipa_download_url=&quot;https://***/install_ipa/raw/master/xxxx_ent.ipa&quot;</div><div class="line">#itms-services协议串</div><div class="line">ios_install_url=&quot;itms-services://?action=download-manifest&amp;url=https://***/install_ipa/raw/master/xxxx_ent.plist&quot;</div><div class="line"></div><div class="line">#生成install.html文件</div><div class="line"></div><div class="line">cat &lt;&lt; EOF &gt; index.html</div><div class="line">&lt;!DOCTYPE HTML&gt;</div><div class="line">&lt;html&gt;</div><div class="line">  &lt;head&gt;</div><div class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</div><div class="line">    &lt;title&gt;安装&lt;/title&gt;</div><div class="line">  &lt;/head&gt;</div><div class="line">  &lt;body&gt;</div><div class="line">    &lt;br&gt;</div><div class="line">    &lt;br&gt;</div><div class="line">    &lt;br&gt;</div><div class="line">    &lt;br&gt;</div><div class="line">    &lt;p align=center&gt;</div><div class="line">        &lt;font size=&quot;8&quot;&gt;</div><div class="line">            &lt;a href=&quot;$&#123;ios_install_url&#125;&quot;&gt;点击这里安装&lt;/a&gt;</div><div class="line">        &lt;/font&gt;</div><div class="line">    &lt;/p&gt;</div><div class="line"></div><div class="line">    &lt;/div&gt;</div><div class="line">  &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div><div class="line">EOF</div><div class="line"></div><div class="line">#生成plist文件</div><div class="line">cat &lt;&lt; EOF &gt; $&#123;workspace_name&#125;.plist</div><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</div><div class="line">&lt;plist version=&quot;1.0&quot;&gt;</div><div class="line">&lt;dict&gt;</div><div class="line">   &lt;key&gt;items&lt;/key&gt;</div><div class="line">   &lt;array&gt;</div><div class="line">       &lt;dict&gt;</div><div class="line">           &lt;key&gt;assets&lt;/key&gt;</div><div class="line">           &lt;array&gt;</div><div class="line">               &lt;dict&gt;</div><div class="line">                   &lt;key&gt;kind&lt;/key&gt;</div><div class="line">                   &lt;string&gt;software-package&lt;/string&gt;</div><div class="line">                   &lt;key&gt;url&lt;/key&gt;</div><div class="line">                   &lt;string&gt;$&#123;ipa_download_url&#125;&lt;/string&gt;</div><div class="line">               &lt;/dict&gt;</div><div class="line">               &lt;dict&gt;</div><div class="line">                   &lt;key&gt;kind&lt;/key&gt;</div><div class="line">                   &lt;string&gt;display-image&lt;/string&gt;</div><div class="line">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class="line">                   &lt;true/&gt;</div><div class="line">                   &lt;key&gt;url&lt;/key&gt;</div><div class="line">                   &lt;string&gt;http://git.oschina.net/logo.svg&lt;/string&gt;</div><div class="line">               &lt;/dict&gt;</div><div class="line">           &lt;dict&gt;</div><div class="line">                   &lt;key&gt;kind&lt;/key&gt;</div><div class="line">                   &lt;string&gt;full-size-image&lt;/string&gt;</div><div class="line">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class="line">                   &lt;true/&gt;</div><div class="line">                   &lt;key&gt;url&lt;/key&gt;</div><div class="line">                   &lt;string&gt;http://git.oschina.net/logo.svg&lt;/string&gt;</div><div class="line">               &lt;/dict&gt;</div><div class="line">           &lt;/array&gt;&lt;key&gt;metadata&lt;/key&gt;</div><div class="line">           &lt;dict&gt;</div><div class="line">               &lt;key&gt;bundle-identifier&lt;/key&gt;</div><div class="line">               &lt;string&gt;$&#123;bundleIdentifier&#125;&lt;/string&gt;</div><div class="line">               &lt;key&gt;bundle-version&lt;/key&gt;</div><div class="line">               &lt;string&gt;$&#123;bundleVersion&#125;&lt;/string&gt;</div><div class="line">               &lt;key&gt;kind&lt;/key&gt;</div><div class="line">               &lt;string&gt;software&lt;/string&gt;</div><div class="line">               &lt;key&gt;subtitle&lt;/key&gt;</div><div class="line">               &lt;string&gt;$&#123;ipa_name&#125;&lt;/string&gt;</div><div class="line">               &lt;key&gt;title&lt;/key&gt;</div><div class="line">               &lt;string&gt;$&#123;ipa_name&#125;&lt;/string&gt;</div><div class="line">           &lt;/dict&gt;</div><div class="line">       &lt;/dict&gt;</div><div class="line">   &lt;/array&gt;</div><div class="line">&lt;/dict&gt;</div><div class="line">&lt;/plist&gt;</div><div class="line">EOF</div><div class="line"></div><div class="line">fir i $scheme_name.ipa</div></pre></td></tr></table></figure>
<h2 id="手动上传到OSC脚本"><a href="#手动上传到OSC脚本" class="headerlink" title="手动上传到OSC脚本"></a>手动上传到OSC脚本</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line">root_path=$(pwd)</div><div class="line">workspace_name=Fangduoduo</div><div class="line">scheme_name=XXX</div><div class="line"></div><div class="line"># 编译</div><div class="line">cd $root_path</div><div class="line">cd $workspace_name</div><div class="line"></div><div class="line">rm -rf ./build/*</div><div class="line"></div><div class="line">xcodebuild -archivePath ./build/$scheme_name.xcarchive -workspace $workspace_name.xcworkspace -sdk iphoneos -scheme $scheme_name -configuration &quot;Release Inhouse&quot; archive</div><div class="line"></div><div class="line">echo &quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&lt;plist version=&quot;1.0&quot;&gt;&lt;dict&gt;&lt;key&gt;method&lt;/key&gt;&lt;string&gt;enterprise&lt;/string&gt;&lt;key&gt;compileBitcode&lt;/key&gt;&lt;false/&gt;&lt;/dict&gt;&lt;/plist&gt;&quot; &gt; ./build/exportOptionsPlist.plist</div><div class="line"></div><div class="line">xcodebuild -exportArchive -archivePath ./build/$scheme_name.xcarchive -exportOptionsPlist &quot;./build/exportOptionsPlist.plist&quot; -exportPath &quot;./build/&quot;</div><div class="line"></div><div class="line"></div><div class="line">cd build/</div><div class="line"></div><div class="line">if [ ! -f $scheme_name.ipa ]; then</div><div class="line">    echo &quot;*** 无法打包 ***&quot;</div><div class="line">    exit -1</div><div class="line">fi</div><div class="line"></div><div class="line">fir i ./$scheme_name.ipa</div><div class="line"></div><div class="line">git log -10 &gt; git.log</div><div class="line">git_log=$(cat git.log)</div><div class="line"># fir 上传</div><div class="line">if [ -n &quot;$1&quot; ]; then</div><div class="line">    fir p ./$scheme_name.ipa -T $1 -c git.log</div><div class="line">fi</div><div class="line"></div><div class="line"></div><div class="line"># 校验HTML并上传</div><div class="line"></div><div class="line">public_git_path=$root_path/public_ipa_tmp/</div><div class="line">public_git_root=&quot;install_ipa&quot;</div><div class="line">public_git=&quot;https://***/install_ipa.git&quot;</div><div class="line">#ipa下载url</div><div class="line">ipa_download_url=&quot;https://***/install_ipa/raw/master/XXX.ipa&quot;</div><div class="line">#itms-services协议串</div><div class="line">ios_install_url=&quot;itms-services://?action=download-manifest&amp;url=https://***/install_ipa/raw/master/XXX.plist&quot;</div><div class="line"></div><div class="line"></div><div class="line">cd $root_path/</div><div class="line"># checkout path is OK</div><div class="line">if [ ! -e $public_git_path ]; then</div><div class="line">    mkdir $public_git_path</div><div class="line">fi</div><div class="line"></div><div class="line">if [ -n $public_git_path ]; then</div><div class="line">    rm -rf $public_git_path</div><div class="line">fi</div><div class="line">mkdir $public_git_path</div><div class="line">cd $public_git_path</div><div class="line">git init</div><div class="line">git remote add origin $public_git</div><div class="line"></div><div class="line"></div><div class="line">cd $root_path/$workspace_name/build/</div><div class="line"></div><div class="line">#拷贝ipa到临时文件夹中</div><div class="line">cp ./$scheme_name.ipa ./tmp.zip</div><div class="line">rm -rf Payload</div><div class="line">#将ipa解压</div><div class="line">unzip tmp.zip</div><div class="line"></div><div class="line">#app文件中Info.plist文件路径</div><div class="line">app_infoplist_path=$(pwd)/Payload/*.app/Info.plist</div><div class="line">#取bundleIdentifier</div><div class="line">bundleIdentifier=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleIdentifier&quot; $&#123;app_infoplist_path&#125;)</div><div class="line">#取build值</div><div class="line">bundleVersion=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleVersion&quot; $&#123;app_infoplist_path&#125;)</div><div class="line">#取shortVersionbuild值</div><div class="line">shortVersion=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleShortVersionString&quot; $&#123;app_infoplist_path&#125;)</div><div class="line">#显示名称</div><div class="line">ipa_name=$(/usr/libexec/PlistBuddy -c &quot;print CFBundleDisplayName&quot; $&#123;app_infoplist_path&#125;)</div><div class="line">nowTime=$(date +%Y-%m-%d\ %H:%M)</div><div class="line">log_url=&quot;https://madordie.github.io/uploads/avatar.png&quot;</div><div class="line"></div><div class="line">#生成install.html文件</div><div class="line"></div><div class="line">cat &lt;&lt; EOF &gt; index.html</div><div class="line">&lt;!DOCTYPE HTML&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</div><div class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=0&quot;&gt;</div><div class="line">&lt;title&gt;$&#123;ipa_name&#125;安装&lt;/title&gt;</div><div class="line">&lt;style&gt;</div><div class="line">.containor &#123;</div><div class="line">    position: relative;</div><div class="line">    top: 0;</div><div class="line">    left: 0;</div><div class="line">    right: 0;</div><div class="line">    margin: 0 auto;</div><div class="line">    width: 100%;</div><div class="line">    max-width: 640px;</div><div class="line">    text-align: center;</div><div class="line">&#125;</div><div class="line">.logo &#123;</div><div class="line">    width: 120px;</div><div class="line">    margin-top: 30px;</div><div class="line">&#125;</div><div class="line">.title,</div><div class="line">.version_history,</div><div class="line">.update_time &#123;</div><div class="line">    text-align: center;</div><div class="line">    color: #999;</div><div class="line">    font-size: 16px;</div><div class="line">&#125;</div><div class="line">.title &#123;</div><div class="line">    margin-top: 10px;</div><div class="line">&#125;</div><div class="line">.version_history,</div><div class="line">.update_time &#123;</div><div class="line">    margin-top: 5px;</div><div class="line">&#125;</div><div class="line">.download &#123;</div><div class="line">    display: block;</div><div class="line">    width: 150px;</div><div class="line">    height: 30px;</div><div class="line">    line-height: 30px;</div><div class="line">    margin: 0 auto;</div><div class="line">    margin-top: 20px;</div><div class="line">    border: 1px solid #eee;</div><div class="line">    border-radius: 20px;</div><div class="line">    text-decoration: none;</div><div class="line">    color: #999;</div><div class="line">&#125;</div><div class="line">.log_title &#123;</div><div class="line">    margin-top: 20px;</div><div class="line">    font-size: 18px;</div><div class="line">    color: #333;</div><div class="line">&#125;</div><div class="line">.log &#123;</div><div class="line">    color: #aaa;</div><div class="line">    padding: 20px;</div><div class="line">    text-align: left;</div><div class="line">    font-size: 12px;</div><div class="line">    line-height: 15px;</div><div class="line">    white-space: pre-wrap;</div><div class="line">    word-wrap: break-word;</div><div class="line">    overflow: hidden;</div><div class="line">&#125;</div><div class="line">&lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;div class=&quot;containor&quot;&gt;</div><div class="line">    &lt;img class=&quot;logo&quot; src=$&#123;log_url&#125; /&gt;</div><div class="line">    &lt;div class=&quot;title&quot;&gt;$ipa_name&lt;/div&gt;</div><div class="line">    &lt;div class=&quot;version_history&quot;&gt;$&#123;shortVersion&#125;(bundle:$&#123;bundleVersion&#125;)&lt;/div&gt;</div><div class="line">    &lt;div&gt;&lt;/div&gt;</div><div class="line">    &lt;div class=&quot;update_time&quot;&gt;$&#123;nowTime&#125;&lt;/div&gt;</div><div class="line">    &lt;a class=&quot;download&quot; href=&quot;$&#123;ios_install_url&#125;&quot;&gt;点击这里安装&lt;/a&gt;</div><div class="line">    &lt;div class=&quot;log_title&quot;&gt;更新日志&lt;/div&gt;</div><div class="line">    &lt;div class=&quot;log&quot;&gt; $&#123;git_log&#125; &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div><div class="line">EOF</div><div class="line"></div><div class="line">#生成plist文件</div><div class="line">cat &lt;&lt; EOF &gt; $&#123;scheme_name&#125;.plist</div><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</div><div class="line">&lt;plist version=&quot;1.0&quot;&gt;</div><div class="line">&lt;dict&gt;</div><div class="line">   &lt;key&gt;items&lt;/key&gt;</div><div class="line">   &lt;array&gt;</div><div class="line">       &lt;dict&gt;</div><div class="line">           &lt;key&gt;assets&lt;/key&gt;</div><div class="line">           &lt;array&gt;</div><div class="line">               &lt;dict&gt;</div><div class="line">                   &lt;key&gt;kind&lt;/key&gt;</div><div class="line">                   &lt;string&gt;software-package&lt;/string&gt;</div><div class="line">                   &lt;key&gt;url&lt;/key&gt;</div><div class="line">                   &lt;string&gt;$&#123;ipa_download_url&#125;&lt;/string&gt;</div><div class="line">               &lt;/dict&gt;</div><div class="line">               &lt;dict&gt;</div><div class="line">                   &lt;key&gt;kind&lt;/key&gt;</div><div class="line">                   &lt;string&gt;display-image&lt;/string&gt;</div><div class="line">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class="line">                   &lt;true/&gt;</div><div class="line">                   &lt;key&gt;url&lt;/key&gt;</div><div class="line">                   &lt;string&gt;http://git.oschina.net/logo.svg&lt;/string&gt;</div><div class="line">               &lt;/dict&gt;</div><div class="line">           &lt;dict&gt;</div><div class="line">                   &lt;key&gt;kind&lt;/key&gt;</div><div class="line">                   &lt;string&gt;full-size-image&lt;/string&gt;</div><div class="line">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class="line">                   &lt;true/&gt;</div><div class="line">                   &lt;key&gt;url&lt;/key&gt;</div><div class="line">                   &lt;string&gt;http://git.oschina.net/logo.svg&lt;/string&gt;</div><div class="line">               &lt;/dict&gt;</div><div class="line">           &lt;/array&gt;&lt;key&gt;metadata&lt;/key&gt;</div><div class="line">           &lt;dict&gt;</div><div class="line">               &lt;key&gt;bundle-identifier&lt;/key&gt;</div><div class="line">               &lt;string&gt;$&#123;bundleIdentifier&#125;&lt;/string&gt;</div><div class="line">               &lt;key&gt;bundle-version&lt;/key&gt;</div><div class="line">               &lt;string&gt;$&#123;bundleVersion&#125;&lt;/string&gt;</div><div class="line">               &lt;key&gt;kind&lt;/key&gt;</div><div class="line">               &lt;string&gt;software&lt;/string&gt;</div><div class="line">               &lt;key&gt;subtitle&lt;/key&gt;</div><div class="line">               &lt;string&gt;$&#123;ipa_name&#125;&lt;/string&gt;</div><div class="line">               &lt;key&gt;title&lt;/key&gt;</div><div class="line">               &lt;string&gt;$&#123;ipa_name&#125;&lt;/string&gt;</div><div class="line">           &lt;/dict&gt;</div><div class="line">       &lt;/dict&gt;</div><div class="line">   &lt;/array&gt;</div><div class="line">&lt;/dict&gt;</div><div class="line">&lt;/plist&gt;</div><div class="line">EOF</div><div class="line"></div><div class="line">#fir i $scheme_name.ipa</div><div class="line">cp $scheme_name.ipa $public_git_path</div><div class="line">cp $scheme_name.plist $public_git_path</div><div class="line">cp index.html $public_git_path</div><div class="line"></div><div class="line">cd $public_git_path</div><div class="line">ls -l &gt; README.md</div><div class="line">if [ ! -e &quot;./.git/&quot; ]; then</div><div class="line">    echo &quot;*** OSC的git目录不完整，无法上传，请联系开发! ***&quot;</div><div class="line">    exit -1</div><div class="line">fi</div><div class="line">echo &quot;commit and pushing ...&quot;</div><div class="line">git add .</div><div class="line">git commit -am $bundleVersion</div><div class="line">git push -f origin master</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[UI素材与代码解耦的讨论与思考]]></title>
      <url>https://madordie.github.io/2016/08/28/ui-source-and-code-decoupling/</url>
      <content type="html"><![CDATA[<p>个人对UI素材和代码的解耦的一些粗浅的看法。比如：解耦方案、是否该解耦。</p>
<a id="more"></a>
<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>  群里听到有人讨论这个话题，当时觉得比较新鲜，就十分好奇的请教了两位经验丰富的@kkk、@AK，虽然未得其中真髓，但是也得到一些自己的思考。总结一下两人的方案，以及自己的思考，</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>  代码内部引入的素材属于设计管理，代码则是码农管理，从这个角度来说两个工做都有码农管理则是一种耦合，为了减轻设计师频繁更换素材而带来的码农的无休止的协作，所以可以进行着方面的解藕。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>  哪坏哪补。有问题就会有解决方案。群中说的<a href="#方案一">方案一</a>由于当时不方便，所以并没有弄明白。<a href="#方案二">方案二</a>、<a href="#方案三">方案三</a>是自己的一些解决方案。</p>
<h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a><a name="方案一">方案一</a></h3><p>  群中讨论的是素材、代码放在一个仓库，分支不同，使用脚本进行整合(其实并没有想明白怎么弄。。下周请教一下)。另外，@夏汁泡泡 还有一个简化就是这个处理的脚本可以放在<a href="https://developer.apple.com/library/ios/recipes/xcode_help-project_editor/Articles/AddingaRunScriptBuildPhase.html" target="_blank" rel="external">Add Run Script Build Phase</a>，暴露出来已知的问题：</p>
<ul>
<li>操作麻烦</li>
<li>图片可能重复</li>
<li>命名规范</li>
</ul>
<h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a><a name="方案二">方案二</a></h3><p>  按照Pods的集成方式，可以将素材看作一个第三方库，直接将素材做成一个bundle，采用Pods私有库或者其他方式放入工程。暴露出来已知的问题：</p>
<ul>
<li>什么时候更新这个bundle</li>
<li>多人合作时这个bundle冲突问题</li>
<li>命名规范</li>
</ul>
<h3 id="方案三"><a href="#方案三" class="headerlink" title="方案三"></a><a name="方案三">方案三</a></h3><p>  工程使用<code>xcassets</code>进行素材打包，然后使用子库进行持续集成。这样，设计师的素材可以放在另一个独立素材仓库，内含更新脚本，直接将素材生成对应的<code>xcassets</code>结构，并上传至子库。这样设计师做完素材直接扔在文件夹中，自动或手动跑一下脚本即可更新到素材仓库。暴露出来已知的问题：</p>
<ul>
<li>由于没有测试过，不知道如果素材比较多的话会不会发生冲突。因该不会吧，都是加文件或者修改😂 (有时间去研究一下之后更新)</li>
<li>命名规范的问题依旧存在</li>
</ul>
<h3 id="方案四"><a href="#方案四" class="headerlink" title="方案四"></a><a name="方案四">方案四</a></h3><p>  <strong> 字体库 </strong>。最近同事提出关于用字体库去存储素材图片的方案。感觉非常的赞，虽然并未实践，但是这种方案就像emoji一样，不但减少了相同图片内容之间存在多个不同尺寸版本的问题，也能够比较好的进行压缩管理。设计师需要做的就是做出一套字体库，然后将所有的素材图全部按照设计字体的方案进行设计和制作，这样在使用的时候只需要导入一个字体文件就好了。对于这个字体文件如何管理都好说，毕竟只有一个字体文件。字体库的制作方面还不是很了解，所以只提着么一下吧嘿嘿。。</p>
<h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>  好了，重要的问题来了，上面的问题都是存在命名规范的问题。此问题如何化解呢？</p>
<p>  素材的引入需根据素材名写入代码中，那么如何才能不用素材名呢？那时不可能的😝，毕竟你要有一个唯一标识符去标志着一个素材。可能有的人说可以做一个json用来保存代码的命名和素材的命名呀，我只想说MDZZ，那不是有两套需要维护的命名规则么。。得不偿失。</p>
<p>  这个命名的问题其实不能复杂化。参看iOS的项目国际化操作，使用一个key作为文案的唯一标识符，需要显示该文案，通过这个唯一标识符就能直接取到。回头看下素材，是不是也能炮制一个呢？</p>
<p>  如果素材名字有统一的规则，就不需要这样的key作为统一标识符，直接使用素材名字即可，这样维护一套素材命名规则总比两套更容易维护。所以，直接使用素材名即可。</p>
<p>  如果素材不能统一命名规则，那么这样的对照文件存在也是很不错的。话又说回来，要进行UI素材和代码的解耦，素材名都不能统一，还如何解耦，此问题也不存在了。。</p>
<p>  退一步，我们的目的是让素材让设计师自己维护，代码不去维护素材。设计师和码农的耦合在于图片本身的交换比较烦。不论采用哪种解耦方案，都是把图片的耦合转换为图片名字的耦合(也可以理解为素材对应的KEY的耦合)。结果是 <strong> 为了解除一个耦合,而引入了一个新的耦合 </strong> 。个人认为这样是不靠谱的。。除非有强力的人去推动设计师走标准的命名。</p>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>  其实这个问题大可不必纠结，如果有强力的人去推动这个标准持续走下去那么这个问题才有价值。如果真的要进行题中说的代码解耦的话，我认为第三种是比较靠谱的。 <strong> 命名标准、命名标准、命名标准… </strong>。</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>  经验有限，如果有更好的方案，望告知。拜谢！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发小记]]></title>
      <url>https://madordie.github.io/2016/07/28/note/</url>
      <content type="html"><![CDATA[<p>开发中的小笔记。记录开发中的点滴滴点。</p>
<a id="more"></a>
<ul>
<li>NAN<ul>
<li>当<code>NSUInteger 0 - 1</code>时，运算结果为 NAN，iOS中有一个宏<code>isnan(x)</code>返回是否为nan。另外这里有一篇文章<a href="http://blog.csdn.net/toss156/article/details/7101885" target="_blank" rel="external">Objective-C 中 判断 NaN</a>大致记录了一下<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//  math.h  #56</span></div><div class="line"></div><div class="line"><span class="meta">#if defined(__GNUC__)</span></div><div class="line"><span class="meta">#   define    HUGE_VAL     __builtin_huge_val()</span></div><div class="line"><span class="meta">#   define    HUGE_VALF    __builtin_huge_valf()</span></div><div class="line"><span class="meta">#   define    HUGE_VALL    __builtin_huge_vall()</span></div><div class="line"><span class="meta">#   define    NAN          __builtin_nanf(<span class="meta-string">"0x7fc00000"</span>)</span></div><div class="line"><span class="meta">#else</span></div><div class="line"><span class="meta">#   define    HUGE_VAL     1e500</span></div><div class="line"><span class="meta">#   define    HUGE_VALF    1e50f</span></div><div class="line"><span class="meta">#   define    HUGE_VALL    1e5000L</span></div><div class="line"><span class="meta">#   define    NAN          __nan()</span></div><div class="line"><span class="meta">#endif</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<ul>
<li>另外，NAN不能直接判断 == 需要调用下面的宏。否则会发生莫名其妙的问题<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">  <span class="comment">//  math.h  #178</span></div><div class="line"></div><div class="line"><span class="meta">#define isnan(x)                                                         \</span></div><div class="line">    ( <span class="keyword">sizeof</span>(x) == <span class="keyword">sizeof</span>(<span class="keyword">float</span>)  ? __inline_isnanf((<span class="keyword">float</span>)(x))          \</div><div class="line">    : <span class="keyword">sizeof</span>(x) == <span class="keyword">sizeof</span>(<span class="keyword">double</span>) ? __inline_isnand((<span class="keyword">double</span>)(x))         \</div><div class="line">                                  : __inline_isnanl((<span class="keyword">long</span> <span class="keyword">double</span>)(x)))</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>论项目架构设计的重要性 </p>
<ul>
<li>规范化</li>
<li>筛选的坑 </li>
<li>常见布局BUG </li>
<li>线程安全</li>
</ul>
</li>
<li><p>百度地图的坑</p>
<ul>
<li>设置经纬度缓慢</li>
<li>刷新缓慢</li>
</ul>
</li>
<li><p>选择图片时候默认方法选择不到系统的云端图片，但是默认单张选择器却可以！</p>
<ul>
<li>16G手机存储空间不够，图片转到了云端，会出现相册中的照片无法选择的情况</li>
</ul>
</li>
<li><p>无埋点技术的讨论</p>
</li>
<li><p>多个window的显示、删除、操作问题</p>
</li>
<li><p>使用HTTP架设日志实时显示系统</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[项目中的UITableView]]></title>
      <url>https://madordie.github.io/2016/07/27/about-project-tableview/</url>
      <content type="html"><![CDATA[<p>前两天听到有人说多人合作的项目并不需要处理很多事情，只需要处理好自己的那部分业务逻辑就好了。感觉这是一个很不负责任的说法。作为一个APP的开发者，自己负责的事其中的一个模块，但是都是这个APP的开发者，也要往里面塞代码，如果每个人都用不同的逻辑风格去组织代码。那么整个项目就是一坨坨坨，这个坨会影响项目的演进、日后的发展。当然有的是看不出来的，比如说：当一个请假的人写的代码出现一个BUG，需要修复上线的时候，对于不同的代码风格，需要找到问题的关键代码，这个过程是撕心裂肺的，但是如果同一套代码风格，心中就会有一个大致的位置，去修改时候就会比较快速的定位问题。</p>
<a id="more"></a>
<h1 id="论项目架构设计的重要性"><a href="#论项目架构设计的重要性" class="headerlink" title="论项目架构设计的重要性"></a>论项目架构设计的重要性</h1><p>前两天听到有人说多人合作的项目并不需要处理很多事情，只需要处理好自己的那部分业务逻辑就好了。感觉这是一个很不负责任的说法。作为一个APP的开发者，自己负责的事其中的一个模块，但是都是这个APP的开发者，也要往里面塞代码，如果每个人都用不同的逻辑风格去组织代码。那么整个项目就是一坨坨坨，这个坨会影响项目的演进、日后的发展。当然有的是看不出来的，比如说：当一个请假的人写的代码出现一个BUG，需要修复上线的时候，对于不同的代码风格，需要找到问题的关键代码，这个过程是撕心裂肺的，但是如果同一套代码风格，心中就会有一个大致的位置，去修改时候就会比较快速的定位问题。</p>
<p>对于无法接受通用的代码风格，只钟爱自己一种代码风格的程序员来说：如果你是刚转行过来的，那么你要走的路还有很长，踩的坑还有很多。积极主动的踩坑，才能不会掉队。</p>
<h1 id="从协议入手"><a href="#从协议入手" class="headerlink" title="从协议入手"></a>从协议入手</h1><p><code>UITableView</code>是项目中非常常见的iOS高级控件，在页面中所有相似的页面几乎都是由该控件进行完成。其广泛运用的不止是使用方便，最主要的是内部的复用优化也是相当给力的。</p>
<h2 id="协议模式下的UITableView"><a href="#协议模式下的UITableView" class="headerlink" title="协议模式下的UITableView"></a>协议模式下的UITableView</h2><p><code>UITableView</code>是典型的 <strong>协议-代理模式</strong> ，比例<code>id &lt;UITableViewDataSource&gt; dataSource</code>和<code>id &lt;UITableViewDelegate&gt; delegate</code>，所以使用对于这种比较规整的列表来说把协议继续扩展到下一级也是可以的。</p>
<p>为了统一<code>UITableView.dataSource</code>和<code>UITableView.delegate</code>，构建如下协议：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//  直接填充Cell的cellModel</span></div><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">CellModelProtocol</span> &lt;<span class="title">NSObject</span>&gt;</span></div><div class="line"></div><div class="line">- (<span class="built_in">NSString</span> *)cellClassName;  <span class="comment">//  cellModel绑定的类名</span></div><div class="line">- (<span class="keyword">void</span>)cellModelForCell:(<span class="built_in">UITableViewCell</span> *)cell; <span class="comment">//  cellModel填充上面绑定的cell</span></div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure></p>
<p>那么只需要在代理中做如下设置:</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#pragma mark <span class="meta-string">&lt;UITableViewDelegate, UITableViewDataSource&gt;</span></span></div><div class="line">- (<span class="built_in">NSInteger</span>)numberOfSectionsInTableView:(<span class="built_in">UITableView</span>*)tableView</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span>*)tableView numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.viewModel.dataSource.count;</div><div class="line">&#125;</div><div class="line">- (<span class="built_in">UITableViewCell</span>*)tableView:(<span class="built_in">UITableView</span>*)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span>*)indexPath</div><div class="line">&#123;</div><div class="line">      <span class="keyword">id</span>&lt;CellModelProtocol&gt; cellModel = <span class="keyword">self</span>.viewModel.dataSource[indexPath.row];</div><div class="line">      <span class="built_in">UITableViewCell</span>* cell = [tableView dequeueReusableCellWithIdentifier:[cellModel cellClassName]];</div><div class="line">      cell.frame = tableView.bounds;</div><div class="line">      [cellModel cellModelForCell:cell];</div><div class="line">      [cell sizeToFit];</div><div class="line">      <span class="keyword">return</span> cell;</div><div class="line">&#125;</div><div class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span>*)tableView heightForRowAtIndexPath:(<span class="built_in">NSIndexPath</span>*)indexPath</div><div class="line">&#123;</div><div class="line">      <span class="keyword">id</span>&lt;CellModelProtocol&gt; cellModel = <span class="keyword">self</span>.viewModel.dataSource[indexPath.row];</div><div class="line">      <span class="built_in">UITableViewCell</span>* cell = [tableView ktj_cacheHeightCellForReuseIDFA:[cellModel cellClassName]];</div><div class="line">      [cellModel cellModelForCell:cell];</div><div class="line">      <span class="keyword">return</span> [cell sizeThatFits:tableView.bounds.size].height;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>而在cell中，默认在<code>sizeThatFits:</code>中进行布局的设置和算高即可。如下：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//  xxxCell.m</span></div><div class="line"></div><div class="line">- (<span class="built_in">CGSize</span>)sizeThatFits:(<span class="built_in">CGSize</span>)size &#123;</div><div class="line">    </div><div class="line">    <span class="built_in">CGRect</span> frame = <span class="built_in">CGRectZero</span>;</div><div class="line">    <span class="comment">//  根据Cell的实际内容进行布局并设置高度</span></div><div class="line">    frame.origin = <span class="built_in">CGPointMake</span>(<span class="number">10</span>, <span class="number">15</span>);</div><div class="line">    frame.size = [<span class="keyword">self</span>.infoLabel sizeThatFits:<span class="built_in">CGSizeMake</span>(size.width-frame.origin.x*<span class="number">2</span>, size.height)];</div><div class="line">    <span class="keyword">self</span>.infoLabel.frame = frame;</div><div class="line">    </div><div class="line">    size.height = <span class="built_in">CGRectGetMaxY</span>(<span class="keyword">self</span>.infoLabel.frame)+frame.origin.y;</div><div class="line">    <span class="keyword">return</span> size;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果cell采用autolayout，则计算采用<a href="https://github.com/forkingdog/UITableView-FDTemplateLayoutCell/blob/e3ee86ce419d18d3ff735056f1474f2863e43003/Classes/UITableView%2BFDTemplateLayoutCell.m" target="_blank" rel="external">UITableView-FDTemplateLayoutCell</a>的计算方法。</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">UITableViewCell</span> (<span class="title">KTJCellAutoLayoutForSize</span>)</span></div><div class="line"><span class="comment">//  autolout布局计算高度</span></div><div class="line">- (<span class="built_in">CGSize</span>)ktj_ALCellSizeThatFits:(<span class="built_in">CGSize</span>)size &#123;</div><div class="line">    <span class="comment">// Add a hard width constraint to make dynamic content views (like labels) expand vertically instead</span></div><div class="line">    <span class="comment">// of growing horizontally, in a flow-layout manner.</span></div><div class="line">    <span class="built_in">NSLayoutConstraint</span> *tempWidthConstraint =</div><div class="line">    [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:<span class="keyword">self</span>.contentView</div><div class="line">                                 attribute:<span class="built_in">NSLayoutAttributeWidth</span></div><div class="line">                                 relatedBy:<span class="built_in">NSLayoutRelationEqual</span></div><div class="line">                                    toItem:<span class="literal">nil</span></div><div class="line">                                 attribute:<span class="built_in">NSLayoutAttributeNotAnAttribute</span></div><div class="line">                                multiplier:<span class="number">1.0</span></div><div class="line">                                  constant:size.width];</div><div class="line">    [<span class="keyword">self</span>.contentView addConstraint:tempWidthConstraint];</div><div class="line">    <span class="comment">// Auto layout engine does its math</span></div><div class="line">    size = [<span class="keyword">self</span>.contentView systemLayoutSizeFittingSize:<span class="built_in">UILayoutFittingCompressedSize</span>];</div><div class="line">    size.height += <span class="number">1</span>;</div><div class="line">    [<span class="keyword">self</span>.contentView removeConstraint:tempWidthConstraint];</div><div class="line">    <span class="keyword">return</span> size;</div><div class="line">&#125;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<p>另外在<code>&lt;UITableViewDelegate, UITableViewDataSource&gt;</code>中只写了1组，只有cell，没有header、footer的情况，如果需要，炮制即可。</p>
<p>说一下这个其中的<code>ktj_cacheHeightCellForReuseIDFA:</code>类别方法。这个方法是为了算高进行缓存的一个cell，这个cell保存在 <code>NSCache</code>中。所以为了统一，需要在数据初始化时候注册所有的cell。当然你也可以根据类名直接生成，这个自主决定。</p>
<p>说到算高，需要说一下这其中的<code>dequeueReusableCellWithIdentifier:</code>方法。该方法是从tableView的缓存池中取出指定ID的cell。请注意是 <strong>取出</strong> ，并且<code>UITableView</code>并没有暴露出如何放进缓存池，也没有必要暴露出放进缓存池的方法。而且<code>UITableView</code>只有一个地方能够接收Cell那就是<code>tableView:cellForRowAtIndexPath:</code>。所以请保证<code>dequeueReusableCellWithIdentifier:</code>取出的方法 <strong>需要通过<code>tableView:cellForRowAtIndexPath:</code>返回给<code>UITableView</code></strong> 。这就是我上面说的<code>ktj_cacheHeightCellForReuseIDFA:</code>方法为何要做一个 cache去缓存我取出的cell，目的是为了减少cell的浪费。</p>
<p>同理，对于<code>UITableView</code>的<code>headerView</code>、<code>footerView</code>来说，可以炮制以上协议、方法。不再赘述</p>
<p>PS.</p>
<ol>
<li><a href="https://github.com/forkingdog/UITableView-FDTemplateLayoutCell" target="_blank" rel="external">UITableView-FDTemplateLayoutCell</a>: <a href="https://github.com/sunnyxx" target="_blank" rel="external">sunnyxx</a>打造的优化UITableView的一个库，6000的star，很赞。</li>
</ol>
<h1 id="规范化的代码风格"><a href="#规范化的代码风格" class="headerlink" title="规范化的代码风格"></a>规范化的代码风格</h1><p>对于多人开发，最崩溃的事情就要数去读别人的代码。就算不是多人开发，接手别人的代码也是让人最崩溃的事情。如果有不用考虑这件事的叫我！</p>
<p>不同的公司可以有不同的代码风格，但是一个公司的代码风格需要保持一致，这样就不会出现一人请假，无人能接受项目的尴尬局面，就算能接，也是需要为了加一个逻辑判断，需要花费很大的精力去处理。</p>
<p>至于其中的代码不统一的坑，恐怕要等踩过才知道吧😂。</p>
<h1 id="业务逻辑的拆分"><a href="#业务逻辑的拆分" class="headerlink" title="业务逻辑的拆分"></a>业务逻辑的拆分</h1><p>对于复杂的业务逻辑，对其拆分是非常重要的，不拆分很可能写出来的代码一个文件 &gt;1000 行。复杂的业务逻辑对于写出来需要一气呵成，修改起来也就出现了牵一发动全身(虽然拆分完成之后可能也会关键逻辑代码不可拆分，但是会好很多)。</p>
<h2 id="筛选重构"><a href="#筛选重构" class="headerlink" title="筛选重构"></a>筛选重构</h2><p>筛选主要处理的是筛选项，针对众多筛选条件拆分为不同的业务逻辑模块是必须的。遵照拆分的原则，于是乎根据UI划分出来位置、价格、户型、筛选、排序这么几个模块。针对每个模块自行处理选中数据、UI展示。对外只暴露选中项输入和选中回调。</p>
<p>对于每个数据大致都可分为一个列表，然后可选中1项或多项。于是乎，这个代码如果不拉出来是要写好多次的，拉出来，但是选中需要把选中的逻辑扔出来，方便自定义。</p>
<h2 id="地图踩坑"><a href="#地图踩坑" class="headerlink" title="地图踩坑"></a>地图踩坑</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于转载的文章]]></title>
      <url>https://madordie.github.io/2016/07/24/about-reprint-article/</url>
      <content type="html"><![CDATA[<p>一点删除原链接的转载文章的牢骚</p>
<a id="more"></a>
<h1 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h1><p>前两天看到朋友圈一个哥们转载了许多关于iOS的一些文章，很是兴奋，去围观。突然发现这文笔绝对是经过校对的。心中大喜，以为淘到宝了（因为文章并没有署名转载出处，所以应该是原创）。之后看了一下他的另一个文章，刚好我百度过这个文章的原作者的最后一个系列的，于是我又翻阅了一下看看是不是不一样，结果和我想的一样，除了删除了作者的署名之外其他的都是一样的。于是关掉了网页，心中默默的鄙视。</p>
<h1 id="关于转载的别人文章"><a href="#关于转载的别人文章" class="headerlink" title="关于转载的别人文章"></a>关于转载的别人文章</h1><p>对于一些大神的技术文章都是喜欢的，爱不释手的那种，我也是。有的能转载的我就转载，不能转载的，我会复制下来，放在我自己的文件夹中，为的是方便查询。在转载的时候我会特意标示转载的地址。而且一般情况下我会在文章的开始写上几句简单的主要的思想（比如：<a href="http://www.cnblogs.com/madordie/p/5159597.html" target="_blank" rel="external">《[转]蓝牙开发》</a>、<a href="http://www.cnblogs.com/madordie/p/4322044.html" target="_blank" rel="external">《[搬运] mac下安装GDB》</a>、<a href="http://www.cnblogs.com/madordie/p/4322042.html" target="_blank" rel="external">《［搬运］MAC 下安装 brew》</a>），当然有时候没来得及的就忘了😂（比如：<a href="http://www.cnblogs.com/madordie/p/4357685.html" target="_blank" rel="external">《[搬运] iOS 7 侧滑返回手势使用和错误集》</a>）。</p>
<p>还有关于文章的排版，殊不知原作者为了让读者更好的阅读会对排版做的比较好，有的人为了阅读方便会去阅读原作者的文章。比如说我这种强迫症。</p>
<h1 id="我对删除原链的转载文章态度"><a href="#我对删除原链的转载文章态度" class="headerlink" title="我对删除原链的转载文章态度"></a>我对删除原链的转载文章态度</h1><p>然后说一下我对于那些抄袭的，然后删除了原链接的人鄙视一下。每一篇文章都是别人花费了大量的精力去完成的，有的为了让读者能够更清楚的理解，所以会在发布的时候找别人去读一读，看能不能理解其中云云。然而对文章的原链接保存是一种对别人劳动成果的尊重，对原作者最基本的尊重。</p>
<p>别的不想多说了。转载请注明出处。谢谢！<br>且行且珍惜。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[准备食用RAC(ReactiveCocoa)的顾虑]]></title>
      <url>https://madordie.github.io/2016/07/12/reactivecocoa-ready-to-use/</url>
      <content type="html"><![CDATA[<p>对于目前的项目，如果引用RAC，会对项目造成哪些影响的相关思考。</p>
<a id="more"></a>
<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>众所周知，RAC很火，有很多崇拜者。本文只是一个新手第一次使用RAC时候所顾忌的一些问题，如果有比较好的解决方案及时告知我，我会及时更改。</p>
<h1 id="OC简单食用方法"><a href="#OC简单食用方法" class="headerlink" title="OC简单食用方法"></a>OC简单食用方法</h1><p>先来个例子代码：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">RACSignal *RSignal = [[<span class="keyword">self</span>.R rac_newValueChannelWithNilValue:@<span class="number">0</span>] startWith:@(<span class="keyword">self</span>.R.value)];</div><div class="line">RACSignal *GSignal = [[<span class="keyword">self</span>.G rac_newValueChannelWithNilValue:@<span class="number">0</span>] startWith:@(<span class="keyword">self</span>.G.value)];</div><div class="line">RACSignal *BSignal = [[<span class="keyword">self</span>.B rac_newValueChannelWithNilValue:@<span class="number">0</span>] startWith:@(<span class="keyword">self</span>.B.value)];</div><div class="line"></div><div class="line"><span class="built_in">NSString</span>*(^valueFormat)(<span class="built_in">NSNumber</span> *value) = ^(<span class="built_in">NSNumber</span> *value) &#123;</div><div class="line">    <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%.0f"</span>, [value doubleValue]*<span class="number">255</span>];</div><div class="line">&#125;;</div><div class="line"></div><div class="line">[RSignal subscribeNext:^(<span class="keyword">id</span> x) &#123;</div><div class="line">    <span class="keyword">self</span>.RVaule.text = valueFormat(x);</div><div class="line">&#125;];</div><div class="line">[GSignal subscribeNext:^(<span class="keyword">id</span> x) &#123;</div><div class="line">    <span class="keyword">self</span>.GValue.text = valueFormat(x);</div><div class="line">&#125;];</div><div class="line">[BSignal subscribeNext:^(<span class="keyword">id</span> x) &#123;</div><div class="line">    <span class="keyword">self</span>.BValue.text = valueFormat(x);</div><div class="line">&#125;];</div></pre></td></tr></table></figure>
<p>是不是超级简单！</p>
<h2 id="顾虑"><a href="#顾虑" class="headerlink" title="顾虑"></a>顾虑</h2><p>可是我有一个问题：</p>
<ul>
<li>OC属于运行时语法，这个里面的<code>id x</code>的不确定因素可能会导致类型识别出现错误。如果说项目是多人维护，那么A可能不知道B写的Signal走的类型是什么，所以这个问题就不适用于松散的多人开发。如果需要使用RAC恐怕需要在项目启动时进行规避这些不确定的问题才能引入。</li>
</ul>
<h1 id="Swift简单食用方法"><a href="#Swift简单食用方法" class="headerlink" title="Swift简单食用方法"></a>Swift简单食用方法</h1><p>在<a href="https://github.com/ReactiveCocoa/ReactiveCocoa" target="_blank" rel="external">ReactiveCocoa</a>的<a href="https://github.com/ReactiveCocoa/ReactiveCocoa#objective-c-and-swift" target="_blank" rel="external">README.md</a>中有这么一段话：</p>
<blockquote>
<h2 id="Objective-C-and-Swift"><a href="#Objective-C-and-Swift" class="headerlink" title="Objective-C and Swift"></a>Objective-C and Swift</h2><p>  Although ReactiveCocoa was started as an Objective-C framework, as of [version<br>  3.0][CHANGELOG], all major feature development is concentrated on the [Swift API][].</p>
<p>  RAC’s [Objective-C API][] and Swift API are entirely separate, but there is<br>  a [bridge][Objective-C Bridging] to convert between the two. This<br>  is mostly meant as a compatibility layer for older ReactiveCocoa projects, or to<br>  use Cocoa extensions which haven’t been added to the Swift API yet.</p>
<p>  The Objective-C API will continue to exist and be supported for the foreseeable<br>  future, but it won’t receive many improvements. For more information about using<br>  this API, please consult our [legacy documentation][].</p>
<p>  <strong>We highly recommend that all new projects use the Swift API.</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用hexo搭建博客]]></title>
      <url>https://madordie.github.io/2016/07/05/use-hexo-setup-blog/</url>
      <content type="html"><![CDATA[<p>这个github.io搭建的过程参考，以及向百度推送的python、js脚本。</p>
<a id="more"></a>
<h1 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h1><p>感谢 <a href="http://lovenight.github.io" target="_blank" rel="external">岁月如歌</a> 的这个<a href="http://lovenight.github.io/2015/11/10/Hexo-3-1-1-静态博客搭建指南/" target="_blank" rel="external">《Hexo 3.1.1 静态博客搭建指南》</a>同时感谢这个<a href="http://lovenight.github.io/2015/11/18/向百度推送hexo博客所有链接的Python脚本/" target="_blank" rel="external">《向百度推送hexo博客所有链接的Python脚本》</a>(别问我为啥点不开，这个要问博主，不过要看这个文章也不是没办法的😂，因为这个博客也用git管理的。。。你懂)</p>
<p>另外还有一个<a href="http://emufan.com" target="_blank" rel="external">soul</a>的<a href="http://emufan.com/2016/02/18/百度主动推送hexo生成的文章/" target="_blank" rel="external">百度主动推送hexo生成的文章</a></p>
<h1 id="python自动推送脚本修改"><a href="#python自动推送脚本修改" class="headerlink" title="python自动推送脚本修改"></a>python自动推送脚本修改</h1><p>上面说的博主大约用的是windows，所以脚本并不能立马的运行在Mac上，需要做些修改：故修改为：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># @Author: LoveNight</span></div><div class="line"><span class="comment"># @Date:   2015-11-16 20:45:59</span></div><div class="line"><span class="comment"># @Last Modified by:   LoveNight</span></div><div class="line"><span class="comment"># @Last Modified time: 2015-11-18 18:07:19</span></div><div class="line"></div><div class="line"><span class="comment"># @Last Modified by:   Keith</span></div><div class="line"><span class="comment"># @Last Modified time: 2016-07-06 16:22:45</span></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> BS</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="comment">#import msvcrt</span></div><div class="line"></div><div class="line"><span class="string">"""</span></div><div class="line">hexo 博客专用，向百度站长平台提交所有网址</div><div class="line"></div><div class="line">本脚本必须放在hexo博客的根目录下执行！需要已安装生成百度站点地图的插件。</div><div class="line">百度站长平台提交链接：http://zhanzhang.baidu.com/linksubmit/index</div><div class="line">主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。</div><div class="line">从中找到自己的接口调用地址</div><div class="line"></div><div class="line">python环境：</div><div class="line">pip install beautifulsoup4</div><div class="line">pip install requests</div><div class="line">xcode-select --install	</div><div class="line">pip install lxml </div><div class="line"></div><div class="line">"""</div><div class="line"></div><div class="line"><span class="comment"># ❌❌❌ 抄的需要更改这个URL！！这是我的！！❌❌❌</span></div><div class="line">url = <span class="string">'http://data.zz.baidu.com/urls?site=https://madordie.github.io&amp;token=j33t0VEPFl24tJ8N'</span></div><div class="line">baidu_sitemap = os.path.join(sys.path[<span class="number">0</span>], <span class="string">'public'</span>, <span class="string">'baidusitemap.xml'</span>)</div><div class="line">google_sitemap = os.path.join(sys.path[<span class="number">0</span>], <span class="string">'public'</span>, <span class="string">'sitemap.xml'</span>)</div><div class="line">sitemap = [baidu_sitemap, google_sitemap]</div><div class="line"></div><div class="line"><span class="keyword">assert</span> (os.path.exists(baidu_sitemap) <span class="keyword">or</span> os.path.exists(</div><div class="line">    google_sitemap)), <span class="string">"没找到任何网站地图，请检查！"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 从站点地图中读取网址列表</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrls</span><span class="params">()</span>:</span></div><div class="line">    urls = []</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> sitemap:</div><div class="line">        <span class="keyword">if</span> os.path.exists(_):</div><div class="line">            <span class="keyword">with</span> open(_, <span class="string">"r"</span>) <span class="keyword">as</span> f:</div><div class="line">                xml = f.read()</div><div class="line">        soup = BS(xml, <span class="string">"xml"</span>)</div><div class="line">        tags = soup.find_all(<span class="string">"loc"</span>)</div><div class="line">        urls += [x.string <span class="keyword">for</span> x <span class="keyword">in</span> tags]</div><div class="line">        <span class="keyword">if</span> _ == baidu_sitemap:</div><div class="line">            tags = soup.find_all(<span class="string">"breadCrumb"</span>, url=<span class="keyword">True</span>)</div><div class="line">            urls += [x[<span class="string">"url"</span>] <span class="keyword">for</span> x <span class="keyword">in</span> tags]</div><div class="line">    <span class="keyword">return</span> urls</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># POST提交网址列表</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">postUrls</span><span class="params">(urls)</span>:</span></div><div class="line">    urls = set(urls)  <span class="comment"># 先去重</span></div><div class="line">    print(<span class="string">"一共提取出 %s 个网址"</span> % len(urls))</div><div class="line">    print(urls)</div><div class="line">    data = <span class="string">"\n"</span>.join(urls)</div><div class="line">    <span class="keyword">return</span> requests.post(url, data=data).text</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line"></div><div class="line">    urls = getUrls()</div><div class="line">    result = postUrls(urls)</div><div class="line">    print(<span class="string">"提交结果："</span>)</div><div class="line">    print(result)</div><div class="line"><span class="comment">#    msvcrt.getch()</span></div></pre></td></tr></table></figure>
<h1 id="js脚本"><a href="#js脚本" class="headerlink" title="js脚本"></a>js脚本</h1><p>这个脚本是我在<a href="http://emufan.com" target="_blank" rel="external">soul</a>的<a href="http://emufan.com/2016/02/18/百度主动推送hexo生成的文章/" target="_blank" rel="external">百度主动推送hexo生成的文章</a>发现的，感觉也很赞。</p>
<blockquote>
<h2 id="github"><a href="#github" class="headerlink" title="github"></a>github</h2><p>  <a href="https://github.com/Relsoul/bdwork/tree/master/soul/hexo百度主动上传" target="_blank" rel="external">脚本地址</a></p>
<h2 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h2><p>  今天发现百度没收录我的站..主要是我的站点换来换去的..估计被ban了..然后想用sitemap来推送一下..结果发现github禁用了百度爬虫..没办法只能主动推送了.</p>
<h2 id="利用插件"><a href="#利用插件" class="headerlink" title="利用插件"></a>利用插件</h2><p>  这里利用到了一款插件<br>  <a href="https://github.com/coneycode/hexo-generator-baidu-sitemap" target="_blank" rel="external">hexo-generator-baidu-sitemap</a><br>  设置很简单 只需要在.config.yml添加一些数据即可, 下面附上我的添加数据 theme这个可以随意更改 下面的copy即可<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Extensions</div><div class="line">## Plugins: http://hexo.io/plugins/</div><div class="line">## Themes: http://hexo.io/themes/</div><div class="line">theme: yilia</div><div class="line">baidusitemap:</div><div class="line">path: baidusitemap.xml</div></pre></td></tr></table></figure></p>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>  然后hexo g 生成一下数据 会在public下面发现一个文件名为baidusitemap.xml</p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p>  这里用nodejs写了一款脚本 大概流程是 获取baidusitemap.xml里面的内容 然后读取本地的一个site_file.json这个文件 这个文件存储的是上一次数据 与上一次数据进行对比 如果对比发现新数据那么就上传新数据 否则全部上传.</p>
<h2 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h2><p>  把ActivePush.js脚本放在hexo文件夹主目录 然后用nodejs ActivePush.js一下即可 这里还支持一个参数nodejs ActivePush.js all 则是不对比直接上传数据</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[博客迁移公告]]></title>
      <url>https://madordie.github.io/2016/07/05/about-change-blog/</url>
      <content type="html"><![CDATA[<p>你敢信！我又搬家了。。</p>
<p>之前在<a href="http://www.cnblogs.com/madordie/" target="_blank" rel="external">博客园</a>后来又去了<a href="http://madordie.leanote.com" target="_blank" rel="external">蚂蚁笔记</a>，最后吧，我就到了<a href="https://madordie.github.io">这里</a>。</p>
<p>说下大体感受：</p>
<p><a href="http://www.cnblogs.com" target="_blank" rel="external">博客园</a>挺好的，不过不喜欢其编码方式，真的不喜欢。博客园的主题什么的都是可以定制，但是总归是写起来比较费劲的。</p>
<p><a href="https://leanote.com" target="_blank" rel="external">蚂蚁笔记</a>不错，我开始时候logo还不是这个<img src="http://7xvzwi.com1.z0.glb.clouddn.com/leanote_new_logo.png" width="35" alt="新logo">原来logo是<img src="http://7xvzwi.com1.z0.glb.clouddn.com/leanote_old_logo.png" width="35" alt="旧logo">😂,不过现在已经很厉害了，开始了各种业务。期待会走得更好更远。</p>
<p>我是看了<a href="http://blog.devtang.com" target="_blank" rel="external">巧哥</a>的<a href="http://blog.devtang.com/2012/02/10/setup-blog-based-on-github/" target="_blank" rel="external">这个博文</a>才开始准备转到Github的。。赶脚markdown很好玩，虽然出来很早了，但是并没有仔细的去学习这个语法，于是乎这个博客就用<a href="https://hexo.io" target="_blank" rel="external">hexo</a>进行搭建。</p>
<p>虽然我还不知道怎么让百度收录我的Github，但是主要的是能尝试着自己想试试确没有尝试的事情！</p>
]]></content>
    </entry>
    
  
  
</search>
